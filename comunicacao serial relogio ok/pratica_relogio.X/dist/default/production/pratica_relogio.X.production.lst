

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Jan 10 13:23:53 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 1.41
    64                           ; Generated 25/01/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4550 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataBANK0
    99  00244E                     __pidataBANK0:
   100                           	opt stack 0
   101                           
   102                           ;initializer for _qtdDias_mes
   103  00244E  001F               	dw	31
   104  002450  001C               	dw	28
   105  002452  001F               	dw	31
   106  002454  001E               	dw	30
   107  002456  001F               	dw	31
   108  002458  001E               	dw	30
   109  00245A  001F               	dw	31
   110  00245C  001F               	dw	31
   111  00245E  001E               	dw	30
   112  002460  001F               	dw	31
   113  002462  001E               	dw	30
   114  002464  001F               	dw	31
   115                           
   116                           	psect	smallconst
   117  000800                     __psmallconst:
   118                           	opt stack 0
   119  000800  00                 	db	0
   120  000801                     _dpowers:
   121                           	opt stack 0
   122  000801  0001               	dw	1
   123  000803  000A               	dw	10
   124  000805  0064               	dw	100
   125  000807  03E8               	dw	1000
   126  000809  2710               	dw	10000
   127  00080B                     __end_of_dpowers:
   128                           	opt stack 0
   129  00080B                     STR_12:
   130  00080B  48                 	db	72	;'H'
   131  00080C  4F                 	db	79	;'O'
   132  00080D  52                 	db	82	;'R'
   133  00080E  41                 	db	65	;'A'
   134  00080F  3A                 	db	58	;':'
   135  000810  20                 	db	32
   136  000811  30                 	db	48	;'0'
   137  000812  25                 	db	37
   138  000813  69                 	db	105	;'i'
   139  000814  3A                 	db	58	;':'
   140  000815  30                 	db	48	;'0'
   141  000816  25                 	db	37
   142  000817  69                 	db	105	;'i'
   143  000818  3A                 	db	58	;':'
   144  000819  30                 	db	48	;'0'
   145  00081A  25                 	db	37
   146  00081B  69                 	db	105	;'i'
   147  00081C  00                 	db	0
   148  00081D                     STR_4:
   149  00081D  44                 	db	68	;'D'
   150  00081E  41                 	db	65	;'A'
   151  00081F  54                 	db	84	;'T'
   152  000820  41                 	db	65	;'A'
   153  000821  3A                 	db	58	;':'
   154  000822  20                 	db	32
   155  000823  30                 	db	48	;'0'
   156  000824  25                 	db	37
   157  000825  69                 	db	105	;'i'
   158  000826  2F                 	db	47
   159  000827  30                 	db	48	;'0'
   160  000828  25                 	db	37
   161  000829  69                 	db	105	;'i'
   162  00082A  2F                 	db	47
   163  00082B  25                 	db	37
   164  00082C  69                 	db	105	;'i'
   165  00082D  00                 	db	0
   166  00082E                     STR_8:
   167  00082E  48                 	db	72	;'H'
   168  00082F  4F                 	db	79	;'O'
   169  000830  52                 	db	82	;'R'
   170  000831  41                 	db	65	;'A'
   171  000832  3A                 	db	58	;':'
   172  000833  20                 	db	32
   173  000834  25                 	db	37
   174  000835  69                 	db	105	;'i'
   175  000836  3A                 	db	58	;':'
   176  000837  30                 	db	48	;'0'
   177  000838  25                 	db	37
   178  000839  69                 	db	105	;'i'
   179  00083A  3A                 	db	58	;':'
   180  00083B  30                 	db	48	;'0'
   181  00083C  25                 	db	37
   182  00083D  69                 	db	105	;'i'
   183  00083E  00                 	db	0
   184  00083F                     STR_10:
   185  00083F  48                 	db	72	;'H'
   186  000840  4F                 	db	79	;'O'
   187  000841  52                 	db	82	;'R'
   188  000842  41                 	db	65	;'A'
   189  000843  3A                 	db	58	;':'
   190  000844  20                 	db	32
   191  000845  30                 	db	48	;'0'
   192  000846  25                 	db	37
   193  000847  69                 	db	105	;'i'
   194  000848  3A                 	db	58	;':'
   195  000849  25                 	db	37
   196  00084A  69                 	db	105	;'i'
   197  00084B  3A                 	db	58	;':'
   198  00084C  30                 	db	48	;'0'
   199  00084D  25                 	db	37
   200  00084E  69                 	db	105	;'i'
   201  00084F  00                 	db	0
   202  000850                     STR_11:
   203  000850  48                 	db	72	;'H'
   204  000851  4F                 	db	79	;'O'
   205  000852  52                 	db	82	;'R'
   206  000853  41                 	db	65	;'A'
   207  000854  3A                 	db	58	;':'
   208  000855  20                 	db	32
   209  000856  30                 	db	48	;'0'
   210  000857  25                 	db	37
   211  000858  69                 	db	105	;'i'
   212  000859  3A                 	db	58	;':'
   213  00085A  30                 	db	48	;'0'
   214  00085B  25                 	db	37
   215  00085C  69                 	db	105	;'i'
   216  00085D  3A                 	db	58	;':'
   217  00085E  25                 	db	37
   218  00085F  69                 	db	105	;'i'
   219  000860  00                 	db	0
   220  000861                     STR_3:
   221  000861  44                 	db	68	;'D'
   222  000862  41                 	db	65	;'A'
   223  000863  54                 	db	84	;'T'
   224  000864  41                 	db	65	;'A'
   225  000865  3A                 	db	58	;':'
   226  000866  20                 	db	32
   227  000867  30                 	db	48	;'0'
   228  000868  25                 	db	37
   229  000869  69                 	db	105	;'i'
   230  00086A  2F                 	db	47
   231  00086B  25                 	db	37
   232  00086C  69                 	db	105	;'i'
   233  00086D  2F                 	db	47
   234  00086E  25                 	db	37
   235  00086F  69                 	db	105	;'i'
   236  000870  00                 	db	0
   237  000871                     STR_2:
   238  000871  44                 	db	68	;'D'
   239  000872  41                 	db	65	;'A'
   240  000873  54                 	db	84	;'T'
   241  000874  41                 	db	65	;'A'
   242  000875  3A                 	db	58	;':'
   243  000876  20                 	db	32
   244  000877  25                 	db	37
   245  000878  69                 	db	105	;'i'
   246  000879  2F                 	db	47
   247  00087A  30                 	db	48	;'0'
   248  00087B  25                 	db	37
   249  00087C  69                 	db	105	;'i'
   250  00087D  2F                 	db	47
   251  00087E  25                 	db	37
   252  00087F  69                 	db	105	;'i'
   253  000880  00                 	db	0
   254  000881                     STR_6:
   255  000881  48                 	db	72	;'H'
   256  000882  4F                 	db	79	;'O'
   257  000883  52                 	db	82	;'R'
   258  000884  41                 	db	65	;'A'
   259  000885  3A                 	db	58	;':'
   260  000886  20                 	db	32
   261  000887  25                 	db	37
   262  000888  69                 	db	105	;'i'
   263  000889  3A                 	db	58	;':'
   264  00088A  25                 	db	37
   265  00088B  69                 	db	105	;'i'
   266  00088C  3A                 	db	58	;':'
   267  00088D  30                 	db	48	;'0'
   268  00088E  25                 	db	37
   269  00088F  69                 	db	105	;'i'
   270  000890  00                 	db	0
   271  000891                     STR_7:
   272  000891  48                 	db	72	;'H'
   273  000892  4F                 	db	79	;'O'
   274  000893  52                 	db	82	;'R'
   275  000894  41                 	db	65	;'A'
   276  000895  3A                 	db	58	;':'
   277  000896  20                 	db	32
   278  000897  25                 	db	37
   279  000898  69                 	db	105	;'i'
   280  000899  3A                 	db	58	;':'
   281  00089A  30                 	db	48	;'0'
   282  00089B  25                 	db	37
   283  00089C  69                 	db	105	;'i'
   284  00089D  3A                 	db	58	;':'
   285  00089E  25                 	db	37
   286  00089F  69                 	db	105	;'i'
   287  0008A0  00                 	db	0
   288  0008A1                     STR_9:
   289  0008A1  48                 	db	72	;'H'
   290  0008A2  4F                 	db	79	;'O'
   291  0008A3  52                 	db	82	;'R'
   292  0008A4  41                 	db	65	;'A'
   293  0008A5  3A                 	db	58	;':'
   294  0008A6  20                 	db	32
   295  0008A7  30                 	db	48	;'0'
   296  0008A8  25                 	db	37
   297  0008A9  69                 	db	105	;'i'
   298  0008AA  3A                 	db	58	;':'
   299  0008AB  25                 	db	37
   300  0008AC  69                 	db	105	;'i'
   301  0008AD  3A                 	db	58	;':'
   302  0008AE  25                 	db	37
   303  0008AF  69                 	db	105	;'i'
   304  0008B0  00                 	db	0
   305  0008B1                     STR_1:
   306  0008B1  44                 	db	68	;'D'
   307  0008B2  41                 	db	65	;'A'
   308  0008B3  54                 	db	84	;'T'
   309  0008B4  41                 	db	65	;'A'
   310  0008B5  3A                 	db	58	;':'
   311  0008B6  20                 	db	32
   312  0008B7  25                 	db	37
   313  0008B8  69                 	db	105	;'i'
   314  0008B9  2F                 	db	47
   315  0008BA  25                 	db	37
   316  0008BB  69                 	db	105	;'i'
   317  0008BC  2F                 	db	47
   318  0008BD  25                 	db	37
   319  0008BE  69                 	db	105	;'i'
   320  0008BF  00                 	db	0
   321  0008C0                     STR_5:
   322  0008C0  48                 	db	72	;'H'
   323  0008C1  4F                 	db	79	;'O'
   324  0008C2  52                 	db	82	;'R'
   325  0008C3  41                 	db	65	;'A'
   326  0008C4  3A                 	db	58	;':'
   327  0008C5  20                 	db	32
   328  0008C6  25                 	db	37
   329  0008C7  69                 	db	105	;'i'
   330  0008C8  3A                 	db	58	;':'
   331  0008C9  25                 	db	37
   332  0008CA  69                 	db	105	;'i'
   333  0008CB  3A                 	db	58	;':'
   334  0008CC  25                 	db	37
   335  0008CD  69                 	db	105	;'i'
   336  0008CE  00                 	db	0
   337  0008CF                     STR_21:
   338  0008CF  41                 	db	65	;'A'
   339  0008D0  4C                 	db	76	;'L'
   340  0008D1  41                 	db	65	;'A'
   341  0008D2  52                 	db	82	;'R'
   342  0008D3  4D                 	db	77	;'M'
   343  0008D4  45                 	db	69	;'E'
   344  0008D5  3A                 	db	58	;':'
   345  0008D6  20                 	db	32
   346  0008D7  00                 	db	0
   347  0008D8                     STR_22:
   348  0008D8  41                 	db	65	;'A'
   349  0008D9  00                 	db	0
   350  0000                     
   351                           ; #config settings
   352  0008DA  00                 	db	0	; dummy byte at the end
   353  0000                     
   354                           	psect	nvBANK0
   355  0000BC                     __pnvBANK0:
   356                           	opt stack 0
   357  0000BC                     _flagTela:
   358                           	opt stack 0
   359  0000BC                     	ds	2
   360  0000BE                     _flag_inicializacao:
   361                           	opt stack 0
   362  0000BE                     	ds	2
   363  0000C0                     _flagDisplay:
   364                           	opt stack 0
   365  0000C0                     	ds	2
   366  0000                     _TMR0	set	4054
   367  0000                     _TRISBbits	set	3987
   368  0000                     _PORTB	set	3969
   369  0000                     _LATBbits	set	3978
   370  0000                     _TRISCbits	set	3988
   371  0000                     _TXSTA	set	4012
   372  0000                     _RCSTA	set	4011
   373  0000                     _TXSTAbits	set	4012
   374  0000                     _RCSTAbits	set	4011
   375  0000                     _SPBRG	set	4015
   376  0000                     _TXREG	set	4013
   377  0000                     _RCREG	set	4014
   378  0000                     _PIR1bits	set	3998
   379  0000                     _PORTDbits	set	3971
   380  0000                     _TRISD	set	3989
   381  0000                     _TRISB	set	3987
   382  0000                     _INTCONbits	set	4082
   383  0000                     _T0CONbits	set	4053
   384  0000                     _PEIE	set	32662
   385  0000                     _RCIE	set	31981
   386  0000                     _RCIP	set	31997
   387  0000                     _BRGH	set	32098
   388  0000                     _TXIF	set	31988
   389  0000                     _RCIF	set	31989
   390  0000                     _TMR0IF	set	32658
   391                           
   392                           	psect	cinit
   393  002108                     __pcinit:
   394                           	opt stack 0
   395  002108                     start_initialization:
   396                           	opt stack 0
   397  002108                     __initialization:
   398                           	opt stack 0
   399                           
   400                           ; Initialize objects allocated to BANK0 (24 bytes)
   401                           ; load TBLPTR registers with __pidataBANK0
   402  002108  0E4E               	movlw	low __pidataBANK0
   403  00210A  6EF6               	movwf	tblptrl,c
   404  00210C  0E24               	movlw	high __pidataBANK0
   405  00210E  6EF7               	movwf	tblptrh,c
   406  002110  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   407  002112  6EF8               	movwf	tblptru,c
   408  002114  EE00  F0A4         	lfsr	0,__pdataBANK0
   409  002118  EE10 F018          	lfsr	1,24
   410  00211C                     copy_data0:
   411  00211C  0009               	tblrd		*+
   412  00211E  CFF5 FFEE          	movff	tablat,postinc0
   413  002122  50E5               	movf	postdec1,w,c
   414  002124  50E1               	movf	fsr1l,w,c
   415  002126  E1FA               	bnz	copy_data0
   416                           
   417                           ; Clear objects allocated to BANK0 (28 bytes)
   418  002128  EE00  F088         	lfsr	0,__pbssBANK0
   419  00212C  0E1C               	movlw	28
   420  00212E                     clear_0:
   421  00212E  6AEE               	clrf	postinc0,c
   422  002130  06E8               	decf	wreg,f,c
   423  002132  E1FD               	bnz	clear_0
   424                           
   425                           ; Clear objects allocated to COMRAM (30 bytes)
   426  002134  EE00  F022         	lfsr	0,__pbssCOMRAM
   427  002138  0E1E               	movlw	30
   428  00213A                     clear_1:
   429  00213A  6AEE               	clrf	postinc0,c
   430  00213C  06E8               	decf	wreg,f,c
   431  00213E  E1FD               	bnz	clear_1
   432  002140                     end_of_initialization:
   433                           	opt stack 0
   434  002140                     __end_of__initialization:
   435                           	opt stack 0
   436  002140  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   437  002142  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   438  002144  0E00               	movlw	low (__Lmediumconst shr (0+16))
   439  002146  6EF8               	movwf	tblptru,c
   440  002148  0100               	movlb	0
   441  00214A  EFC9  F009         	goto	_main	;jump to C main() function
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	bssCOMRAM
   452  000022                     __pbssCOMRAM:
   453                           	opt stack 0
   454  000022                     _tempoAlarme:
   455                           	opt stack 0
   456  000022                     	ds	2
   457  000024                     _flagAlarme:
   458                           	opt stack 0
   459  000024                     	ds	2
   460  000026                     _posCursorR:
   461                           	opt stack 0
   462  000026                     	ds	2
   463  000028                     _posCursor:
   464                           	opt stack 0
   465  000028                     	ds	2
   466  00002A                     _i:
   467                           	opt stack 0
   468  00002A                     	ds	2
   469  00002C                     _serial_data:
   470                           	opt stack 0
   471  00002C                     	ds	1
   472  00002D                     _ESTADO_COMUNICACAO:
   473                           	opt stack 0
   474  00002D                     	ds	1
   475  00002E                     _alarme:
   476                           	opt stack 0
   477  00002E                     	ds	6
   478  000034                     _re:
   479                           	opt stack 0
   480  000034                     	ds	6
   481  00003A                     _ca:
   482                           	opt stack 0
   483  00003A                     	ds	6
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           fsr1l	equ	0xFE1
   492                           
   493                           	psect	bssBANK0
   494  000088                     __pbssBANK0:
   495                           	opt stack 0
   496  000088                     _BUFFRESP:
   497                           	opt stack 0
   498  000088                     	ds	7
   499  00008F                     exibirAlarme@string:
   500                           	opt stack 0
   501  00008F                     	ds	2
   502  000091                     exibirHora@string:
   503                           	opt stack 0
   504  000091                     	ds	2
   505  000093                     exibirData@string:
   506                           	opt stack 0
   507  000093                     	ds	2
   508  000095                     _entrar:
   509                           	opt stack 0
   510  000095                     	ds	2
   511  000097                     _T2:
   512                           	opt stack 0
   513  000097                     	ds	2
   514  000099                     _T1:
   515                           	opt stack 0
   516  000099                     	ds	2
   517  00009B                     _contador:
   518                           	opt stack 0
   519  00009B                     	ds	2
   520  00009D                     _dado:
   521                           	opt stack 0
   522  00009D                     	ds	7
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	dataBANK0
   533  0000A4                     __pdataBANK0:
   534                           	opt stack 0
   535  0000A4                     _qtdDias_mes:
   536                           	opt stack 0
   537  0000A4                     	ds	24
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           postdec1	equ	0xFE5
   545                           fsr1l	equ	0xFE1
   546                           
   547                           	psect	cstackBANK0
   548  000060                     __pcstackBANK0:
   549                           	opt stack 0
   550  000060                     ??_SetDDRamAddr:
   551  000060                     ?___lwdiv:
   552                           	opt stack 0
   553  000060                     putsXLCD@buffer:
   554                           	opt stack 0
   555  000060                     ___lwdiv@dividend:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x0
   559  000060                     	ds	2
   560  000062                     ??_ajustarAlarme:
   561  000062                     ___lwdiv@divisor:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x2
   565  000062                     	ds	1
   566  000063                     ??_controlaCursor:
   567  000063                     ??_controlaCursorR:
   568  000063                     OpenXLCD@lcdtype:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x3
   572  000063                     	ds	1
   573  000064                     ___lwdiv@counter:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x4
   577  000064                     	ds	1
   578  000065                     ___lwdiv@quotient:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x5
   582  000065                     	ds	2
   583  000067                     ?___lwmod:
   584                           	opt stack 0
   585  000067                     ___lwmod@dividend:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x7
   589  000067                     	ds	2
   590  000069                     ___lwmod@divisor:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x9
   594  000069                     	ds	2
   595  00006B                     ?_sprintf:
   596                           	opt stack 0
   597  00006B                     sprintf@sp:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0xB
   601  00006B                     	ds	2
   602  00006D                     sprintf@f:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0xD
   606  00006D                     	ds	8
   607  000075                     sprintf@ap:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x15
   611  000075                     	ds	2
   612  000077                     sprintf@flag:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x17
   616  000077                     	ds	1
   617  000078                     sprintf@prec:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x18
   621  000078                     	ds	1
   622  000079                     sprintf@val:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x19
   626  000079                     	ds	2
   627  00007B                     sprintf@c:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x1B
   631  00007B                     	ds	1
   632  00007C                     ?_exibirData:
   633                           	opt stack 0
   634  00007C                     ?_exibirHora:
   635                           	opt stack 0
   636  00007C                     ?_exibirAlarme:
   637                           	opt stack 0
   638  00007C                     exibirData@dia:
   639                           	opt stack 0
   640  00007C                     exibirHora@h:
   641                           	opt stack 0
   642  00007C                     exibirAlarme@h:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x1C
   646  00007C                     	ds	2
   647  00007E                     exibirData@mes:
   648                           	opt stack 0
   649  00007E                     exibirHora@m:
   650                           	opt stack 0
   651  00007E                     exibirAlarme@m:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x1E
   655  00007E                     	ds	2
   656  000080                     exibirData@ano:
   657                           	opt stack 0
   658  000080                     exibirHora@s:
   659                           	opt stack 0
   660  000080                     exibirAlarme@s:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x20
   664  000080                     	ds	2
   665  000082                     putrsXLCD@buffer:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x22
   669  000082                     	ds	2
   670  000084                     ??_atualiza_tela:
   671                           
   672                           ; 1 bytes @ 0x24
   673  000084                     	ds	2
   674  000086                     ??_main:
   675                           
   676                           ; 1 bytes @ 0x26
   677  000086                     	ds	2
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           postdec1	equ	0xFE5
   685                           fsr1l	equ	0xFE1
   686                           
   687                           	psect	cstackCOMRAM
   688  000001                     __pcstackCOMRAM:
   689                           	opt stack 0
   690  000001                     converte_char_hex@dado:
   691                           	opt stack 0
   692  000001                     verifica_b@ano:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x0
   696  000001                     	ds	2
   697  000003                     ??_verifica_b:
   698                           
   699                           ; 1 bytes @ 0x2
   700  000003                     	ds	2
   701  000005                     tratar_relogio@c:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x4
   705  000005                     	ds	2
   706  000007                     tratar_relogio@r:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x6
   710  000007                     	ds	2
   711  000009                     ??_tratar_relogio:
   712                           
   713                           ; 1 bytes @ 0x8
   714  000009                     	ds	9
   715  000012                     ??_SerialRxPinInterrupt:
   716                           
   717                           ; 1 bytes @ 0x11
   718  000012                     	ds	14
   719  000020                     ??_ajustarT1:
   720  000020                     ??_Delay10KTCYx:
   721  000020                     ?_despertar:
   722                           	opt stack 0
   723  000020                     ?_crc16:
   724                           	opt stack 0
   725  000020                     tx_data@data:
   726                           	opt stack 0
   727  000020                     Delay10TCYx@unit:
   728                           	opt stack 0
   729  000020                     Delay1KTCYx@unit:
   730                           	opt stack 0
   731  000020                     ___lwmod@counter:
   732                           	opt stack 0
   733  000020                     tratar_alarme@c:
   734                           	opt stack 0
   735  000020                     crc16@dados:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x1F
   739  000020                     	ds	1
   740  000021                     ??_sprintf:
   741  000021                     SetDDRamAddr@DDaddr:
   742                           	opt stack 0
   743  000021                     WriteCmdXLCD@cmd:
   744                           	opt stack 0
   745  000021                     WriteDataXLCD@data:
   746                           	opt stack 0
   747  000021                     Delay10KTCYx@unit:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x20
   751  000021                     	ds	1
   752  000022                     tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           postdec1	equ	0xFE5
   759                           fsr1l	equ	0xFE1
   760                           
   761                           ; 1 bytes @ 0x21
   762 ;;
   763 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   764 ;;
   765 ;; *************** function _main *****************
   766 ;; Defined at:
   767 ;;		line 15 in file "main.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   781 ;;      Params:         0       0       0       0       0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0
   783 ;;      Temps:          0       2       0       0       0       0       0       0       0
   784 ;;      Totals:         0       2       0       0       0       0       0       0       0
   785 ;;Total ram usage:        2 bytes
   786 ;; Hardware stack levels required when called:    9
   787 ;; This function calls:
   788 ;;		_InitXLCD
   789 ;;		_LCD_Clear
   790 ;;		_ajustarAlarme
   791 ;;		_ajustarT1
   792 ;;		_atualiza_tela
   793 ;;		_despertar
   794 ;;		_despertarAlarme
   795 ;;		_inicializaTela1
   796 ;;		_inicializarUART
   797 ;;		_maquina_estado
   798 ;; This function is called by:
   799 ;;		Startup code after reset
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text0
   804  001392                     __ptext0:
   805                           	opt stack 0
   806  001392                     _main:
   807                           	opt stack 22
   808                           
   809                           ;main.c: 18: ca.ano = 2010;
   810                           
   811                           ;incstack = 0
   812  001392  0E07               	movlw	7
   813  001394  6E3F               	movwf	_ca+5,c
   814  001396  0EDA               	movlw	218
   815  001398  6E3E               	movwf	_ca+4,c
   816                           
   817                           ;main.c: 19: ca.mes = 2;
   818  00139A  0E00               	movlw	0
   819  00139C  6E3D               	movwf	_ca+3,c
   820  00139E  0E02               	movlw	2
   821  0013A0  6E3C               	movwf	_ca+2,c
   822                           
   823                           ;main.c: 20: ca.dia = 28;
   824  0013A2  0E00               	movlw	0
   825  0013A4  6E3B               	movwf	_ca+1,c
   826  0013A6  0E1C               	movlw	28
   827  0013A8  6E3A               	movwf	_ca,c
   828                           
   829                           ;main.c: 21: re.hora=23;
   830  0013AA  0E00               	movlw	0
   831  0013AC  6E39               	movwf	_re+5,c
   832  0013AE  0E17               	movlw	23
   833  0013B0  6E38               	movwf	_re+4,c
   834                           
   835                           ;main.c: 22: re.minuto=59;
   836  0013B2  0E00               	movlw	0
   837  0013B4  6E35               	movwf	_re+1,c
   838  0013B6  0E3B               	movlw	59
   839  0013B8  6E34               	movwf	_re,c
   840                           
   841                           ;main.c: 23: re.segundo=35;
   842  0013BA  0E00               	movlw	0
   843  0013BC  6E37               	movwf	_re+3,c
   844  0013BE  0E23               	movlw	35
   845  0013C0  6E36               	movwf	_re+2,c
   846                           
   847                           ;main.c: 24: alarme.hora = 5;
   848  0013C2  0E00               	movlw	0
   849  0013C4  6E33               	movwf	_alarme+5,c
   850  0013C6  0E05               	movlw	5
   851  0013C8  6E32               	movwf	_alarme+4,c
   852                           
   853                           ;main.c: 25: alarme.minuto = 2;
   854  0013CA  0E00               	movlw	0
   855  0013CC  6E2F               	movwf	_alarme+1,c
   856  0013CE  0E02               	movlw	2
   857  0013D0  6E2E               	movwf	_alarme,c
   858                           
   859                           ;main.c: 26: alarme.segundo = 1;
   860  0013D2  0E00               	movlw	0
   861  0013D4  6E31               	movwf	_alarme+3,c
   862  0013D6  0E01               	movlw	1
   863  0013D8  6E30               	movwf	_alarme+2,c
   864                           
   865                           ;main.c: 27: flagDisplay = 1;
   866  0013DA  0E00               	movlw	0
   867  0013DC  0100               	movlb	0	; () banked
   868  0013DE  6FC1               	movwf	(_flagDisplay+1)& (0+255),b
   869  0013E0  0E01               	movlw	1
   870  0013E2  6FC0               	movwf	_flagDisplay& (0+255),b
   871                           
   872                           ;main.c: 28: flag_inicializacao = 1;
   873  0013E4  0E00               	movlw	0
   874  0013E6  0100               	movlb	0	; () banked
   875  0013E8  6FBF               	movwf	(_flag_inicializacao+1)& (0+255),b
   876  0013EA  0E01               	movlw	1
   877  0013EC  6FBE               	movwf	_flag_inicializacao& (0+255),b
   878                           
   879                           ;main.c: 29: contador = 0;
   880  0013EE  0E00               	movlw	0
   881  0013F0  0100               	movlb	0	; () banked
   882  0013F2  6F9C               	movwf	(_contador+1)& (0+255),b
   883  0013F4  0E00               	movlw	0
   884  0013F6  6F9B               	movwf	_contador& (0+255),b
   885                           
   886                           ;main.c: 30: flagTela = 1;
   887  0013F8  0E00               	movlw	0
   888  0013FA  0100               	movlb	0	; () banked
   889  0013FC  6FBD               	movwf	(_flagTela+1)& (0+255),b
   890  0013FE  0E01               	movlw	1
   891  001400  6FBC               	movwf	_flagTela& (0+255),b
   892                           
   893                           ;main.c: 31: T1 = 0;
   894  001402  0E00               	movlw	0
   895  001404  0100               	movlb	0	; () banked
   896  001406  6F9A               	movwf	(_T1+1)& (0+255),b
   897  001408  0E00               	movlw	0
   898  00140A  6F99               	movwf	_T1& (0+255),b
   899                           
   900                           ;main.c: 32: T2 = 0;
   901  00140C  0E00               	movlw	0
   902  00140E  0100               	movlb	0	; () banked
   903  001410  6F98               	movwf	(_T2+1)& (0+255),b
   904  001412  0E00               	movlw	0
   905  001414  6F97               	movwf	_T2& (0+255),b
   906                           
   907                           ;main.c: 33: posCursor = 0;
   908  001416  0E00               	movlw	0
   909  001418  6E29               	movwf	_posCursor+1,c
   910  00141A  0E00               	movlw	0
   911  00141C  6E28               	movwf	_posCursor,c
   912                           
   913                           ;main.c: 34: posCursorR = 0;
   914  00141E  0E00               	movlw	0
   915  001420  6E27               	movwf	_posCursorR+1,c
   916  001422  0E00               	movlw	0
   917  001424  6E26               	movwf	_posCursorR,c
   918                           
   919                           ;main.c: 35: tempoAlarme = 0;
   920  001426  0E00               	movlw	0
   921  001428  6E23               	movwf	_tempoAlarme+1,c
   922  00142A  0E00               	movlw	0
   923  00142C  6E22               	movwf	_tempoAlarme,c
   924                           
   925                           ; BSR set to: 0
   926                           ;main.c: 37: T0CONbits.TMR0ON=1;
   927  00142E  8ED5               	bsf	4053,7,c	;volatile
   928                           
   929                           ; BSR set to: 0
   930                           ;main.c: 38: INTCONbits.TMR0IE=1;
   931  001430  8AF2               	bsf	intcon,5,c	;volatile
   932                           
   933                           ; BSR set to: 0
   934                           ;main.c: 39: INTCONbits.TMR0IF=0;
   935  001432  94F2               	bcf	intcon,2,c	;volatile
   936                           
   937                           ; BSR set to: 0
   938                           ;main.c: 41: T0CONbits.T08BIT=0;
   939  001434  9CD5               	bcf	4053,6,c	;volatile
   940                           
   941                           ; BSR set to: 0
   942                           ;main.c: 42: T0CONbits.PSA=0;
   943  001436  96D5               	bcf	4053,3,c	;volatile
   944                           
   945                           ; BSR set to: 0
   946                           ;main.c: 43: T0CONbits.T0PS0=1;
   947  001438  80D5               	bsf	4053,0,c	;volatile
   948                           
   949                           ; BSR set to: 0
   950                           ;main.c: 44: T0CONbits.T0PS1=0;
   951  00143A  92D5               	bcf	4053,1,c	;volatile
   952                           
   953                           ; BSR set to: 0
   954                           ;main.c: 45: T0CONbits.T0PS2=1;
   955  00143C  84D5               	bsf	4053,2,c	;volatile
   956                           
   957                           ; BSR set to: 0
   958                           ;main.c: 46: T0CONbits.T0CS=0;
   959  00143E  9AD5               	bcf	4053,5,c	;volatile
   960                           
   961                           ;main.c: 48: TMR0=2535;
   962  001440  0E09               	movlw	9
   963  001442  6ED7               	movwf	4055,c	;volatile
   964  001444  0EE7               	movlw	231
   965  001446  6ED6               	movwf	4054,c	;volatile
   966                           
   967                           ; BSR set to: 0
   968                           ;main.c: 50: T0CONbits.TMR0ON=1;
   969  001448  8ED5               	bsf	4053,7,c	;volatile
   970                           
   971                           ;main.c: 52: TRISB = 0;
   972  00144A  0E00               	movlw	0
   973  00144C  6E93               	movwf	3987,c	;volatile
   974                           
   975                           ;main.c: 53: TRISD = 1;
   976  00144E  0E01               	movlw	1
   977  001450  6E95               	movwf	3989,c	;volatile
   978                           
   979                           ; BSR set to: 0
   980                           ;main.c: 56: INTCONbits.GIEH=1;
   981  001452  8EF2               	bsf	intcon,7,c	;volatile
   982                           
   983                           ; BSR set to: 0
   984                           ;main.c: 57: INTCONbits.GIEL=1;
   985  001454  8CF2               	bsf	intcon,6,c	;volatile
   986                           
   987                           ; BSR set to: 0
   988                           ;main.c: 59: InitXLCD();
   989  001456  EC47  F012         	call	_InitXLCD	;wreg free
   990                           
   991                           ;main.c: 60: inicializaTela1();
   992  00145A  EC70  F00E         	call	_inicializaTela1	;wreg free
   993                           
   994                           ;main.c: 61: inicializarUART();
   995  00145E  ECB7  F011         	call	_inicializarUART	;wreg free
   996  001462                     l4163:
   997                           
   998                           ;main.c: 65: if(flagDisplay == 1){
   999  001462  0100               	movlb	0	; () banked
  1000  001464  05C0               	decf	_flagDisplay& (0+255),w,b
  1001  001466  0100               	movlb	0	; () banked
  1002  001468  11C1               	iorwf	(_flagDisplay+1)& (0+255),w,b
  1003  00146A  A4D8               	btfss	status,2,c
  1004  00146C  D007               	goto	l4169
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;main.c: 66: atualiza_tela();
  1008  00146E  ECD0  F011         	call	_atualiza_tela	;wreg free
  1009                           
  1010                           ;main.c: 67: flagDisplay = 0;
  1011  001472  0E00               	movlw	0
  1012  001474  0100               	movlb	0	; () banked
  1013  001476  6FC1               	movwf	(_flagDisplay+1)& (0+255),b
  1014  001478  0E00               	movlw	0
  1015  00147A  6FC0               	movwf	_flagDisplay& (0+255),b
  1016  00147C                     l4169:
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;main.c: 68: }
  1020                           ;main.c: 70: if(PORTDbits.RD0 == 1){
  1021  00147C  A083               	btfss	3971,0,c	;volatile
  1022  00147E  D025               	goto	l89
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main.c: 71: _delay((unsigned long)((180)*(80000000/4000.0)));
  1026  001480  0E13               	movlw	19
  1027  001482  0100               	movlb	0	; () banked
  1028  001484  6F87               	movwf	(??_main+1)& (0+255),b
  1029  001486  0E44               	movlw	68
  1030  001488  0100               	movlb	0	; () banked
  1031  00148A  6F86               	movwf	??_main& (0+255),b
  1032  00148C  0E44               	movlw	68
  1033  00148E                     u4607:
  1034  00148E  2EE8               	decfsz	wreg,f,c
  1035  001490  D7FE               	bra	u4607
  1036  001492  2F86               	decfsz	??_main& (0+255),f,b
  1037  001494  D7FC               	bra	u4607
  1038  001496  2F87               	decfsz	(??_main+1)& (0+255),f,b
  1039  001498  D7FA               	bra	u4607
  1040  00149A  F000               	nop	
  1041                           
  1042                           ;main.c: 72: LCD_Clear();
  1043  00149C  EC3E  F012         	call	_LCD_Clear	;wreg free
  1044                           
  1045                           ;main.c: 73: flagTela++;
  1046  0014A0  0100               	movlb	0	; () banked
  1047  0014A2  4BBC               	infsnz	_flagTela& (0+255),f,b
  1048  0014A4  2BBD               	incf	(_flagTela+1)& (0+255),f,b
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;main.c: 74: if(flagTela>2) flagTela = 1;
  1052  0014A6  0100               	movlb	0	; () banked
  1053  0014A8  BFBD               	btfsc	(_flagTela+1)& (0+255),7,b
  1054  0014AA  D00D               	goto	l91
  1055  0014AC  0100               	movlb	0	; () banked
  1056  0014AE  51BD               	movf	(_flagTela+1)& (0+255),w,b
  1057  0014B0  E105               	bnz	u4480
  1058  0014B2  0E03               	movlw	3
  1059  0014B4  0100               	movlb	0	; () banked
  1060  0014B6  5DBC               	subwf	_flagTela& (0+255),w,b
  1061  0014B8  A0D8               	btfss	status,0,c
  1062  0014BA  D005               	goto	l91
  1063  0014BC                     u4480:
  1064                           
  1065                           ; BSR set to: 0
  1066  0014BC  0E00               	movlw	0
  1067  0014BE  0100               	movlb	0	; () banked
  1068  0014C0  6FBD               	movwf	(_flagTela+1)& (0+255),b
  1069  0014C2  0E01               	movlw	1
  1070  0014C4  6FBC               	movwf	_flagTela& (0+255),b
  1071  0014C6                     l91:
  1072  0014C6  B083               	btfsc	3971,0,c	;volatile
  1073  0014C8  D7FE               	goto	l91
  1074  0014CA                     l89:
  1075                           
  1076                           ;main.c: 76: }
  1077                           ;main.c: 78: if(PORTDbits.RD1 == 1){
  1078  0014CA  A283               	btfss	3971,1,c	;volatile
  1079  0014CC  D02C               	goto	l4195
  1080                           
  1081                           ;main.c: 79: _delay((unsigned long)((180)*(80000000/4000.0)));
  1082  0014CE  0E13               	movlw	19
  1083  0014D0  0100               	movlb	0	; () banked
  1084  0014D2  6F87               	movwf	(??_main+1)& (0+255),b
  1085  0014D4  0E44               	movlw	68
  1086  0014D6  0100               	movlb	0	; () banked
  1087  0014D8  6F86               	movwf	??_main& (0+255),b
  1088  0014DA  0E44               	movlw	68
  1089  0014DC                     u4617:
  1090  0014DC  2EE8               	decfsz	wreg,f,c
  1091  0014DE  D7FE               	bra	u4617
  1092  0014E0  2F86               	decfsz	??_main& (0+255),f,b
  1093  0014E2  D7FC               	bra	u4617
  1094  0014E4  2F87               	decfsz	(??_main+1)& (0+255),f,b
  1095  0014E6  D7FA               	bra	u4617
  1096  0014E8  F000               	nop	
  1097                           
  1098                           ;main.c: 80: posCursor++;
  1099  0014EA  4A28               	infsnz	_posCursor,f,c
  1100  0014EC  2A29               	incf	_posCursor+1,f,c
  1101                           
  1102                           ;main.c: 81: posCursorR++;
  1103  0014EE  4A26               	infsnz	_posCursorR,f,c
  1104  0014F0  2A27               	incf	_posCursorR+1,f,c
  1105                           
  1106                           ;main.c: 82: if(posCursor > 2) posCursor = 0;
  1107  0014F2  BE29               	btfsc	_posCursor+1,7,c
  1108  0014F4  D00A               	goto	l4191
  1109  0014F6  5029               	movf	_posCursor+1,w,c
  1110  0014F8  E104               	bnz	u4510
  1111  0014FA  0E03               	movlw	3
  1112  0014FC  5C28               	subwf	_posCursor,w,c
  1113  0014FE  A0D8               	btfss	status,0,c
  1114  001500  D004               	goto	l4191
  1115  001502                     u4510:
  1116  001502  0E00               	movlw	0
  1117  001504  6E29               	movwf	_posCursor+1,c
  1118  001506  0E00               	movlw	0
  1119  001508  6E28               	movwf	_posCursor,c
  1120  00150A                     l4191:
  1121                           
  1122                           ;main.c: 83: if(posCursorR > 6) posCursorR = 0;
  1123  00150A  BE27               	btfsc	_posCursorR+1,7,c
  1124  00150C  D00A               	goto	l97
  1125  00150E  5027               	movf	_posCursorR+1,w,c
  1126  001510  E104               	bnz	u4520
  1127  001512  0E07               	movlw	7
  1128  001514  5C26               	subwf	_posCursorR,w,c
  1129  001516  A0D8               	btfss	status,0,c
  1130  001518  D004               	goto	l97
  1131  00151A                     u4520:
  1132  00151A  0E00               	movlw	0
  1133  00151C  6E27               	movwf	_posCursorR+1,c
  1134  00151E  0E00               	movlw	0
  1135  001520  6E26               	movwf	_posCursorR,c
  1136  001522                     l97:
  1137  001522  B283               	btfsc	3971,1,c	;volatile
  1138  001524  D7FE               	goto	l97
  1139  001526                     l4195:
  1140                           
  1141                           ;main.c: 85: }
  1142                           ;main.c: 87: if(flagTela == 1) ajustarT1();
  1143  001526  0100               	movlb	0	; () banked
  1144  001528  05BC               	decf	_flagTela& (0+255),w,b
  1145  00152A  0100               	movlb	0	; () banked
  1146  00152C  11BD               	iorwf	(_flagTela+1)& (0+255),w,b
  1147  00152E  B4D8               	btfsc	status,2,c
  1148                           
  1149                           ; BSR set to: 0
  1150  001530  EC4F  F00D         	call	_ajustarT1	;wreg free
  1151                           
  1152                           ;main.c: 88: if(flagTela == 2 && flagAlarme == 0) ajustarAlarme();
  1153  001534  0E02               	movlw	2
  1154  001536  0100               	movlb	0	; () banked
  1155  001538  19BC               	xorwf	_flagTela& (0+255),w,b
  1156  00153A  0100               	movlb	0	; () banked
  1157  00153C  11BD               	iorwf	(_flagTela+1)& (0+255),w,b
  1158  00153E  A4D8               	btfss	status,2,c
  1159  001540  D005               	goto	l4205
  1160                           
  1161                           ; BSR set to: 0
  1162  001542  5024               	movf	_flagAlarme,w,c
  1163  001544  1025               	iorwf	_flagAlarme+1,w,c
  1164  001546  B4D8               	btfsc	status,2,c
  1165                           
  1166                           ; BSR set to: 0
  1167  001548  ECC8  F00D         	call	_ajustarAlarme	;wreg free
  1168  00154C                     l4205:
  1169                           
  1170                           ;main.c: 89: if(despertar() == 1) flagAlarme = 1;
  1171  00154C  ECEB  F010         	call	_despertar	;wreg free
  1172  001550  0420               	decf	?_despertar,w,c
  1173  001552  1021               	iorwf	?_despertar+1,w,c
  1174  001554  A4D8               	btfss	status,2,c
  1175  001556  D004               	goto	l4209
  1176  001558  0E00               	movlw	0
  1177  00155A  6E25               	movwf	_flagAlarme+1,c
  1178  00155C  0E01               	movlw	1
  1179  00155E  6E24               	movwf	_flagAlarme,c
  1180  001560                     l4209:
  1181                           
  1182                           ;main.c: 91: if(flagAlarme == 1) {
  1183  001560  0424               	decf	_flagAlarme,w,c
  1184  001562  1025               	iorwf	_flagAlarme+1,w,c
  1185  001564  A4D8               	btfss	status,2,c
  1186  001566  D00F               	goto	l4217
  1187                           
  1188                           ;main.c: 92: if(tempoAlarme < 35){
  1189  001568  BE23               	btfsc	_tempoAlarme+1,7,c
  1190  00156A  D006               	goto	l4213
  1191  00156C  5023               	movf	_tempoAlarme+1,w,c
  1192  00156E  E107               	bnz	l4215
  1193  001570  0E23               	movlw	35
  1194  001572  5C22               	subwf	_tempoAlarme,w,c
  1195  001574  B0D8               	btfsc	status,0,c
  1196  001576  D003               	goto	l4215
  1197  001578                     l4213:
  1198                           
  1199                           ;main.c: 93: despertarAlarme();
  1200  001578  EC9D  F011         	call	_despertarAlarme	;wreg free
  1201                           
  1202                           ;main.c: 94: }else{
  1203  00157C  D004               	goto	l4217
  1204  00157E                     l4215:
  1205                           
  1206                           ;main.c: 95: flagAlarme = 0;
  1207  00157E  0E00               	movlw	0
  1208  001580  6E25               	movwf	_flagAlarme+1,c
  1209  001582  0E00               	movlw	0
  1210  001584  6E24               	movwf	_flagAlarme,c
  1211  001586                     l4217:
  1212                           
  1213                           ;main.c: 96: }
  1214                           ;main.c: 98: }
  1215                           ;main.c: 99: maquina_estado();
  1216  001586  EC5C  F010         	call	_maquina_estado	;wreg free
  1217  00158A  D76B               	goto	l4163
  1218  00158C                     __end_of_main:
  1219                           	opt stack 0
  1220                           tblptru	equ	0xFF8
  1221                           tblptrh	equ	0xFF7
  1222                           tblptrl	equ	0xFF6
  1223                           tablat	equ	0xFF5
  1224                           intcon	equ	0xFF2
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1l	equ	0xFE1
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function _maquina_estado *****************
  1232 ;; Defined at:
  1233 ;;		line 166 in file "UART.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  2   34[None  ] int 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    5
  1254 ;; This function calls:
  1255 ;;		_envia_respostaTX
  1256 ;;		_trata_comando
  1257 ;;		_verifica_comando
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text1
  1264  0020B8                     __ptext1:
  1265                           	opt stack 0
  1266  0020B8                     _maquina_estado:
  1267                           	opt stack 25
  1268                           
  1269                           ;UART.c: 168: switch(ESTADO_COMUNICACAO){
  1270                           
  1271                           ;incstack = 0
  1272  0020B8  D013               	goto	l3195
  1273  0020BA                     l3179:
  1274                           
  1275                           ;UART.c: 170: ESTADO_COMUNICACAO = 0x02;
  1276  0020BA  0E02               	movlw	2
  1277  0020BC  6E2D               	movwf	_ESTADO_COMUNICACAO,c
  1278                           
  1279                           ;UART.c: 171: break;
  1280  0020BE  0012               	return	
  1281  0020C0                     l3181:
  1282                           
  1283                           ;UART.c: 174: verifica_comando();
  1284  0020C0  EC17  F012         	call	_verifica_comando	;wreg free
  1285                           
  1286                           ;UART.c: 175: break;
  1287  0020C4  0012               	return	
  1288  0020C6                     l3183:
  1289                           
  1290                           ;UART.c: 178: trata_comando();
  1291  0020C6  ECA7  F010         	call	_trata_comando	;wreg free
  1292                           
  1293                           ;UART.c: 179: ESTADO_COMUNICACAO = 0x05;
  1294  0020CA  0E05               	movlw	5
  1295  0020CC  6E2D               	movwf	_ESTADO_COMUNICACAO,c
  1296                           
  1297                           ;UART.c: 180: break;
  1298  0020CE  0012               	return	
  1299  0020D0                     l3187:
  1300                           
  1301                           ;UART.c: 183: ESTADO_COMUNICACAO = 0x00;
  1302  0020D0  0E00               	movlw	0
  1303  0020D2  6E2D               	movwf	_ESTADO_COMUNICACAO,c
  1304                           
  1305                           ;UART.c: 184: break;
  1306  0020D4  0012               	return	
  1307  0020D6                     l3189:
  1308                           
  1309                           ;UART.c: 187: envia_respostaTX();
  1310  0020D6  EC48  F011         	call	_envia_respostaTX	;wreg free
  1311                           
  1312                           ;UART.c: 188: ESTADO_COMUNICACAO = 0x00;
  1313  0020DA  0E00               	movlw	0
  1314  0020DC  6E2D               	movwf	_ESTADO_COMUNICACAO,c
  1315                           
  1316                           ;UART.c: 194: }
  1317                           
  1318                           ;UART.c: 193: break;
  1319                           
  1320                           ;UART.c: 191: case 0x00:
  1321                           
  1322                           ;UART.c: 189: break;
  1323  0020DE  0012               	return	
  1324  0020E0                     l3195:
  1325  0020E0  502D               	movf	_ESTADO_COMUNICACAO,w,c
  1326                           
  1327                           ; Switch size 1, requested type "space"
  1328                           ; Number of cases is 6, Range of values is 0 to 5
  1329                           ; switch strategies available:
  1330                           ; Name         Instructions Cycles
  1331                           ; simple_byte           19    10 (average)
  1332                           ;	Chosen strategy is simple_byte
  1333  0020E2  0A00               	xorlw	0	; case 0
  1334  0020E4  B4D8               	btfsc	status,2,c
  1335  0020E6  0012               	return	
  1336  0020E8  0A01               	xorlw	1	; case 1
  1337  0020EA  B4D8               	btfsc	status,2,c
  1338  0020EC  D7E6               	goto	l3179
  1339  0020EE  0A03               	xorlw	3	; case 2
  1340  0020F0  B4D8               	btfsc	status,2,c
  1341  0020F2  D7E6               	goto	l3181
  1342  0020F4  0A01               	xorlw	1	; case 3
  1343  0020F6  B4D8               	btfsc	status,2,c
  1344  0020F8  D7E6               	goto	l3183
  1345  0020FA  0A07               	xorlw	7	; case 4
  1346  0020FC  B4D8               	btfsc	status,2,c
  1347  0020FE  D7E8               	goto	l3187
  1348  002100  0A01               	xorlw	1	; case 5
  1349  002102  A4D8               	btfss	status,2,c
  1350  002104  0012               	return	
  1351  002106  D7E7               	goto	l3189
  1352  002108                     __end_of_maquina_estado:
  1353                           	opt stack 0
  1354                           tblptru	equ	0xFF8
  1355                           tblptrh	equ	0xFF7
  1356                           tblptrl	equ	0xFF6
  1357                           tablat	equ	0xFF5
  1358                           intcon	equ	0xFF2
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postdec1	equ	0xFE5
  1362                           fsr1l	equ	0xFE1
  1363                           status	equ	0xFD8
  1364                           
  1365 ;; *************** function _verifica_comando *****************
  1366 ;; Defined at:
  1367 ;;		line 75 in file "UART.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1381 ;;      Params:         0       0       0       0       0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1384 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1385 ;;Total ram usage:        0 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    4
  1388 ;; This function calls:
  1389 ;;		_crc16
  1390 ;; This function is called by:
  1391 ;;		_maquina_estado
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text2
  1396  00242E                     __ptext2:
  1397                           	opt stack 0
  1398  00242E                     _verifica_comando:
  1399                           	opt stack 25
  1400                           
  1401                           ;UART.c: 76: if(crc16(dado) == 1){
  1402                           
  1403                           ;incstack = 0
  1404  00242E  0E9D               	movlw	low _dado
  1405  002430  6E20               	movwf	crc16@dados,c
  1406  002432  0E00               	movlw	high _dado
  1407  002434  6E21               	movwf	crc16@dados+1,c
  1408  002436  EC66  F012         	call	_crc16	;wreg free
  1409  00243A  0420               	decf	?_crc16,w,c
  1410  00243C  1021               	iorwf	?_crc16+1,w,c
  1411  00243E  A4D8               	btfss	status,2,c
  1412  002440  D003               	goto	l2997
  1413                           
  1414                           ;UART.c: 77: ESTADO_COMUNICACAO = 0x03;
  1415  002442  0E03               	movlw	3
  1416  002444  6E2D               	movwf	_ESTADO_COMUNICACAO,c
  1417                           
  1418                           ;UART.c: 78: }else{
  1419  002446  0012               	return	
  1420  002448                     l2997:
  1421                           
  1422                           ;UART.c: 79: ESTADO_COMUNICACAO = 0x04;
  1423  002448  0E04               	movlw	4
  1424  00244A  6E2D               	movwf	_ESTADO_COMUNICACAO,c
  1425  00244C  0012               	return	
  1426  00244E                     __end_of_verifica_comando:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           intcon	equ	0xFF2
  1433                           postinc0	equ	0xFEE
  1434                           wreg	equ	0xFE8
  1435                           postdec1	equ	0xFE5
  1436                           fsr1l	equ	0xFE1
  1437                           status	equ	0xFD8
  1438                           
  1439 ;; *************** function _crc16 *****************
  1440 ;; Defined at:
  1441 ;;		line 3 in file "UART.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  dados           2   31[COMRAM] PTR unsigned char 
  1444 ;;		 -> dado(7), 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  2   31[COMRAM] int 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1456 ;;      Params:         2       0       0       0       0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1459 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1460 ;;Total ram usage:        2 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    3
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_verifica_comando
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text3
  1471  0024CC                     __ptext3:
  1472                           	opt stack 0
  1473  0024CC                     _crc16:
  1474                           	opt stack 25
  1475                           
  1476                           ;UART.c: 4: return 1;
  1477                           
  1478                           ;incstack = 0
  1479  0024CC  0E00               	movlw	0
  1480  0024CE  6E21               	movwf	?_crc16+1,c
  1481  0024D0  0E01               	movlw	1
  1482  0024D2  6E20               	movwf	?_crc16,c
  1483  0024D4  0012               	return	
  1484  0024D6                     __end_of_crc16:
  1485                           	opt stack 0
  1486                           tblptru	equ	0xFF8
  1487                           tblptrh	equ	0xFF7
  1488                           tblptrl	equ	0xFF6
  1489                           tablat	equ	0xFF5
  1490                           intcon	equ	0xFF2
  1491                           postinc0	equ	0xFEE
  1492                           wreg	equ	0xFE8
  1493                           postdec1	equ	0xFE5
  1494                           fsr1l	equ	0xFE1
  1495                           status	equ	0xFD8
  1496                           
  1497 ;; *************** function _trata_comando *****************
  1498 ;; Defined at:
  1499 ;;		line 128 in file "UART.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1516 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1517 ;;Total ram usage:        0 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    4
  1520 ;; This function calls:
  1521 ;;		_montar_resposta
  1522 ;;		_realizar_alteracoes
  1523 ;; This function is called by:
  1524 ;;		_maquina_estado
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text4
  1529  00214E                     __ptext4:
  1530                           	opt stack 0
  1531  00214E                     _trata_comando:
  1532                           	opt stack 25
  1533                           
  1534                           ;UART.c: 129: switch(dado[0]){
  1535                           
  1536                           ;incstack = 0
  1537  00214E  D018               	goto	l3015
  1538  002150                     l3001:
  1539                           
  1540                           ;UART.c: 133: montar_resposta();
  1541  002150  EC32  F010         	call	_montar_resposta	;wreg free
  1542                           
  1543                           ;UART.c: 135: break;
  1544  002154  0012               	return	
  1545  002156                     l3003:
  1546                           
  1547                           ;UART.c: 138: montar_resposta();
  1548  002156  EC32  F010         	call	_montar_resposta	;wreg free
  1549                           
  1550                           ;UART.c: 140: break;
  1551  00215A  0012               	return	
  1552  00215C                     l3005:
  1553                           
  1554                           ;UART.c: 143: montar_resposta();
  1555  00215C  EC32  F010         	call	_montar_resposta	;wreg free
  1556                           
  1557                           ;UART.c: 146: }
  1558                           
  1559                           ;UART.c: 145: break;
  1560  002160  0012               	return	
  1561  002162                     l3009:
  1562  002162  0100               	movlb	0	; () banked
  1563  002164  519E               	movf	(_dado+1)& (0+255),w,b
  1564                           
  1565                           ; Switch size 1, requested type "space"
  1566                           ; Number of cases is 3, Range of values is 1 to 3
  1567                           ; switch strategies available:
  1568                           ; Name         Instructions Cycles
  1569                           ; simple_byte           10     6 (average)
  1570                           ;	Chosen strategy is simple_byte
  1571  002166  0A01               	xorlw	1	; case 1
  1572  002168  B4D8               	btfsc	status,2,c
  1573  00216A  D7F2               	goto	l3001
  1574  00216C  0A03               	xorlw	3	; case 2
  1575  00216E  B4D8               	btfsc	status,2,c
  1576  002170  D7F2               	goto	l3003
  1577  002172  0A01               	xorlw	1	; case 3
  1578  002174  A4D8               	btfss	status,2,c
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;UART.c: 147: break;
  1582  002176  0012               	return	
  1583  002178  D7F1               	goto	l3005
  1584  00217A                     l3011:
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;UART.c: 150: realizar_alteracoes();
  1588  00217A  EC07  F010         	call	_realizar_alteracoes	;wreg free
  1589                           
  1590                           ;UART.c: 153: }
  1591                           
  1592                           ;UART.c: 151: break;
  1593  00217E  0012               	return	
  1594  002180                     l3015:
  1595  002180  0100               	movlb	0	; () banked
  1596  002182  519D               	movf	_dado& (0+255),w,b
  1597                           
  1598                           ; Switch size 1, requested type "space"
  1599                           ; Number of cases is 2, Range of values is 1 to 2
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte            7     4 (average)
  1603                           ;	Chosen strategy is simple_byte
  1604  002184  0A01               	xorlw	1	; case 1
  1605  002186  B4D8               	btfsc	status,2,c
  1606  002188  D7EC               	goto	l3009
  1607  00218A  0A03               	xorlw	3	; case 2
  1608  00218C  A4D8               	btfss	status,2,c
  1609  00218E  0012               	return	
  1610  002190  D7F4               	goto	l3011
  1611  002192                     __end_of_trata_comando:
  1612                           	opt stack 0
  1613                           tblptru	equ	0xFF8
  1614                           tblptrh	equ	0xFF7
  1615                           tblptrl	equ	0xFF6
  1616                           tablat	equ	0xFF5
  1617                           intcon	equ	0xFF2
  1618                           postinc0	equ	0xFEE
  1619                           wreg	equ	0xFE8
  1620                           postdec1	equ	0xFE5
  1621                           fsr1l	equ	0xFE1
  1622                           status	equ	0xFD8
  1623                           
  1624 ;; *************** function _realizar_alteracoes *****************
  1625 ;; Defined at:
  1626 ;;		line 83 in file "UART.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    3
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_trata_comando
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text5
  1655  00200E                     __ptext5:
  1656                           	opt stack 0
  1657  00200E                     _realizar_alteracoes:
  1658                           	opt stack 25
  1659                           
  1660                           ;UART.c: 84: switch(dado[1]){
  1661                           
  1662                           ;incstack = 0
  1663  00200E  D01E               	goto	l2867
  1664  002010                     l524:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;UART.c: 86: re.hora = dado[2];
  1668  002010  C09F  F038         	movff	_dado+2,_re+4
  1669  002014  6A39               	clrf	_re+5,c
  1670                           
  1671                           ;UART.c: 87: re.minuto = dado[3];
  1672  002016  C0A0  F034         	movff	_dado+3,_re
  1673  00201A  6A35               	clrf	_re+1,c
  1674                           
  1675                           ;UART.c: 88: re.segundo = dado[4];
  1676  00201C  C0A1  F036         	movff	_dado+4,_re+2
  1677  002020  6A37               	clrf	_re+3,c
  1678                           
  1679                           ;UART.c: 90: break;
  1680  002022  0012               	return	
  1681  002024                     l526:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;UART.c: 92: ca.dia = dado[2];
  1685  002024  C09F  F03A         	movff	_dado+2,_ca
  1686  002028  6A3B               	clrf	_ca+1,c
  1687                           
  1688                           ;UART.c: 93: ca.mes = dado[3];
  1689  00202A  C0A0  F03C         	movff	_dado+3,_ca+2
  1690  00202E  6A3D               	clrf	_ca+3,c
  1691                           
  1692                           ;UART.c: 94: ca.ano = dado[4];
  1693  002030  C0A1  F03E         	movff	_dado+4,_ca+4
  1694  002034  6A3F               	clrf	_ca+5,c
  1695                           
  1696                           ;UART.c: 95: break;
  1697  002036  0012               	return	
  1698  002038                     l527:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;UART.c: 97: alarme.hora = dado[2];
  1702  002038  C09F  F032         	movff	_dado+2,_alarme+4
  1703  00203C  6A33               	clrf	_alarme+5,c
  1704                           
  1705                           ;UART.c: 98: alarme.minuto = dado[3];
  1706  00203E  C0A0  F02E         	movff	_dado+3,_alarme
  1707  002042  6A2F               	clrf	_alarme+1,c
  1708                           
  1709                           ;UART.c: 99: alarme.segundo = dado[4];
  1710  002044  C0A1  F030         	movff	_dado+4,_alarme+2
  1711  002048  6A31               	clrf	_alarme+3,c
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;UART.c: 101: }
  1715                           
  1716                           ;UART.c: 100: break;
  1717  00204A  0012               	return	
  1718  00204C                     l2867:
  1719  00204C  0100               	movlb	0	; () banked
  1720  00204E  519E               	movf	(_dado+1)& (0+255),w,b
  1721                           
  1722                           ; Switch size 1, requested type "space"
  1723                           ; Number of cases is 3, Range of values is 1 to 3
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte           10     6 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728  002050  0A01               	xorlw	1	; case 1
  1729  002052  B4D8               	btfsc	status,2,c
  1730  002054  D7DD               	goto	l524
  1731  002056  0A03               	xorlw	3	; case 2
  1732  002058  B4D8               	btfsc	status,2,c
  1733  00205A  D7E4               	goto	l526
  1734  00205C  0A01               	xorlw	1	; case 3
  1735  00205E  A4D8               	btfss	status,2,c
  1736  002060  0012               	return	
  1737  002062  D7EA               	goto	l527
  1738  002064                     __end_of_realizar_alteracoes:
  1739                           	opt stack 0
  1740                           tblptru	equ	0xFF8
  1741                           tblptrh	equ	0xFF7
  1742                           tblptrl	equ	0xFF6
  1743                           tablat	equ	0xFF5
  1744                           intcon	equ	0xFF2
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1l	equ	0xFE1
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _montar_resposta *****************
  1752 ;; Defined at:
  1753 ;;		line 104 in file "UART.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    3
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_trata_comando
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text6
  1782  002064                     __ptext6:
  1783                           	opt stack 0
  1784  002064                     _montar_resposta:
  1785                           	opt stack 25
  1786                           
  1787                           ;UART.c: 105: BUFFRESP[0] = dado[0];
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;incstack = 0
  1791  002064  C09D  F088         	movff	_dado,_BUFFRESP
  1792                           
  1793                           ;UART.c: 106: BUFFRESP[1] = dado[1];
  1794  002068  C09E  F089         	movff	_dado+1,_BUFFRESP+1
  1795                           
  1796                           ;UART.c: 107: BUFFRESP[5] = 0xFF;
  1797  00206C  0100               	movlb	0	; () banked
  1798  00206E  698D               	setf	(_BUFFRESP+5)& (0+255),b
  1799                           
  1800                           ;UART.c: 108: BUFFRESP[6] = 0xFF;
  1801  002070  0100               	movlb	0	; () banked
  1802  002072  698E               	setf	(_BUFFRESP+6)& (0+255),b
  1803                           
  1804                           ;UART.c: 109: switch(dado[1]){
  1805  002074  D015               	goto	l2873
  1806  002076                     l532:
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;UART.c: 111: BUFFRESP[2] = re.hora;
  1810  002076  C038  F08A         	movff	_re+4,_BUFFRESP+2
  1811                           
  1812                           ;UART.c: 112: BUFFRESP[3] = re.minuto;
  1813  00207A  C034  F08B         	movff	_re,_BUFFRESP+3
  1814                           
  1815                           ;UART.c: 113: BUFFRESP[4] = re.segundo;
  1816  00207E  C036  F08C         	movff	_re+2,_BUFFRESP+4
  1817                           
  1818                           ;UART.c: 114: break;
  1819  002082  0012               	return	
  1820  002084                     l534:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;UART.c: 116: BUFFRESP[2] = ca.dia;
  1824  002084  C03A  F08A         	movff	_ca,_BUFFRESP+2
  1825                           
  1826                           ;UART.c: 117: BUFFRESP[3] = ca.mes;
  1827  002088  C03C  F08B         	movff	_ca+2,_BUFFRESP+3
  1828                           
  1829                           ;UART.c: 118: BUFFRESP[4] = ca.ano;
  1830  00208C  C03E  F08C         	movff	_ca+4,_BUFFRESP+4
  1831                           
  1832                           ;UART.c: 119: break;
  1833  002090  0012               	return	
  1834  002092                     l535:
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;UART.c: 121: BUFFRESP[2] = alarme.hora;
  1838  002092  C032  F08A         	movff	_alarme+4,_BUFFRESP+2
  1839                           
  1840                           ;UART.c: 122: BUFFRESP[3] = alarme.minuto;
  1841  002096  C02E  F08B         	movff	_alarme,_BUFFRESP+3
  1842                           
  1843                           ;UART.c: 123: BUFFRESP[4] = alarme.segundo;
  1844  00209A  C030  F08C         	movff	_alarme+2,_BUFFRESP+4
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;UART.c: 125: }
  1848                           
  1849                           ;UART.c: 124: break;
  1850  00209E  0012               	return	
  1851  0020A0                     l2873:
  1852                           
  1853                           ; BSR set to: 0
  1854  0020A0  0100               	movlb	0	; () banked
  1855  0020A2  519E               	movf	(_dado+1)& (0+255),w,b
  1856                           
  1857                           ; Switch size 1, requested type "space"
  1858                           ; Number of cases is 3, Range of values is 1 to 3
  1859                           ; switch strategies available:
  1860                           ; Name         Instructions Cycles
  1861                           ; simple_byte           10     6 (average)
  1862                           ;	Chosen strategy is simple_byte
  1863  0020A4  0A01               	xorlw	1	; case 1
  1864  0020A6  B4D8               	btfsc	status,2,c
  1865  0020A8  D7E6               	goto	l532
  1866  0020AA  0A03               	xorlw	3	; case 2
  1867  0020AC  B4D8               	btfsc	status,2,c
  1868  0020AE  D7EA               	goto	l534
  1869  0020B0  0A01               	xorlw	1	; case 3
  1870  0020B2  A4D8               	btfss	status,2,c
  1871  0020B4  0012               	return	
  1872  0020B6  D7ED               	goto	l535
  1873  0020B8                     __end_of_montar_resposta:
  1874                           	opt stack 0
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           intcon	equ	0xFF2
  1880                           postinc0	equ	0xFEE
  1881                           wreg	equ	0xFE8
  1882                           postdec1	equ	0xFE5
  1883                           fsr1l	equ	0xFE1
  1884                           status	equ	0xFD8
  1885                           
  1886 ;; *************** function _envia_respostaTX *****************
  1887 ;; Defined at:
  1888 ;;		line 156 in file "UART.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1902 ;;      Params:         0       0       0       0       0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    4
  1909 ;; This function calls:
  1910 ;;		_tx_data
  1911 ;; This function is called by:
  1912 ;;		_maquina_estado
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text7
  1917  002290                     __ptext7:
  1918                           	opt stack 0
  1919  002290                     _envia_respostaTX:
  1920                           	opt stack 25
  1921                           
  1922                           ;UART.c: 157: tx_data(BUFFRESP[0]);
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;incstack = 0
  1926  002290  0100               	movlb	0	; () banked
  1927  002292  5188               	movf	_BUFFRESP& (0+255),w,b
  1928  002294  EC60  F012         	call	_tx_data
  1929                           
  1930                           ;UART.c: 158: tx_data(BUFFRESP[1]);
  1931  002298  0100               	movlb	0	; () banked
  1932  00229A  5189               	movf	(_BUFFRESP+1)& (0+255),w,b
  1933  00229C  EC60  F012         	call	_tx_data
  1934                           
  1935                           ;UART.c: 159: tx_data(BUFFRESP[2]);
  1936  0022A0  0100               	movlb	0	; () banked
  1937  0022A2  518A               	movf	(_BUFFRESP+2)& (0+255),w,b
  1938  0022A4  EC60  F012         	call	_tx_data
  1939                           
  1940                           ;UART.c: 160: tx_data(BUFFRESP[3]);
  1941  0022A8  0100               	movlb	0	; () banked
  1942  0022AA  518B               	movf	(_BUFFRESP+3)& (0+255),w,b
  1943  0022AC  EC60  F012         	call	_tx_data
  1944                           
  1945                           ;UART.c: 161: tx_data(BUFFRESP[4]);
  1946  0022B0  0100               	movlb	0	; () banked
  1947  0022B2  518C               	movf	(_BUFFRESP+4)& (0+255),w,b
  1948  0022B4  EC60  F012         	call	_tx_data
  1949                           
  1950                           ;UART.c: 162: tx_data(BUFFRESP[5]);
  1951  0022B8  0100               	movlb	0	; () banked
  1952  0022BA  518D               	movf	(_BUFFRESP+5)& (0+255),w,b
  1953  0022BC  EC60  F012         	call	_tx_data
  1954                           
  1955                           ;UART.c: 163: tx_data(BUFFRESP[6]);
  1956  0022C0  0100               	movlb	0	; () banked
  1957  0022C2  518E               	movf	(_BUFFRESP+6)& (0+255),w,b
  1958  0022C4  EC60  F012         	call	_tx_data
  1959  0022C8  0012               	return		;funcret
  1960  0022CA                     __end_of_envia_respostaTX:
  1961                           	opt stack 0
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           intcon	equ	0xFF2
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           postdec1	equ	0xFE5
  1970                           fsr1l	equ	0xFE1
  1971                           status	equ	0xFD8
  1972                           
  1973 ;; *************** function _tx_data *****************
  1974 ;; Defined at:
  1975 ;;		line 7 in file "UART.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  data            1    wreg     const unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  data            1   31[COMRAM] const unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0
  1990 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1992 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1993 ;;Total ram usage:        1 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    3
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_envia_respostaTX
  2000 ;;		_UART_Write_Text
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text8
  2005  0024C0                     __ptext8:
  2006                           	opt stack 0
  2007  0024C0                     _tx_data:
  2008                           	opt stack 25
  2009                           
  2010                           ;incstack = 0
  2011                           ;tx_data@data stored from wreg
  2012  0024C0  6E20               	movwf	tx_data@data,c
  2013  0024C2                     l485:
  2014  0024C2  A89E               	btfss	3998,4,c	;volatile
  2015  0024C4  D7FE               	goto	l485
  2016                           
  2017                           ;UART.c: 10: TXREG = data;
  2018  0024C6  C020  FFAD         	movff	tx_data@data,4013	;volatile
  2019  0024CA  0012               	return		;funcret
  2020  0024CC                     __end_of_tx_data:
  2021                           	opt stack 0
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           intcon	equ	0xFF2
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1l	equ	0xFE1
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _inicializarUART *****************
  2034 ;; Defined at:
  2035 ;;		line 25 in file "UART.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2049 ;;      Params:         0       0       0       0       0       0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2052 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    3
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text9
  2064  00236E                     __ptext9:
  2065                           	opt stack 0
  2066  00236E                     _inicializarUART:
  2067                           	opt stack 27
  2068                           
  2069                           ;UART.c: 26: i = 0;
  2070                           
  2071                           ;incstack = 0
  2072  00236E  0E00               	movlw	0
  2073  002370  6E2B               	movwf	_i+1,c
  2074  002372  0E00               	movlw	0
  2075  002374  6E2A               	movwf	_i,c
  2076                           
  2077                           ;UART.c: 27: BRGH = 1;
  2078  002376  84AC               	bsf	4012,2,c	;volatile
  2079                           
  2080                           ;UART.c: 28: SPBRG = (((80000000/64)/9600)-1);
  2081  002378  0E81               	movlw	129
  2082  00237A  6EAF               	movwf	4015,c	;volatile
  2083                           
  2084                           ;UART.c: 29: RCSTAbits.SPEN=1;
  2085  00237C  8EAB               	bsf	4011,7,c	;volatile
  2086                           
  2087                           ;UART.c: 30: TXSTAbits.TXEN=1;
  2088  00237E  8AAC               	bsf	4012,5,c	;volatile
  2089                           
  2090                           ;UART.c: 31: RCSTAbits.CREN=1;
  2091  002380  88AB               	bsf	4011,4,c	;volatile
  2092                           
  2093                           ;UART.c: 33: RCSTA = 0b10010000;
  2094  002382  0E90               	movlw	144
  2095  002384  6EAB               	movwf	4011,c	;volatile
  2096                           
  2097                           ;UART.c: 34: TXSTA = 0b00100000;
  2098  002386  0E20               	movlw	32
  2099  002388  6EAC               	movwf	4012,c	;volatile
  2100                           
  2101                           ;UART.c: 36: TRISCbits.RC6 = 0;
  2102  00238A  9C94               	bcf	3988,6,c	;volatile
  2103                           
  2104                           ;UART.c: 37: TRISCbits.RC7 = 1;
  2105  00238C  8E94               	bsf	3988,7,c	;volatile
  2106                           
  2107                           ;UART.c: 40: RCIF = 0;
  2108  00238E  9A9E               	bcf	3998,5,c	;volatile
  2109                           
  2110                           ;UART.c: 41: RCIP = 0;
  2111  002390  9A9F               	bcf	3999,5,c	;volatile
  2112                           
  2113                           ;UART.c: 42: RCIE = 1;
  2114  002392  8A9D               	bsf	3997,5,c	;volatile
  2115                           
  2116                           ;UART.c: 43: PEIE = 1;
  2117  002394  8CF2               	bsf	intcon,6,c	;volatile
  2118                           
  2119                           ;UART.c: 46: INTCONbits.GIEH=1;
  2120  002396  8EF2               	bsf	intcon,7,c	;volatile
  2121                           
  2122                           ;UART.c: 47: INTCONbits.GIEL=1;
  2123  002398  8CF2               	bsf	intcon,6,c	;volatile
  2124                           
  2125                           ;UART.c: 49: ESTADO_COMUNICACAO = 0x00;
  2126  00239A  0E00               	movlw	0
  2127  00239C  6E2D               	movwf	_ESTADO_COMUNICACAO,c
  2128  00239E  0012               	return		;funcret
  2129  0023A0                     __end_of_inicializarUART:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           intcon	equ	0xFF2
  2136                           postinc0	equ	0xFEE
  2137                           wreg	equ	0xFE8
  2138                           postdec1	equ	0xFE5
  2139                           fsr1l	equ	0xFE1
  2140                           status	equ	0xFD8
  2141                           
  2142 ;; *************** function _despertarAlarme *****************
  2143 ;; Defined at:
  2144 ;;		line 248 in file "lcd.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2161 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    7
  2165 ;; This function calls:
  2166 ;;		_SetDDRamAddr
  2167 ;;		_WriteCmdXLCD
  2168 ;;		_putsXLCD
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text10
  2175  00233A                     __ptext10:
  2176                           	opt stack 0
  2177  00233A                     _despertarAlarme:
  2178                           	opt stack 23
  2179                           
  2180                           ;lcd.c: 249: WriteCmdXLCD(0x0C);
  2181                           
  2182                           ;incstack = 0
  2183  00233A  0E0C               	movlw	12
  2184  00233C  EC29  F011         	call	_WriteCmdXLCD
  2185                           
  2186                           ;lcd.c: 250: SetDDRamAddr(0x0F);
  2187  002340  0E0F               	movlw	15
  2188  002342  ECAA  F00F         	call	_SetDDRamAddr
  2189                           
  2190                           ;lcd.c: 251: putsXLCD("A");
  2191  002346  0ED8               	movlw	low STR_22
  2192  002348  0100               	movlb	0	; () banked
  2193  00234A  6F60               	movwf	putsXLCD@buffer& (0+255),b
  2194  00234C  0E08               	movlw	high STR_22
  2195  00234E  0100               	movlb	0	; () banked
  2196  002350  6F61               	movwf	(putsXLCD@buffer+1)& (0+255),b
  2197  002352  EC82  F011         	call	_putsXLCD	;wreg free
  2198                           
  2199                           ;lcd.c: 252: SetDDRamAddr(0x0F);
  2200  002356  0E0F               	movlw	15
  2201  002358  ECAA  F00F         	call	_SetDDRamAddr
  2202                           
  2203                           ;lcd.c: 253: putsXLCD(" ");
  2204  00235C  0ED6               	movlw	low (STR_21+7)
  2205  00235E  0100               	movlb	0	; () banked
  2206  002360  6F60               	movwf	putsXLCD@buffer& (0+255),b
  2207  002362  0E08               	movlw	high (STR_21+7)
  2208  002364  0100               	movlb	0	; () banked
  2209  002366  6F61               	movwf	(putsXLCD@buffer+1)& (0+255),b
  2210  002368  EC82  F011         	call	_putsXLCD	;wreg free
  2211  00236C  0012               	return		;funcret
  2212  00236E                     __end_of_despertarAlarme:
  2213                           	opt stack 0
  2214                           tblptru	equ	0xFF8
  2215                           tblptrh	equ	0xFF7
  2216                           tblptrl	equ	0xFF6
  2217                           tablat	equ	0xFF5
  2218                           intcon	equ	0xFF2
  2219                           postinc0	equ	0xFEE
  2220                           wreg	equ	0xFE8
  2221                           postdec1	equ	0xFE5
  2222                           fsr1l	equ	0xFE1
  2223                           status	equ	0xFD8
  2224                           
  2225 ;; *************** function _despertar *****************
  2226 ;; Defined at:
  2227 ;;		line 91 in file "relogio.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  2   31[COMRAM] int 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2241 ;;      Params:         2       0       0       0       0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2244 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2245 ;;Total ram usage:        2 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    3
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text11
  2256  0021D6                     __ptext11:
  2257                           	opt stack 0
  2258  0021D6                     _despertar:
  2259                           	opt stack 27
  2260                           
  2261                           ;relogio.c: 92: if(re.hora == alarme.hora && re.minuto == alarme.minuto && re.segundo ==
      +                           alarme.segundo){
  2262                           
  2263                           ;incstack = 0
  2264  0021D6  5032               	movf	_alarme+4,w,c
  2265  0021D8  1838               	xorwf	_re+4,w,c
  2266  0021DA  E117               	bnz	l3167
  2267  0021DC  5033               	movf	_alarme+5,w,c
  2268  0021DE  1839               	xorwf	_re+5,w,c
  2269  0021E0  A4D8               	btfss	status,2,c
  2270  0021E2  D013               	goto	l3167
  2271  0021E4  502E               	movf	_alarme,w,c
  2272  0021E6  1834               	xorwf	_re,w,c
  2273  0021E8  E110               	bnz	l3167
  2274  0021EA  502F               	movf	_alarme+1,w,c
  2275  0021EC  1835               	xorwf	_re+1,w,c
  2276  0021EE  A4D8               	btfss	status,2,c
  2277  0021F0  D00C               	goto	l3167
  2278  0021F2  5030               	movf	_alarme+2,w,c
  2279  0021F4  1836               	xorwf	_re+2,w,c
  2280  0021F6  E109               	bnz	l3167
  2281  0021F8  5031               	movf	_alarme+3,w,c
  2282  0021FA  1837               	xorwf	_re+3,w,c
  2283  0021FC  A4D8               	btfss	status,2,c
  2284  0021FE  D005               	goto	l3167
  2285                           
  2286                           ;relogio.c: 93: return 1;
  2287  002200  0E00               	movlw	0
  2288  002202  6E21               	movwf	?_despertar+1,c
  2289  002204  0E01               	movlw	1
  2290  002206  6E20               	movwf	?_despertar,c
  2291                           
  2292                           ;relogio.c: 94: }else{
  2293  002208  0012               	return	
  2294  00220A                     l3167:
  2295                           
  2296                           ;relogio.c: 95: return 0;
  2297  00220A  0E00               	movlw	0
  2298  00220C  6E21               	movwf	?_despertar+1,c
  2299  00220E  0E00               	movlw	0
  2300  002210  6E20               	movwf	?_despertar,c
  2301  002212  0012               	return	
  2302  002214                     __end_of_despertar:
  2303                           	opt stack 0
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           intcon	equ	0xFF2
  2309                           postinc0	equ	0xFEE
  2310                           wreg	equ	0xFE8
  2311                           postdec1	equ	0xFE5
  2312                           fsr1l	equ	0xFE1
  2313                           status	equ	0xFD8
  2314                           
  2315 ;; *************** function _atualiza_tela *****************
  2316 ;; Defined at:
  2317 ;;		line 182 in file "lcd.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2331 ;;      Params:         0       0       0       0       0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2333 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2334 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2335 ;;Total ram usage:        2 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    8
  2338 ;; This function calls:
  2339 ;;		_inicializaTela1
  2340 ;;		_inicializaTela2
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text12
  2347  0023A0                     __ptext12:
  2348                           	opt stack 0
  2349  0023A0                     _atualiza_tela:
  2350                           	opt stack 22
  2351                           
  2352                           ;lcd.c: 183: switch(flagTela){
  2353                           
  2354                           ;incstack = 0
  2355  0023A0  D006               	goto	l4081
  2356  0023A2                     l4075:
  2357                           
  2358                           ;lcd.c: 185: inicializaTela1();
  2359  0023A2  EC70  F00E         	call	_inicializaTela1	;wreg free
  2360                           
  2361                           ;lcd.c: 186: break;
  2362  0023A6  0012               	return	
  2363  0023A8                     l4077:
  2364                           
  2365                           ;lcd.c: 188: inicializaTela2();
  2366  0023A8  ECFA  F00E         	call	_inicializaTela2	;wreg free
  2367                           
  2368                           ;lcd.c: 193: }
  2369                           
  2370                           ;lcd.c: 192: return;
  2371                           
  2372                           ;lcd.c: 191: default:
  2373                           
  2374                           ;lcd.c: 189: break;
  2375  0023AC  0012               	return	
  2376  0023AE                     l4081:
  2377  0023AE  C0BC  F084         	movff	_flagTela,??_atualiza_tela
  2378  0023B2  C0BD  F085         	movff	_flagTela+1,??_atualiza_tela+1
  2379                           
  2380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2381                           ; Switch size 1, requested type "space"
  2382                           ; Number of cases is 1, Range of values is 0 to 0
  2383                           ; switch strategies available:
  2384                           ; Name         Instructions Cycles
  2385                           ; simple_byte            4     3 (average)
  2386                           ;	Chosen strategy is simple_byte
  2387  0023B6  0100               	movlb	0	; () banked
  2388  0023B8  5185               	movf	(??_atualiza_tela+1)& (0+255),w,b
  2389  0023BA  0A00               	xorlw	0	; case 0
  2390  0023BC  A4D8               	btfss	status,2,c
  2391  0023BE  0012               	return	
  2392                           
  2393                           ; BSR set to: 0
  2394                           ; Switch size 1, requested type "space"
  2395                           ; Number of cases is 2, Range of values is 1 to 2
  2396                           ; switch strategies available:
  2397                           ; Name         Instructions Cycles
  2398                           ; simple_byte            7     4 (average)
  2399                           ;	Chosen strategy is simple_byte
  2400  0023C0  0100               	movlb	0	; () banked
  2401  0023C2  5184               	movf	??_atualiza_tela& (0+255),w,b
  2402  0023C4  0A01               	xorlw	1	; case 1
  2403  0023C6  B4D8               	btfsc	status,2,c
  2404  0023C8  D7EC               	goto	l4075
  2405  0023CA  0A03               	xorlw	3	; case 2
  2406  0023CC  A4D8               	btfss	status,2,c
  2407  0023CE  0012               	return	
  2408  0023D0  D7EB               	goto	l4077
  2409  0023D2                     __end_of_atualiza_tela:
  2410                           	opt stack 0
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           intcon	equ	0xFF2
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1l	equ	0xFE1
  2420                           status	equ	0xFD8
  2421                           
  2422 ;; *************** function _inicializaTela2 *****************
  2423 ;; Defined at:
  2424 ;;		line 166 in file "lcd.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    7
  2445 ;; This function calls:
  2446 ;;		_SetDDRamAddr
  2447 ;;		_WriteCmdXLCD
  2448 ;;		_controlaCursor
  2449 ;;		_exibirAlarme
  2450 ;;		_putrsXLCD
  2451 ;;		_putsXLCD
  2452 ;; This function is called by:
  2453 ;;		_atualiza_tela
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text13
  2458  001DF4                     __ptext13:
  2459                           	opt stack 0
  2460  001DF4                     _inicializaTela2:
  2461                           	opt stack 22
  2462                           
  2463                           ;lcd.c: 167: if(T2 == 0){
  2464                           
  2465                           ;incstack = 0
  2466  001DF4  0100               	movlb	0	; () banked
  2467  001DF6  5197               	movf	_T2& (0+255),w,b
  2468  001DF8  0100               	movlb	0	; () banked
  2469  001DFA  1198               	iorwf	(_T2+1)& (0+255),w,b
  2470  001DFC  A4D8               	btfss	status,2,c
  2471  001DFE  D012               	goto	l4041
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;lcd.c: 168: if(flagAlarme == 0){
  2475  001E00  5024               	movf	_flagAlarme,w,c
  2476  001E02  1025               	iorwf	_flagAlarme+1,w,c
  2477  001E04  A4D8               	btfss	status,2,c
  2478  001E06  D003               	goto	l4037
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;lcd.c: 169: WriteCmdXLCD(0x0F);
  2482  001E08  0E0F               	movlw	15
  2483  001E0A  EC29  F011         	call	_WriteCmdXLCD
  2484  001E0E                     l4037:
  2485                           
  2486                           ;lcd.c: 170: }
  2487                           ;lcd.c: 171: T2 = 1;
  2488  001E0E  0E00               	movlw	0
  2489  001E10  0100               	movlb	0	; () banked
  2490  001E12  6F98               	movwf	(_T2+1)& (0+255),b
  2491  001E14  0E01               	movlw	1
  2492  001E16  6F97               	movwf	_T2& (0+255),b
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;lcd.c: 172: T1 = 0;
  2496  001E18  0E00               	movlw	0
  2497  001E1A  0100               	movlb	0	; () banked
  2498  001E1C  6F9A               	movwf	(_T1+1)& (0+255),b
  2499  001E1E  0E00               	movlw	0
  2500  001E20  6F99               	movwf	_T1& (0+255),b
  2501                           
  2502                           ;lcd.c: 173: }else{
  2503  001E22  0012               	return	
  2504  001E24                     l4041:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;lcd.c: 174: SetDDRamAddr(0x0);
  2508  001E24  0E00               	movlw	0
  2509  001E26  ECAA  F00F         	call	_SetDDRamAddr
  2510                           
  2511                           ;lcd.c: 175: putsXLCD("ALARME: ");
  2512  001E2A  0ECF               	movlw	low STR_21
  2513  001E2C  0100               	movlb	0	; () banked
  2514  001E2E  6F60               	movwf	putsXLCD@buffer& (0+255),b
  2515  001E30  0E08               	movlw	high STR_21
  2516  001E32  0100               	movlb	0	; () banked
  2517  001E34  6F61               	movwf	(putsXLCD@buffer+1)& (0+255),b
  2518  001E36  EC82  F011         	call	_putsXLCD	;wreg free
  2519                           
  2520                           ;lcd.c: 176: SetDDRamAddr(0x40);
  2521  001E3A  0E40               	movlw	64
  2522  001E3C  ECAA  F00F         	call	_SetDDRamAddr
  2523                           
  2524                           ;lcd.c: 177: putrsXLCD(exibirAlarme(alarme.hora, alarme.minuto, alarme.segundo));
  2525  001E40  C032  F07C         	movff	_alarme+4,exibirAlarme@h
  2526  001E44  C033  F07D         	movff	_alarme+5,exibirAlarme@h+1
  2527  001E48  C02E  F07E         	movff	_alarme,exibirAlarme@m
  2528  001E4C  C02F  F07F         	movff	_alarme+1,exibirAlarme@m+1
  2529  001E50  C030  F080         	movff	_alarme+2,exibirAlarme@s
  2530  001E54  C031  F081         	movff	_alarme+3,exibirAlarme@s+1
  2531  001E58  EC6E  F004         	call	_exibirAlarme	;wreg free
  2532  001E5C  C07C  F082         	movff	?_exibirAlarme,putrsXLCD@buffer
  2533  001E60  C07D  F083         	movff	?_exibirAlarme+1,putrsXLCD@buffer+1
  2534  001E64  ECE9  F011         	call	_putrsXLCD	;wreg free
  2535                           
  2536                           ;lcd.c: 178: controlaCursor();
  2537  001E68  ECC9  F010         	call	_controlaCursor	;wreg free
  2538  001E6C  0012               	return	
  2539  001E6E                     __end_of_inicializaTela2:
  2540                           	opt stack 0
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           intcon	equ	0xFF2
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           postdec1	equ	0xFE5
  2549                           fsr1l	equ	0xFE1
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function _putsXLCD *****************
  2553 ;; Defined at:
  2554 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putsxlcd.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  2557 ;;		 -> STR_23(2), STR_22(2), STR_21(9), 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2569 ;;      Params:         0       2       0       0       0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2572 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2573 ;;Total ram usage:        2 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    6
  2576 ;; This function calls:
  2577 ;;		_BusyXLCD
  2578 ;;		_WriteDataXLCD
  2579 ;; This function is called by:
  2580 ;;		_inicializaTela2
  2581 ;;		_despertarAlarme
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text14
  2586  002304                     __ptext14:
  2587                           	opt stack 0
  2588  002304                     _putsXLCD:
  2589                           	opt stack 23
  2590                           
  2591                           ;incstack = 0
  2592  002304  D010               	goto	l3955
  2593  002306                     l3949:
  2594  002306  EC65  F011         	call	_BusyXLCD	;wreg free
  2595  00230A  0900               	iorlw	0
  2596  00230C  A4D8               	btfss	status,2,c
  2597  00230E  D7FB               	goto	l3949
  2598  002310  C060  FFF6         	movff	putsXLCD@buffer,tblptrl
  2599  002314  C061  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  2600  002318                     	if	0	;tblptru may be non-zero
  2601  002318                     	endif
  2602  002318                     	if	0	;tblptru may be non-zero
  2603  002318                     	endif
  2604  002318  0008               	tblrd		*
  2605  00231A  50F5               	movf	tablat,w,c
  2606  00231C  EC0A  F011         	call	_WriteDataXLCD
  2607  002320  0100               	movlb	0	; () banked
  2608  002322  4B60               	infsnz	putsXLCD@buffer& (0+255),f,b
  2609  002324  2B61               	incf	(putsXLCD@buffer+1)& (0+255),f,b
  2610  002326                     l3955:
  2611  002326  C060  FFF6         	movff	putsXLCD@buffer,tblptrl
  2612  00232A  C061  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  2613  00232E                     	if	0	;tblptru may be non-zero
  2614  00232E                     	endif
  2615  00232E                     	if	0	;tblptru may be non-zero
  2616  00232E                     	endif
  2617  00232E  0008               	tblrd		*
  2618  002330  50F5               	movf	tablat,w,c
  2619  002332  0900               	iorlw	0
  2620  002334  B4D8               	btfsc	status,2,c
  2621  002336  0012               	return	
  2622  002338  D7E6               	goto	l3949
  2623  00233A                     __end_of_putsXLCD:
  2624                           	opt stack 0
  2625                           tblptru	equ	0xFF8
  2626                           tblptrh	equ	0xFF7
  2627                           tblptrl	equ	0xFF6
  2628                           tablat	equ	0xFF5
  2629                           intcon	equ	0xFF2
  2630                           postinc0	equ	0xFEE
  2631                           wreg	equ	0xFE8
  2632                           postdec1	equ	0xFE5
  2633                           fsr1l	equ	0xFE1
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _exibirAlarme *****************
  2637 ;; Defined at:
  2638 ;;		line 123 in file "lcd.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  h               2   28[BANK0 ] int 
  2641 ;;  m               2   30[BANK0 ] int 
  2642 ;;  s               2   32[BANK0 ] int 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2   28[BANK0 ] PTR unsigned char 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2654 ;;      Params:         0       6       0       0       0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2657 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2658 ;;Total ram usage:        6 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    5
  2661 ;; This function calls:
  2662 ;;		_sprintf
  2663 ;; This function is called by:
  2664 ;;		_inicializaTela2
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text15
  2669  0008DC                     __ptext15:
  2670                           	opt stack 0
  2671  0008DC                     _exibirAlarme:
  2672                           	opt stack 23
  2673                           
  2674                           ;lcd.c: 124: static char *string;
  2675                           ;lcd.c: 126: if(h >= 10 && m >= 10 && s >= 10){
  2676                           
  2677                           ;incstack = 0
  2678  0008DC  0100               	movlb	0	; () banked
  2679  0008DE  BF7D               	btfsc	(exibirAlarme@h+1)& (0+255),7,b
  2680  0008E0  D036               	goto	l3877
  2681  0008E2  0100               	movlb	0	; () banked
  2682  0008E4  517D               	movf	(exibirAlarme@h+1)& (0+255),w,b
  2683  0008E6  E105               	bnz	u3900
  2684  0008E8  0E0A               	movlw	10
  2685  0008EA  0100               	movlb	0	; () banked
  2686  0008EC  5D7C               	subwf	exibirAlarme@h& (0+255),w,b
  2687  0008EE  A0D8               	btfss	status,0,c
  2688  0008F0  D02E               	goto	l3877
  2689  0008F2                     u3900:
  2690                           
  2691                           ; BSR set to: 0
  2692  0008F2  0100               	movlb	0	; () banked
  2693  0008F4  BF7F               	btfsc	(exibirAlarme@m+1)& (0+255),7,b
  2694  0008F6  D02B               	goto	l3877
  2695  0008F8  0100               	movlb	0	; () banked
  2696  0008FA  517F               	movf	(exibirAlarme@m+1)& (0+255),w,b
  2697  0008FC  E105               	bnz	u3910
  2698  0008FE  0E0A               	movlw	10
  2699  000900  0100               	movlb	0	; () banked
  2700  000902  5D7E               	subwf	exibirAlarme@m& (0+255),w,b
  2701  000904  A0D8               	btfss	status,0,c
  2702  000906  D023               	goto	l3877
  2703  000908                     u3910:
  2704                           
  2705                           ; BSR set to: 0
  2706  000908  0100               	movlb	0	; () banked
  2707  00090A  BF81               	btfsc	(exibirAlarme@s+1)& (0+255),7,b
  2708  00090C  D020               	goto	l3877
  2709  00090E  0100               	movlb	0	; () banked
  2710  000910  5181               	movf	(exibirAlarme@s+1)& (0+255),w,b
  2711  000912  E105               	bnz	u3920
  2712  000914  0E0A               	movlw	10
  2713  000916  0100               	movlb	0	; () banked
  2714  000918  5D80               	subwf	exibirAlarme@s& (0+255),w,b
  2715  00091A  A0D8               	btfss	status,0,c
  2716  00091C  D018               	goto	l3877
  2717  00091E                     u3920:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;lcd.c: 127: sprintf(string, "%i:%i:%i", h, m, s);
  2721  00091E  C08F  F06B         	movff	exibirAlarme@string,sprintf@sp
  2722  000922  C090  F06C         	movff	exibirAlarme@string+1,sprintf@sp+1
  2723  000926  0EC6               	movlw	low (STR_5+6)
  2724  000928  0100               	movlb	0	; () banked
  2725  00092A  6F6D               	movwf	sprintf@f& (0+255),b
  2726  00092C  0E08               	movlw	high (STR_5+6)
  2727  00092E  0100               	movlb	0	; () banked
  2728  000930  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  2729  000932  C07C  F06F         	movff	exibirAlarme@h,?_sprintf+4
  2730  000936  C07D  F070         	movff	exibirAlarme@h+1,?_sprintf+5
  2731  00093A  C07E  F071         	movff	exibirAlarme@m,?_sprintf+6
  2732  00093E  C07F  F072         	movff	exibirAlarme@m+1,?_sprintf+7
  2733  000942  C080  F073         	movff	exibirAlarme@s,?_sprintf+8
  2734  000946  C081  F074         	movff	exibirAlarme@s+1,?_sprintf+9
  2735  00094A  ECC6  F00A         	call	_sprintf	;wreg free
  2736  00094E                     l3877:
  2737                           
  2738                           ;lcd.c: 128: }
  2739                           ;lcd.c: 129: if(h >= 10 && m >= 10 && s < 10){
  2740  00094E  0100               	movlb	0	; () banked
  2741  000950  BF7D               	btfsc	(exibirAlarme@h+1)& (0+255),7,b
  2742  000952  D036               	goto	l3885
  2743  000954  0100               	movlb	0	; () banked
  2744  000956  517D               	movf	(exibirAlarme@h+1)& (0+255),w,b
  2745  000958  E105               	bnz	u3930
  2746  00095A  0E0A               	movlw	10
  2747  00095C  0100               	movlb	0	; () banked
  2748  00095E  5D7C               	subwf	exibirAlarme@h& (0+255),w,b
  2749  000960  A0D8               	btfss	status,0,c
  2750  000962  D02E               	goto	l3885
  2751  000964                     u3930:
  2752                           
  2753                           ; BSR set to: 0
  2754  000964  0100               	movlb	0	; () banked
  2755  000966  BF7F               	btfsc	(exibirAlarme@m+1)& (0+255),7,b
  2756  000968  D02B               	goto	l3885
  2757  00096A  0100               	movlb	0	; () banked
  2758  00096C  517F               	movf	(exibirAlarme@m+1)& (0+255),w,b
  2759  00096E  E105               	bnz	u3940
  2760  000970  0E0A               	movlw	10
  2761  000972  0100               	movlb	0	; () banked
  2762  000974  5D7E               	subwf	exibirAlarme@m& (0+255),w,b
  2763  000976  A0D8               	btfss	status,0,c
  2764  000978  D023               	goto	l3885
  2765  00097A                     u3940:
  2766                           
  2767                           ; BSR set to: 0
  2768  00097A  0100               	movlb	0	; () banked
  2769  00097C  BF81               	btfsc	(exibirAlarme@s+1)& (0+255),7,b
  2770  00097E  D008               	goto	l3883
  2771  000980  0100               	movlb	0	; () banked
  2772  000982  5181               	movf	(exibirAlarme@s+1)& (0+255),w,b
  2773  000984  E11D               	bnz	l3885
  2774  000986  0E0A               	movlw	10
  2775  000988  0100               	movlb	0	; () banked
  2776  00098A  5D80               	subwf	exibirAlarme@s& (0+255),w,b
  2777  00098C  B0D8               	btfsc	status,0,c
  2778  00098E  D018               	goto	l3885
  2779  000990                     l3883:
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;lcd.c: 130: sprintf(string, "%i:%i:0%i", h, m, s);
  2783  000990  C08F  F06B         	movff	exibirAlarme@string,sprintf@sp
  2784  000994  C090  F06C         	movff	exibirAlarme@string+1,sprintf@sp+1
  2785  000998  0E87               	movlw	low (STR_6+6)
  2786  00099A  0100               	movlb	0	; () banked
  2787  00099C  6F6D               	movwf	sprintf@f& (0+255),b
  2788  00099E  0E08               	movlw	high (STR_6+6)
  2789  0009A0  0100               	movlb	0	; () banked
  2790  0009A2  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  2791  0009A4  C07C  F06F         	movff	exibirAlarme@h,?_sprintf+4
  2792  0009A8  C07D  F070         	movff	exibirAlarme@h+1,?_sprintf+5
  2793  0009AC  C07E  F071         	movff	exibirAlarme@m,?_sprintf+6
  2794  0009B0  C07F  F072         	movff	exibirAlarme@m+1,?_sprintf+7
  2795  0009B4  C080  F073         	movff	exibirAlarme@s,?_sprintf+8
  2796  0009B8  C081  F074         	movff	exibirAlarme@s+1,?_sprintf+9
  2797  0009BC  ECC6  F00A         	call	_sprintf	;wreg free
  2798  0009C0                     l3885:
  2799                           
  2800                           ;lcd.c: 131: }
  2801                           ;lcd.c: 132: if(h >= 10 && m < 10 && s >= 10){
  2802  0009C0  0100               	movlb	0	; () banked
  2803  0009C2  BF7D               	btfsc	(exibirAlarme@h+1)& (0+255),7,b
  2804  0009C4  D036               	goto	l3893
  2805  0009C6  0100               	movlb	0	; () banked
  2806  0009C8  517D               	movf	(exibirAlarme@h+1)& (0+255),w,b
  2807  0009CA  E105               	bnz	u3960
  2808  0009CC  0E0A               	movlw	10
  2809  0009CE  0100               	movlb	0	; () banked
  2810  0009D0  5D7C               	subwf	exibirAlarme@h& (0+255),w,b
  2811  0009D2  A0D8               	btfss	status,0,c
  2812  0009D4  D02E               	goto	l3893
  2813  0009D6                     u3960:
  2814                           
  2815                           ; BSR set to: 0
  2816  0009D6  0100               	movlb	0	; () banked
  2817  0009D8  BF7F               	btfsc	(exibirAlarme@m+1)& (0+255),7,b
  2818  0009DA  D008               	goto	l3889
  2819  0009DC  0100               	movlb	0	; () banked
  2820  0009DE  517F               	movf	(exibirAlarme@m+1)& (0+255),w,b
  2821  0009E0  E128               	bnz	l3893
  2822  0009E2  0E0A               	movlw	10
  2823  0009E4  0100               	movlb	0	; () banked
  2824  0009E6  5D7E               	subwf	exibirAlarme@m& (0+255),w,b
  2825  0009E8  B0D8               	btfsc	status,0,c
  2826  0009EA  D023               	goto	l3893
  2827  0009EC                     l3889:
  2828                           
  2829                           ; BSR set to: 0
  2830  0009EC  0100               	movlb	0	; () banked
  2831  0009EE  BF81               	btfsc	(exibirAlarme@s+1)& (0+255),7,b
  2832  0009F0  D020               	goto	l3893
  2833  0009F2  0100               	movlb	0	; () banked
  2834  0009F4  5181               	movf	(exibirAlarme@s+1)& (0+255),w,b
  2835  0009F6  E105               	bnz	u3980
  2836  0009F8  0E0A               	movlw	10
  2837  0009FA  0100               	movlb	0	; () banked
  2838  0009FC  5D80               	subwf	exibirAlarme@s& (0+255),w,b
  2839  0009FE  A0D8               	btfss	status,0,c
  2840  000A00  D018               	goto	l3893
  2841  000A02                     u3980:
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;lcd.c: 133: sprintf(string, "%i:0%i:%i", h, m, s);
  2845  000A02  C08F  F06B         	movff	exibirAlarme@string,sprintf@sp
  2846  000A06  C090  F06C         	movff	exibirAlarme@string+1,sprintf@sp+1
  2847  000A0A  0E97               	movlw	low (STR_7+6)
  2848  000A0C  0100               	movlb	0	; () banked
  2849  000A0E  6F6D               	movwf	sprintf@f& (0+255),b
  2850  000A10  0E08               	movlw	high (STR_7+6)
  2851  000A12  0100               	movlb	0	; () banked
  2852  000A14  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  2853  000A16  C07C  F06F         	movff	exibirAlarme@h,?_sprintf+4
  2854  000A1A  C07D  F070         	movff	exibirAlarme@h+1,?_sprintf+5
  2855  000A1E  C07E  F071         	movff	exibirAlarme@m,?_sprintf+6
  2856  000A22  C07F  F072         	movff	exibirAlarme@m+1,?_sprintf+7
  2857  000A26  C080  F073         	movff	exibirAlarme@s,?_sprintf+8
  2858  000A2A  C081  F074         	movff	exibirAlarme@s+1,?_sprintf+9
  2859  000A2E  ECC6  F00A         	call	_sprintf	;wreg free
  2860  000A32                     l3893:
  2861                           
  2862                           ;lcd.c: 134: }if(h >= 10 && m < 10 && s < 10){
  2863  000A32  0100               	movlb	0	; () banked
  2864  000A34  BF7D               	btfsc	(exibirAlarme@h+1)& (0+255),7,b
  2865  000A36  D036               	goto	l3901
  2866  000A38  0100               	movlb	0	; () banked
  2867  000A3A  517D               	movf	(exibirAlarme@h+1)& (0+255),w,b
  2868  000A3C  E105               	bnz	u3990
  2869  000A3E  0E0A               	movlw	10
  2870  000A40  0100               	movlb	0	; () banked
  2871  000A42  5D7C               	subwf	exibirAlarme@h& (0+255),w,b
  2872  000A44  A0D8               	btfss	status,0,c
  2873  000A46  D02E               	goto	l3901
  2874  000A48                     u3990:
  2875                           
  2876                           ; BSR set to: 0
  2877  000A48  0100               	movlb	0	; () banked
  2878  000A4A  BF7F               	btfsc	(exibirAlarme@m+1)& (0+255),7,b
  2879  000A4C  D008               	goto	l3897
  2880  000A4E  0100               	movlb	0	; () banked
  2881  000A50  517F               	movf	(exibirAlarme@m+1)& (0+255),w,b
  2882  000A52  E128               	bnz	l3901
  2883  000A54  0E0A               	movlw	10
  2884  000A56  0100               	movlb	0	; () banked
  2885  000A58  5D7E               	subwf	exibirAlarme@m& (0+255),w,b
  2886  000A5A  B0D8               	btfsc	status,0,c
  2887  000A5C  D023               	goto	l3901
  2888  000A5E                     l3897:
  2889                           
  2890                           ; BSR set to: 0
  2891  000A5E  0100               	movlb	0	; () banked
  2892  000A60  BF81               	btfsc	(exibirAlarme@s+1)& (0+255),7,b
  2893  000A62  D008               	goto	l3899
  2894  000A64  0100               	movlb	0	; () banked
  2895  000A66  5181               	movf	(exibirAlarme@s+1)& (0+255),w,b
  2896  000A68  E11D               	bnz	l3901
  2897  000A6A  0E0A               	movlw	10
  2898  000A6C  0100               	movlb	0	; () banked
  2899  000A6E  5D80               	subwf	exibirAlarme@s& (0+255),w,b
  2900  000A70  B0D8               	btfsc	status,0,c
  2901  000A72  D018               	goto	l3901
  2902  000A74                     l3899:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;lcd.c: 135: sprintf(string, "%i:0%i:0%i", h, m, s);
  2906  000A74  C08F  F06B         	movff	exibirAlarme@string,sprintf@sp
  2907  000A78  C090  F06C         	movff	exibirAlarme@string+1,sprintf@sp+1
  2908  000A7C  0E34               	movlw	low (STR_8+6)
  2909  000A7E  0100               	movlb	0	; () banked
  2910  000A80  6F6D               	movwf	sprintf@f& (0+255),b
  2911  000A82  0E08               	movlw	high (STR_8+6)
  2912  000A84  0100               	movlb	0	; () banked
  2913  000A86  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  2914  000A88  C07C  F06F         	movff	exibirAlarme@h,?_sprintf+4
  2915  000A8C  C07D  F070         	movff	exibirAlarme@h+1,?_sprintf+5
  2916  000A90  C07E  F071         	movff	exibirAlarme@m,?_sprintf+6
  2917  000A94  C07F  F072         	movff	exibirAlarme@m+1,?_sprintf+7
  2918  000A98  C080  F073         	movff	exibirAlarme@s,?_sprintf+8
  2919  000A9C  C081  F074         	movff	exibirAlarme@s+1,?_sprintf+9
  2920  000AA0  ECC6  F00A         	call	_sprintf	;wreg free
  2921  000AA4                     l3901:
  2922                           
  2923                           ;lcd.c: 136: }
  2924                           ;lcd.c: 137: if(h < 10 && m >= 10 && s >= 10){
  2925  000AA4  0100               	movlb	0	; () banked
  2926  000AA6  BF7D               	btfsc	(exibirAlarme@h+1)& (0+255),7,b
  2927  000AA8  D008               	goto	l3903
  2928  000AAA  0100               	movlb	0	; () banked
  2929  000AAC  517D               	movf	(exibirAlarme@h+1)& (0+255),w,b
  2930  000AAE  E133               	bnz	l3909
  2931  000AB0  0E0A               	movlw	10
  2932  000AB2  0100               	movlb	0	; () banked
  2933  000AB4  5D7C               	subwf	exibirAlarme@h& (0+255),w,b
  2934  000AB6  B0D8               	btfsc	status,0,c
  2935  000AB8  D02E               	goto	l3909
  2936  000ABA                     l3903:
  2937                           
  2938                           ; BSR set to: 0
  2939  000ABA  0100               	movlb	0	; () banked
  2940  000ABC  BF7F               	btfsc	(exibirAlarme@m+1)& (0+255),7,b
  2941  000ABE  D02B               	goto	l3909
  2942  000AC0  0100               	movlb	0	; () banked
  2943  000AC2  517F               	movf	(exibirAlarme@m+1)& (0+255),w,b
  2944  000AC4  E105               	bnz	u4030
  2945  000AC6  0E0A               	movlw	10
  2946  000AC8  0100               	movlb	0	; () banked
  2947  000ACA  5D7E               	subwf	exibirAlarme@m& (0+255),w,b
  2948  000ACC  A0D8               	btfss	status,0,c
  2949  000ACE  D023               	goto	l3909
  2950  000AD0                     u4030:
  2951                           
  2952                           ; BSR set to: 0
  2953  000AD0  0100               	movlb	0	; () banked
  2954  000AD2  BF81               	btfsc	(exibirAlarme@s+1)& (0+255),7,b
  2955  000AD4  D020               	goto	l3909
  2956  000AD6  0100               	movlb	0	; () banked
  2957  000AD8  5181               	movf	(exibirAlarme@s+1)& (0+255),w,b
  2958  000ADA  E105               	bnz	u4040
  2959  000ADC  0E0A               	movlw	10
  2960  000ADE  0100               	movlb	0	; () banked
  2961  000AE0  5D80               	subwf	exibirAlarme@s& (0+255),w,b
  2962  000AE2  A0D8               	btfss	status,0,c
  2963  000AE4  D018               	goto	l3909
  2964  000AE6                     u4040:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;lcd.c: 138: sprintf(string, "0%i:%i:%i", h, m, s);
  2968  000AE6  C08F  F06B         	movff	exibirAlarme@string,sprintf@sp
  2969  000AEA  C090  F06C         	movff	exibirAlarme@string+1,sprintf@sp+1
  2970  000AEE  0EA7               	movlw	low (STR_9+6)
  2971  000AF0  0100               	movlb	0	; () banked
  2972  000AF2  6F6D               	movwf	sprintf@f& (0+255),b
  2973  000AF4  0E08               	movlw	high (STR_9+6)
  2974  000AF6  0100               	movlb	0	; () banked
  2975  000AF8  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  2976  000AFA  C07C  F06F         	movff	exibirAlarme@h,?_sprintf+4
  2977  000AFE  C07D  F070         	movff	exibirAlarme@h+1,?_sprintf+5
  2978  000B02  C07E  F071         	movff	exibirAlarme@m,?_sprintf+6
  2979  000B06  C07F  F072         	movff	exibirAlarme@m+1,?_sprintf+7
  2980  000B0A  C080  F073         	movff	exibirAlarme@s,?_sprintf+8
  2981  000B0E  C081  F074         	movff	exibirAlarme@s+1,?_sprintf+9
  2982  000B12  ECC6  F00A         	call	_sprintf	;wreg free
  2983  000B16                     l3909:
  2984                           
  2985                           ;lcd.c: 139: }
  2986                           ;lcd.c: 140: if(h < 10 && m >= 10 && s < 10){
  2987  000B16  0100               	movlb	0	; () banked
  2988  000B18  BF7D               	btfsc	(exibirAlarme@h+1)& (0+255),7,b
  2989  000B1A  D008               	goto	l3911
  2990  000B1C  0100               	movlb	0	; () banked
  2991  000B1E  517D               	movf	(exibirAlarme@h+1)& (0+255),w,b
  2992  000B20  E133               	bnz	l3917
  2993  000B22  0E0A               	movlw	10
  2994  000B24  0100               	movlb	0	; () banked
  2995  000B26  5D7C               	subwf	exibirAlarme@h& (0+255),w,b
  2996  000B28  B0D8               	btfsc	status,0,c
  2997  000B2A  D02E               	goto	l3917
  2998  000B2C                     l3911:
  2999                           
  3000                           ; BSR set to: 0
  3001  000B2C  0100               	movlb	0	; () banked
  3002  000B2E  BF7F               	btfsc	(exibirAlarme@m+1)& (0+255),7,b
  3003  000B30  D02B               	goto	l3917
  3004  000B32  0100               	movlb	0	; () banked
  3005  000B34  517F               	movf	(exibirAlarme@m+1)& (0+255),w,b
  3006  000B36  E105               	bnz	u4060
  3007  000B38  0E0A               	movlw	10
  3008  000B3A  0100               	movlb	0	; () banked
  3009  000B3C  5D7E               	subwf	exibirAlarme@m& (0+255),w,b
  3010  000B3E  A0D8               	btfss	status,0,c
  3011  000B40  D023               	goto	l3917
  3012  000B42                     u4060:
  3013                           
  3014                           ; BSR set to: 0
  3015  000B42  0100               	movlb	0	; () banked
  3016  000B44  BF81               	btfsc	(exibirAlarme@s+1)& (0+255),7,b
  3017  000B46  D008               	goto	l3915
  3018  000B48  0100               	movlb	0	; () banked
  3019  000B4A  5181               	movf	(exibirAlarme@s+1)& (0+255),w,b
  3020  000B4C  E11D               	bnz	l3917
  3021  000B4E  0E0A               	movlw	10
  3022  000B50  0100               	movlb	0	; () banked
  3023  000B52  5D80               	subwf	exibirAlarme@s& (0+255),w,b
  3024  000B54  B0D8               	btfsc	status,0,c
  3025  000B56  D018               	goto	l3917
  3026  000B58                     l3915:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;lcd.c: 141: sprintf(string, "0%i:%i:0%i", h, m, s);
  3030  000B58  C08F  F06B         	movff	exibirAlarme@string,sprintf@sp
  3031  000B5C  C090  F06C         	movff	exibirAlarme@string+1,sprintf@sp+1
  3032  000B60  0E45               	movlw	low (STR_10+6)
  3033  000B62  0100               	movlb	0	; () banked
  3034  000B64  6F6D               	movwf	sprintf@f& (0+255),b
  3035  000B66  0E08               	movlw	high (STR_10+6)
  3036  000B68  0100               	movlb	0	; () banked
  3037  000B6A  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  3038  000B6C  C07C  F06F         	movff	exibirAlarme@h,?_sprintf+4
  3039  000B70  C07D  F070         	movff	exibirAlarme@h+1,?_sprintf+5
  3040  000B74  C07E  F071         	movff	exibirAlarme@m,?_sprintf+6
  3041  000B78  C07F  F072         	movff	exibirAlarme@m+1,?_sprintf+7
  3042  000B7C  C080  F073         	movff	exibirAlarme@s,?_sprintf+8
  3043  000B80  C081  F074         	movff	exibirAlarme@s+1,?_sprintf+9
  3044  000B84  ECC6  F00A         	call	_sprintf	;wreg free
  3045  000B88                     l3917:
  3046                           
  3047                           ;lcd.c: 142: }
  3048                           ;lcd.c: 143: if(h < 10 && m < 10 && s >= 10){
  3049  000B88  0100               	movlb	0	; () banked
  3050  000B8A  BF7D               	btfsc	(exibirAlarme@h+1)& (0+255),7,b
  3051  000B8C  D008               	goto	l3919
  3052  000B8E  0100               	movlb	0	; () banked
  3053  000B90  517D               	movf	(exibirAlarme@h+1)& (0+255),w,b
  3054  000B92  E133               	bnz	l3925
  3055  000B94  0E0A               	movlw	10
  3056  000B96  0100               	movlb	0	; () banked
  3057  000B98  5D7C               	subwf	exibirAlarme@h& (0+255),w,b
  3058  000B9A  B0D8               	btfsc	status,0,c
  3059  000B9C  D02E               	goto	l3925
  3060  000B9E                     l3919:
  3061                           
  3062                           ; BSR set to: 0
  3063  000B9E  0100               	movlb	0	; () banked
  3064  000BA0  BF7F               	btfsc	(exibirAlarme@m+1)& (0+255),7,b
  3065  000BA2  D008               	goto	l3921
  3066  000BA4  0100               	movlb	0	; () banked
  3067  000BA6  517F               	movf	(exibirAlarme@m+1)& (0+255),w,b
  3068  000BA8  E128               	bnz	l3925
  3069  000BAA  0E0A               	movlw	10
  3070  000BAC  0100               	movlb	0	; () banked
  3071  000BAE  5D7E               	subwf	exibirAlarme@m& (0+255),w,b
  3072  000BB0  B0D8               	btfsc	status,0,c
  3073  000BB2  D023               	goto	l3925
  3074  000BB4                     l3921:
  3075                           
  3076                           ; BSR set to: 0
  3077  000BB4  0100               	movlb	0	; () banked
  3078  000BB6  BF81               	btfsc	(exibirAlarme@s+1)& (0+255),7,b
  3079  000BB8  D020               	goto	l3925
  3080  000BBA  0100               	movlb	0	; () banked
  3081  000BBC  5181               	movf	(exibirAlarme@s+1)& (0+255),w,b
  3082  000BBE  E105               	bnz	u4100
  3083  000BC0  0E0A               	movlw	10
  3084  000BC2  0100               	movlb	0	; () banked
  3085  000BC4  5D80               	subwf	exibirAlarme@s& (0+255),w,b
  3086  000BC6  A0D8               	btfss	status,0,c
  3087  000BC8  D018               	goto	l3925
  3088  000BCA                     u4100:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;lcd.c: 144: sprintf(string, "0%i:0%i:%i", h, m, s);
  3092  000BCA  C08F  F06B         	movff	exibirAlarme@string,sprintf@sp
  3093  000BCE  C090  F06C         	movff	exibirAlarme@string+1,sprintf@sp+1
  3094  000BD2  0E56               	movlw	low (STR_11+6)
  3095  000BD4  0100               	movlb	0	; () banked
  3096  000BD6  6F6D               	movwf	sprintf@f& (0+255),b
  3097  000BD8  0E08               	movlw	high (STR_11+6)
  3098  000BDA  0100               	movlb	0	; () banked
  3099  000BDC  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  3100  000BDE  C07C  F06F         	movff	exibirAlarme@h,?_sprintf+4
  3101  000BE2  C07D  F070         	movff	exibirAlarme@h+1,?_sprintf+5
  3102  000BE6  C07E  F071         	movff	exibirAlarme@m,?_sprintf+6
  3103  000BEA  C07F  F072         	movff	exibirAlarme@m+1,?_sprintf+7
  3104  000BEE  C080  F073         	movff	exibirAlarme@s,?_sprintf+8
  3105  000BF2  C081  F074         	movff	exibirAlarme@s+1,?_sprintf+9
  3106  000BF6  ECC6  F00A         	call	_sprintf	;wreg free
  3107  000BFA                     l3925:
  3108                           
  3109                           ;lcd.c: 145: }
  3110                           ;lcd.c: 146: if(h < 10 && m < 10 && s < 10){
  3111  000BFA  0100               	movlb	0	; () banked
  3112  000BFC  BF7D               	btfsc	(exibirAlarme@h+1)& (0+255),7,b
  3113  000BFE  D008               	goto	l3927
  3114  000C00  0100               	movlb	0	; () banked
  3115  000C02  517D               	movf	(exibirAlarme@h+1)& (0+255),w,b
  3116  000C04  E133               	bnz	l3933
  3117  000C06  0E0A               	movlw	10
  3118  000C08  0100               	movlb	0	; () banked
  3119  000C0A  5D7C               	subwf	exibirAlarme@h& (0+255),w,b
  3120  000C0C  B0D8               	btfsc	status,0,c
  3121  000C0E  D02E               	goto	l3933
  3122  000C10                     l3927:
  3123                           
  3124                           ; BSR set to: 0
  3125  000C10  0100               	movlb	0	; () banked
  3126  000C12  BF7F               	btfsc	(exibirAlarme@m+1)& (0+255),7,b
  3127  000C14  D008               	goto	l3929
  3128  000C16  0100               	movlb	0	; () banked
  3129  000C18  517F               	movf	(exibirAlarme@m+1)& (0+255),w,b
  3130  000C1A  E128               	bnz	l3933
  3131  000C1C  0E0A               	movlw	10
  3132  000C1E  0100               	movlb	0	; () banked
  3133  000C20  5D7E               	subwf	exibirAlarme@m& (0+255),w,b
  3134  000C22  B0D8               	btfsc	status,0,c
  3135  000C24  D023               	goto	l3933
  3136  000C26                     l3929:
  3137                           
  3138                           ; BSR set to: 0
  3139  000C26  0100               	movlb	0	; () banked
  3140  000C28  BF81               	btfsc	(exibirAlarme@s+1)& (0+255),7,b
  3141  000C2A  D008               	goto	l3931
  3142  000C2C  0100               	movlb	0	; () banked
  3143  000C2E  5181               	movf	(exibirAlarme@s+1)& (0+255),w,b
  3144  000C30  E11D               	bnz	l3933
  3145  000C32  0E0A               	movlw	10
  3146  000C34  0100               	movlb	0	; () banked
  3147  000C36  5D80               	subwf	exibirAlarme@s& (0+255),w,b
  3148  000C38  B0D8               	btfsc	status,0,c
  3149  000C3A  D018               	goto	l3933
  3150  000C3C                     l3931:
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;lcd.c: 147: sprintf(string, "0%i:0%i:0%i", h, m, s);
  3154  000C3C  C08F  F06B         	movff	exibirAlarme@string,sprintf@sp
  3155  000C40  C090  F06C         	movff	exibirAlarme@string+1,sprintf@sp+1
  3156  000C44  0E11               	movlw	low (STR_12+6)
  3157  000C46  0100               	movlb	0	; () banked
  3158  000C48  6F6D               	movwf	sprintf@f& (0+255),b
  3159  000C4A  0E08               	movlw	high (STR_12+6)
  3160  000C4C  0100               	movlb	0	; () banked
  3161  000C4E  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  3162  000C50  C07C  F06F         	movff	exibirAlarme@h,?_sprintf+4
  3163  000C54  C07D  F070         	movff	exibirAlarme@h+1,?_sprintf+5
  3164  000C58  C07E  F071         	movff	exibirAlarme@m,?_sprintf+6
  3165  000C5C  C07F  F072         	movff	exibirAlarme@m+1,?_sprintf+7
  3166  000C60  C080  F073         	movff	exibirAlarme@s,?_sprintf+8
  3167  000C64  C081  F074         	movff	exibirAlarme@s+1,?_sprintf+9
  3168  000C68  ECC6  F00A         	call	_sprintf	;wreg free
  3169  000C6C                     l3933:
  3170                           
  3171                           ;lcd.c: 148: }
  3172                           ;lcd.c: 149: return string;
  3173  000C6C  C08F  F07C         	movff	exibirAlarme@string,?_exibirAlarme
  3174  000C70  C090  F07D         	movff	exibirAlarme@string+1,?_exibirAlarme+1
  3175  000C74  0012               	return	
  3176  000C76                     __end_of_exibirAlarme:
  3177                           	opt stack 0
  3178                           tblptru	equ	0xFF8
  3179                           tblptrh	equ	0xFF7
  3180                           tblptrl	equ	0xFF6
  3181                           tablat	equ	0xFF5
  3182                           intcon	equ	0xFF2
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           postdec1	equ	0xFE5
  3186                           fsr1l	equ	0xFE1
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _controlaCursor *****************
  3190 ;; Defined at:
  3191 ;;		line 30 in file "lcd.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3207 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3208 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        2 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    6
  3212 ;; This function calls:
  3213 ;;		_SetDDRamAddr
  3214 ;; This function is called by:
  3215 ;;		_inicializaTela2
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text16
  3220  002192                     __ptext16:
  3221                           	opt stack 0
  3222  002192                     _controlaCursor:
  3223                           	opt stack 22
  3224                           
  3225                           ;lcd.c: 31: switch(posCursor){
  3226                           
  3227                           ;incstack = 0
  3228  002192  D00C               	goto	l3741
  3229  002194                     l3733:
  3230                           
  3231                           ;lcd.c: 33: SetDDRamAddr(0x41);
  3232  002194  0E41               	movlw	65
  3233  002196  ECAA  F00F         	call	_SetDDRamAddr
  3234                           
  3235                           ;lcd.c: 34: break;
  3236  00219A  0012               	return	
  3237  00219C                     l3735:
  3238                           
  3239                           ;lcd.c: 36: SetDDRamAddr(0x44);
  3240  00219C  0E44               	movlw	68
  3241  00219E  ECAA  F00F         	call	_SetDDRamAddr
  3242                           
  3243                           ;lcd.c: 37: break;
  3244  0021A2  0012               	return	
  3245  0021A4                     l3737:
  3246                           
  3247                           ;lcd.c: 39: SetDDRamAddr(0x47);
  3248  0021A4  0E47               	movlw	71
  3249  0021A6  ECAA  F00F         	call	_SetDDRamAddr
  3250                           
  3251                           ;lcd.c: 44: }
  3252                           
  3253                           ;lcd.c: 42: return;
  3254                           
  3255                           ;lcd.c: 41: default:
  3256                           
  3257                           ;lcd.c: 40: break;
  3258  0021AA  0012               	return	
  3259  0021AC                     l3741:
  3260  0021AC  C028  F063         	movff	_posCursor,??_controlaCursor
  3261  0021B0  C029  F064         	movff	_posCursor+1,??_controlaCursor+1
  3262                           
  3263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3264                           ; Switch size 1, requested type "space"
  3265                           ; Number of cases is 1, Range of values is 0 to 0
  3266                           ; switch strategies available:
  3267                           ; Name         Instructions Cycles
  3268                           ; simple_byte            4     3 (average)
  3269                           ;	Chosen strategy is simple_byte
  3270  0021B4  0100               	movlb	0	; () banked
  3271  0021B6  5164               	movf	(??_controlaCursor+1)& (0+255),w,b
  3272  0021B8  0A00               	xorlw	0	; case 0
  3273  0021BA  A4D8               	btfss	status,2,c
  3274  0021BC  0012               	return	
  3275                           
  3276                           ; BSR set to: 0
  3277                           ; Switch size 1, requested type "space"
  3278                           ; Number of cases is 3, Range of values is 0 to 2
  3279                           ; switch strategies available:
  3280                           ; Name         Instructions Cycles
  3281                           ; simple_byte           10     6 (average)
  3282                           ;	Chosen strategy is simple_byte
  3283  0021BE  0100               	movlb	0	; () banked
  3284  0021C0  5163               	movf	??_controlaCursor& (0+255),w,b
  3285  0021C2  0A00               	xorlw	0	; case 0
  3286  0021C4  B4D8               	btfsc	status,2,c
  3287  0021C6  D7E6               	goto	l3733
  3288  0021C8  0A01               	xorlw	1	; case 1
  3289  0021CA  B4D8               	btfsc	status,2,c
  3290  0021CC  D7E7               	goto	l3735
  3291  0021CE  0A03               	xorlw	3	; case 2
  3292  0021D0  A4D8               	btfss	status,2,c
  3293  0021D2  0012               	return	
  3294  0021D4  D7E7               	goto	l3737
  3295  0021D6                     __end_of_controlaCursor:
  3296                           	opt stack 0
  3297                           tblptru	equ	0xFF8
  3298                           tblptrh	equ	0xFF7
  3299                           tblptrl	equ	0xFF6
  3300                           tablat	equ	0xFF5
  3301                           intcon	equ	0xFF2
  3302                           postinc0	equ	0xFEE
  3303                           wreg	equ	0xFE8
  3304                           postdec1	equ	0xFE5
  3305                           fsr1l	equ	0xFE1
  3306                           status	equ	0xFD8
  3307                           
  3308 ;; *************** function _inicializaTela1 *****************
  3309 ;; Defined at:
  3310 ;;		line 152 in file "lcd.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    7
  3331 ;; This function calls:
  3332 ;;		_SetDDRamAddr
  3333 ;;		_WriteCmdXLCD
  3334 ;;		_controlaCursorR
  3335 ;;		_exibirData
  3336 ;;		_exibirHora
  3337 ;;		_putrsXLCD
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;;		_atualiza_tela
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text17
  3345  001CE0                     __ptext17:
  3346                           	opt stack 0
  3347  001CE0                     _inicializaTela1:
  3348                           	opt stack 23
  3349                           
  3350                           ;lcd.c: 153: if(T1 == 0){
  3351                           
  3352                           ;incstack = 0
  3353  001CE0  0100               	movlb	0	; () banked
  3354  001CE2  5199               	movf	_T1& (0+255),w,b
  3355  001CE4  0100               	movlb	0	; () banked
  3356  001CE6  119A               	iorwf	(_T1+1)& (0+255),w,b
  3357  001CE8  A4D8               	btfss	status,2,c
  3358  001CEA  D00E               	goto	l3969
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;lcd.c: 154: WriteCmdXLCD(0x0C);
  3362  001CEC  0E0C               	movlw	12
  3363  001CEE  EC29  F011         	call	_WriteCmdXLCD
  3364                           
  3365                           ;lcd.c: 155: T1 = 1;
  3366  001CF2  0E00               	movlw	0
  3367  001CF4  0100               	movlb	0	; () banked
  3368  001CF6  6F9A               	movwf	(_T1+1)& (0+255),b
  3369  001CF8  0E01               	movlw	1
  3370  001CFA  6F99               	movwf	_T1& (0+255),b
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;lcd.c: 156: T2 = 0;
  3374  001CFC  0E00               	movlw	0
  3375  001CFE  0100               	movlb	0	; () banked
  3376  001D00  6F98               	movwf	(_T2+1)& (0+255),b
  3377  001D02  0E00               	movlw	0
  3378  001D04  6F97               	movwf	_T2& (0+255),b
  3379                           
  3380                           ;lcd.c: 157: }else{
  3381  001D06  0012               	return	
  3382  001D08                     l3969:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;lcd.c: 158: SetDDRamAddr(0x0);
  3386  001D08  0E00               	movlw	0
  3387  001D0A  ECAA  F00F         	call	_SetDDRamAddr
  3388                           
  3389                           ;lcd.c: 159: putrsXLCD(exibirHora(re.hora, re.minuto, re.segundo));
  3390  001D0E  C038  F07C         	movff	_re+4,exibirHora@h
  3391  001D12  C039  F07D         	movff	_re+5,exibirHora@h+1
  3392  001D16  C034  F07E         	movff	_re,exibirHora@m
  3393  001D1A  C035  F07F         	movff	_re+1,exibirHora@m+1
  3394  001D1E  C036  F080         	movff	_re+2,exibirHora@s
  3395  001D22  C037  F081         	movff	_re+3,exibirHora@s+1
  3396  001D26  EC3B  F006         	call	_exibirHora	;wreg free
  3397  001D2A  C07C  F082         	movff	?_exibirHora,putrsXLCD@buffer
  3398  001D2E  C07D  F083         	movff	?_exibirHora+1,putrsXLCD@buffer+1
  3399  001D32  ECE9  F011         	call	_putrsXLCD	;wreg free
  3400                           
  3401                           ;lcd.c: 160: SetDDRamAddr(0x40);
  3402  001D36  0E40               	movlw	64
  3403  001D38  ECAA  F00F         	call	_SetDDRamAddr
  3404                           
  3405                           ;lcd.c: 161: putrsXLCD(exibirData(ca.dia, ca.mes, ca.ano));
  3406  001D3C  C03A  F07C         	movff	_ca,exibirData@dia
  3407  001D40  C03B  F07D         	movff	_ca+1,exibirData@dia+1
  3408  001D44  C03C  F07E         	movff	_ca+2,exibirData@mes
  3409  001D48  C03D  F07F         	movff	_ca+3,exibirData@mes+1
  3410  001D4C  C03E  F080         	movff	_ca+4,exibirData@ano
  3411  001D50  C03F  F081         	movff	_ca+5,exibirData@ano+1
  3412  001D54  EC85  F00B         	call	_exibirData	;wreg free
  3413  001D58  C07C  F082         	movff	?_exibirData,putrsXLCD@buffer
  3414  001D5C  C07D  F083         	movff	?_exibirData+1,putrsXLCD@buffer+1
  3415  001D60  ECE9  F011         	call	_putrsXLCD	;wreg free
  3416                           
  3417                           ;lcd.c: 162: controlaCursorR();
  3418  001D64  ECB5  F00E         	call	_controlaCursorR	;wreg free
  3419  001D68  0012               	return	
  3420  001D6A                     __end_of_inicializaTela1:
  3421                           	opt stack 0
  3422                           tblptru	equ	0xFF8
  3423                           tblptrh	equ	0xFF7
  3424                           tblptrl	equ	0xFF6
  3425                           tablat	equ	0xFF5
  3426                           intcon	equ	0xFF2
  3427                           postinc0	equ	0xFEE
  3428                           wreg	equ	0xFE8
  3429                           postdec1	equ	0xFE5
  3430                           fsr1l	equ	0xFE1
  3431                           status	equ	0xFD8
  3432                           
  3433 ;; *************** function _putrsXLCD *****************
  3434 ;; Defined at:
  3435 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  buffer          2   34[BANK0 ] PTR const unsigned char 
  3438 ;;		 -> NULL(0), 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3450 ;;      Params:         0       2       0       0       0       0       0       0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3453 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3454 ;;Total ram usage:        2 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    6
  3457 ;; This function calls:
  3458 ;;		_BusyXLCD
  3459 ;;		_WriteDataXLCD
  3460 ;; This function is called by:
  3461 ;;		_inicializaTela1
  3462 ;;		_inicializaTela2
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text18
  3467  0023D2                     __ptext18:
  3468                           	opt stack 0
  3469  0023D2                     _putrsXLCD:
  3470                           	opt stack 23
  3471                           
  3472                           ;incstack = 0
  3473  0023D2  D00F               	goto	l3945
  3474  0023D4                     l3939:
  3475  0023D4  EC65  F011         	call	_BusyXLCD	;wreg free
  3476  0023D8  0900               	iorlw	0
  3477  0023DA  A4D8               	btfss	status,2,c
  3478  0023DC  D7FB               	goto	l3939
  3479  0023DE  C082  FFD9         	movff	putrsXLCD@buffer,fsr2l
  3480  0023E2  C083  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  3481  0023E6  50DF               	movf	indf2,w,c
  3482  0023E8  EC0A  F011         	call	_WriteDataXLCD
  3483  0023EC  0100               	movlb	0	; () banked
  3484  0023EE  4B82               	infsnz	putrsXLCD@buffer& (0+255),f,b
  3485  0023F0  2B83               	incf	(putrsXLCD@buffer+1)& (0+255),f,b
  3486  0023F2                     l3945:
  3487  0023F2  C082  FFD9         	movff	putrsXLCD@buffer,fsr2l
  3488  0023F6  C083  FFDA         	movff	putrsXLCD@buffer+1,fsr2h
  3489  0023FA  50DF               	movf	indf2,w,c
  3490  0023FC  B4D8               	btfsc	status,2,c
  3491  0023FE  0012               	return	
  3492  002400  D7E9               	goto	l3939
  3493  002402                     __end_of_putrsXLCD:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           intcon	equ	0xFF2
  3500                           postinc0	equ	0xFEE
  3501                           wreg	equ	0xFE8
  3502                           postdec1	equ	0xFE5
  3503                           fsr1l	equ	0xFE1
  3504                           indf2	equ	0xFDF
  3505                           fsr2h	equ	0xFDA
  3506                           fsr2l	equ	0xFD9
  3507                           status	equ	0xFD8
  3508                           
  3509 ;; *************** function _WriteDataXLCD *****************
  3510 ;; Defined at:
  3511 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  data            1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  data            1   32[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0
  3526 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3528 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    5
  3532 ;; This function calls:
  3533 ;;		_DelayFor18TCY
  3534 ;; This function is called by:
  3535 ;;		_putrsXLCD
  3536 ;;		_putsXLCD
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text19
  3541  002214                     __ptext19:
  3542                           	opt stack 0
  3543  002214                     _WriteDataXLCD:
  3544                           	opt stack 23
  3545                           
  3546                           ;incstack = 0
  3547                           ;WriteDataXLCD@data stored from wreg
  3548  002214  6E21               	movwf	WriteDataXLCD@data,c
  3549  002216  0EF0               	movlw	240
  3550  002218  1693               	andwf	3987,f,c	;volatile
  3551  00221A  0EF0               	movlw	240
  3552  00221C  1681               	andwf	3969,f,c	;volatile
  3553  00221E  3821               	swapf	WriteDataXLCD@data,w,c
  3554  002220  0B0F               	andlw	15
  3555  002222  0B0F               	andlw	15
  3556  002224  1281               	iorwf	3969,f,c	;volatile
  3557  002226  8A8A               	bsf	3978,5,c	;volatile
  3558  002228  9C8A               	bcf	3978,6,c	;volatile
  3559  00222A  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  3560  00222E  888A               	bsf	3978,4,c	;volatile
  3561  002230  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  3562  002234  988A               	bcf	3978,4,c	;volatile
  3563  002236  0EF0               	movlw	240
  3564  002238  1681               	andwf	3969,f,c	;volatile
  3565  00223A  5021               	movf	WriteDataXLCD@data,w,c
  3566  00223C  0B0F               	andlw	15
  3567  00223E  1281               	iorwf	3969,f,c	;volatile
  3568  002240  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  3569  002244  888A               	bsf	3978,4,c	;volatile
  3570  002246  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  3571  00224A  988A               	bcf	3978,4,c	;volatile
  3572  00224C  0E0F               	movlw	15
  3573  00224E  1293               	iorwf	3987,f,c	;volatile
  3574  002250  0012               	return	
  3575  002252                     __end_of_WriteDataXLCD:
  3576                           	opt stack 0
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           intcon	equ	0xFF2
  3582                           postinc0	equ	0xFEE
  3583                           wreg	equ	0xFE8
  3584                           postdec1	equ	0xFE5
  3585                           fsr1l	equ	0xFE1
  3586                           indf2	equ	0xFDF
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function _exibirHora *****************
  3592 ;; Defined at:
  3593 ;;		line 94 in file "lcd.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  h               2   28[BANK0 ] int 
  3596 ;;  m               2   30[BANK0 ] int 
  3597 ;;  s               2   32[BANK0 ] int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  2   28[BANK0 ] PTR unsigned char 
  3602 ;; Registers used:
  3603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3609 ;;      Params:         0       6       0       0       0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3612 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3613 ;;Total ram usage:        6 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    5
  3616 ;; This function calls:
  3617 ;;		_sprintf
  3618 ;; This function is called by:
  3619 ;;		_inicializaTela1
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text20
  3624  000C76                     __ptext20:
  3625                           	opt stack 0
  3626  000C76                     _exibirHora:
  3627                           	opt stack 24
  3628                           
  3629                           ;lcd.c: 95: static char *string;
  3630                           ;lcd.c: 97: if(h >= 10 && m >= 10 && s >= 10){
  3631                           
  3632                           ;incstack = 0
  3633  000C76  0100               	movlb	0	; () banked
  3634  000C78  BF7D               	btfsc	(exibirHora@h+1)& (0+255),7,b
  3635  000C7A  D036               	goto	l3809
  3636  000C7C  0100               	movlb	0	; () banked
  3637  000C7E  517D               	movf	(exibirHora@h+1)& (0+255),w,b
  3638  000C80  E105               	bnz	u3660
  3639  000C82  0E0A               	movlw	10
  3640  000C84  0100               	movlb	0	; () banked
  3641  000C86  5D7C               	subwf	exibirHora@h& (0+255),w,b
  3642  000C88  A0D8               	btfss	status,0,c
  3643  000C8A  D02E               	goto	l3809
  3644  000C8C                     u3660:
  3645                           
  3646                           ; BSR set to: 0
  3647  000C8C  0100               	movlb	0	; () banked
  3648  000C8E  BF7F               	btfsc	(exibirHora@m+1)& (0+255),7,b
  3649  000C90  D02B               	goto	l3809
  3650  000C92  0100               	movlb	0	; () banked
  3651  000C94  517F               	movf	(exibirHora@m+1)& (0+255),w,b
  3652  000C96  E105               	bnz	u3670
  3653  000C98  0E0A               	movlw	10
  3654  000C9A  0100               	movlb	0	; () banked
  3655  000C9C  5D7E               	subwf	exibirHora@m& (0+255),w,b
  3656  000C9E  A0D8               	btfss	status,0,c
  3657  000CA0  D023               	goto	l3809
  3658  000CA2                     u3670:
  3659                           
  3660                           ; BSR set to: 0
  3661  000CA2  0100               	movlb	0	; () banked
  3662  000CA4  BF81               	btfsc	(exibirHora@s+1)& (0+255),7,b
  3663  000CA6  D020               	goto	l3809
  3664  000CA8  0100               	movlb	0	; () banked
  3665  000CAA  5181               	movf	(exibirHora@s+1)& (0+255),w,b
  3666  000CAC  E105               	bnz	u3680
  3667  000CAE  0E0A               	movlw	10
  3668  000CB0  0100               	movlb	0	; () banked
  3669  000CB2  5D80               	subwf	exibirHora@s& (0+255),w,b
  3670  000CB4  A0D8               	btfss	status,0,c
  3671  000CB6  D018               	goto	l3809
  3672  000CB8                     u3680:
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;lcd.c: 98: sprintf(string, "HORA: %i:%i:%i", h, m, s);
  3676  000CB8  C091  F06B         	movff	exibirHora@string,sprintf@sp
  3677  000CBC  C092  F06C         	movff	exibirHora@string+1,sprintf@sp+1
  3678  000CC0  0EC0               	movlw	low STR_5
  3679  000CC2  0100               	movlb	0	; () banked
  3680  000CC4  6F6D               	movwf	sprintf@f& (0+255),b
  3681  000CC6  0E08               	movlw	high STR_5
  3682  000CC8  0100               	movlb	0	; () banked
  3683  000CCA  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  3684  000CCC  C07C  F06F         	movff	exibirHora@h,?_sprintf+4
  3685  000CD0  C07D  F070         	movff	exibirHora@h+1,?_sprintf+5
  3686  000CD4  C07E  F071         	movff	exibirHora@m,?_sprintf+6
  3687  000CD8  C07F  F072         	movff	exibirHora@m+1,?_sprintf+7
  3688  000CDC  C080  F073         	movff	exibirHora@s,?_sprintf+8
  3689  000CE0  C081  F074         	movff	exibirHora@s+1,?_sprintf+9
  3690  000CE4  ECC6  F00A         	call	_sprintf	;wreg free
  3691  000CE8                     l3809:
  3692                           
  3693                           ;lcd.c: 99: }
  3694                           ;lcd.c: 100: if(h >= 10 && m >= 10 && s < 10){
  3695  000CE8  0100               	movlb	0	; () banked
  3696  000CEA  BF7D               	btfsc	(exibirHora@h+1)& (0+255),7,b
  3697  000CEC  D036               	goto	l3817
  3698  000CEE  0100               	movlb	0	; () banked
  3699  000CF0  517D               	movf	(exibirHora@h+1)& (0+255),w,b
  3700  000CF2  E105               	bnz	u3690
  3701  000CF4  0E0A               	movlw	10
  3702  000CF6  0100               	movlb	0	; () banked
  3703  000CF8  5D7C               	subwf	exibirHora@h& (0+255),w,b
  3704  000CFA  A0D8               	btfss	status,0,c
  3705  000CFC  D02E               	goto	l3817
  3706  000CFE                     u3690:
  3707                           
  3708                           ; BSR set to: 0
  3709  000CFE  0100               	movlb	0	; () banked
  3710  000D00  BF7F               	btfsc	(exibirHora@m+1)& (0+255),7,b
  3711  000D02  D02B               	goto	l3817
  3712  000D04  0100               	movlb	0	; () banked
  3713  000D06  517F               	movf	(exibirHora@m+1)& (0+255),w,b
  3714  000D08  E105               	bnz	u3700
  3715  000D0A  0E0A               	movlw	10
  3716  000D0C  0100               	movlb	0	; () banked
  3717  000D0E  5D7E               	subwf	exibirHora@m& (0+255),w,b
  3718  000D10  A0D8               	btfss	status,0,c
  3719  000D12  D023               	goto	l3817
  3720  000D14                     u3700:
  3721                           
  3722                           ; BSR set to: 0
  3723  000D14  0100               	movlb	0	; () banked
  3724  000D16  BF81               	btfsc	(exibirHora@s+1)& (0+255),7,b
  3725  000D18  D008               	goto	l3815
  3726  000D1A  0100               	movlb	0	; () banked
  3727  000D1C  5181               	movf	(exibirHora@s+1)& (0+255),w,b
  3728  000D1E  E11D               	bnz	l3817
  3729  000D20  0E0A               	movlw	10
  3730  000D22  0100               	movlb	0	; () banked
  3731  000D24  5D80               	subwf	exibirHora@s& (0+255),w,b
  3732  000D26  B0D8               	btfsc	status,0,c
  3733  000D28  D018               	goto	l3817
  3734  000D2A                     l3815:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;lcd.c: 101: sprintf(string, "HORA: %i:%i:0%i", h, m, s);
  3738  000D2A  C091  F06B         	movff	exibirHora@string,sprintf@sp
  3739  000D2E  C092  F06C         	movff	exibirHora@string+1,sprintf@sp+1
  3740  000D32  0E81               	movlw	low STR_6
  3741  000D34  0100               	movlb	0	; () banked
  3742  000D36  6F6D               	movwf	sprintf@f& (0+255),b
  3743  000D38  0E08               	movlw	high STR_6
  3744  000D3A  0100               	movlb	0	; () banked
  3745  000D3C  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  3746  000D3E  C07C  F06F         	movff	exibirHora@h,?_sprintf+4
  3747  000D42  C07D  F070         	movff	exibirHora@h+1,?_sprintf+5
  3748  000D46  C07E  F071         	movff	exibirHora@m,?_sprintf+6
  3749  000D4A  C07F  F072         	movff	exibirHora@m+1,?_sprintf+7
  3750  000D4E  C080  F073         	movff	exibirHora@s,?_sprintf+8
  3751  000D52  C081  F074         	movff	exibirHora@s+1,?_sprintf+9
  3752  000D56  ECC6  F00A         	call	_sprintf	;wreg free
  3753  000D5A                     l3817:
  3754                           
  3755                           ;lcd.c: 102: }
  3756                           ;lcd.c: 103: if(h >= 10 && m < 10 && s >= 10){
  3757  000D5A  0100               	movlb	0	; () banked
  3758  000D5C  BF7D               	btfsc	(exibirHora@h+1)& (0+255),7,b
  3759  000D5E  D036               	goto	l3825
  3760  000D60  0100               	movlb	0	; () banked
  3761  000D62  517D               	movf	(exibirHora@h+1)& (0+255),w,b
  3762  000D64  E105               	bnz	u3720
  3763  000D66  0E0A               	movlw	10
  3764  000D68  0100               	movlb	0	; () banked
  3765  000D6A  5D7C               	subwf	exibirHora@h& (0+255),w,b
  3766  000D6C  A0D8               	btfss	status,0,c
  3767  000D6E  D02E               	goto	l3825
  3768  000D70                     u3720:
  3769                           
  3770                           ; BSR set to: 0
  3771  000D70  0100               	movlb	0	; () banked
  3772  000D72  BF7F               	btfsc	(exibirHora@m+1)& (0+255),7,b
  3773  000D74  D008               	goto	l3821
  3774  000D76  0100               	movlb	0	; () banked
  3775  000D78  517F               	movf	(exibirHora@m+1)& (0+255),w,b
  3776  000D7A  E128               	bnz	l3825
  3777  000D7C  0E0A               	movlw	10
  3778  000D7E  0100               	movlb	0	; () banked
  3779  000D80  5D7E               	subwf	exibirHora@m& (0+255),w,b
  3780  000D82  B0D8               	btfsc	status,0,c
  3781  000D84  D023               	goto	l3825
  3782  000D86                     l3821:
  3783                           
  3784                           ; BSR set to: 0
  3785  000D86  0100               	movlb	0	; () banked
  3786  000D88  BF81               	btfsc	(exibirHora@s+1)& (0+255),7,b
  3787  000D8A  D020               	goto	l3825
  3788  000D8C  0100               	movlb	0	; () banked
  3789  000D8E  5181               	movf	(exibirHora@s+1)& (0+255),w,b
  3790  000D90  E105               	bnz	u3740
  3791  000D92  0E0A               	movlw	10
  3792  000D94  0100               	movlb	0	; () banked
  3793  000D96  5D80               	subwf	exibirHora@s& (0+255),w,b
  3794  000D98  A0D8               	btfss	status,0,c
  3795  000D9A  D018               	goto	l3825
  3796  000D9C                     u3740:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;lcd.c: 104: sprintf(string, "HORA: %i:0%i:%i", h, m, s);
  3800  000D9C  C091  F06B         	movff	exibirHora@string,sprintf@sp
  3801  000DA0  C092  F06C         	movff	exibirHora@string+1,sprintf@sp+1
  3802  000DA4  0E91               	movlw	low STR_7
  3803  000DA6  0100               	movlb	0	; () banked
  3804  000DA8  6F6D               	movwf	sprintf@f& (0+255),b
  3805  000DAA  0E08               	movlw	high STR_7
  3806  000DAC  0100               	movlb	0	; () banked
  3807  000DAE  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  3808  000DB0  C07C  F06F         	movff	exibirHora@h,?_sprintf+4
  3809  000DB4  C07D  F070         	movff	exibirHora@h+1,?_sprintf+5
  3810  000DB8  C07E  F071         	movff	exibirHora@m,?_sprintf+6
  3811  000DBC  C07F  F072         	movff	exibirHora@m+1,?_sprintf+7
  3812  000DC0  C080  F073         	movff	exibirHora@s,?_sprintf+8
  3813  000DC4  C081  F074         	movff	exibirHora@s+1,?_sprintf+9
  3814  000DC8  ECC6  F00A         	call	_sprintf	;wreg free
  3815  000DCC                     l3825:
  3816                           
  3817                           ;lcd.c: 105: }if(h >= 10 && m < 10 && s < 10){
  3818  000DCC  0100               	movlb	0	; () banked
  3819  000DCE  BF7D               	btfsc	(exibirHora@h+1)& (0+255),7,b
  3820  000DD0  D036               	goto	l3833
  3821  000DD2  0100               	movlb	0	; () banked
  3822  000DD4  517D               	movf	(exibirHora@h+1)& (0+255),w,b
  3823  000DD6  E105               	bnz	u3750
  3824  000DD8  0E0A               	movlw	10
  3825  000DDA  0100               	movlb	0	; () banked
  3826  000DDC  5D7C               	subwf	exibirHora@h& (0+255),w,b
  3827  000DDE  A0D8               	btfss	status,0,c
  3828  000DE0  D02E               	goto	l3833
  3829  000DE2                     u3750:
  3830                           
  3831                           ; BSR set to: 0
  3832  000DE2  0100               	movlb	0	; () banked
  3833  000DE4  BF7F               	btfsc	(exibirHora@m+1)& (0+255),7,b
  3834  000DE6  D008               	goto	l3829
  3835  000DE8  0100               	movlb	0	; () banked
  3836  000DEA  517F               	movf	(exibirHora@m+1)& (0+255),w,b
  3837  000DEC  E128               	bnz	l3833
  3838  000DEE  0E0A               	movlw	10
  3839  000DF0  0100               	movlb	0	; () banked
  3840  000DF2  5D7E               	subwf	exibirHora@m& (0+255),w,b
  3841  000DF4  B0D8               	btfsc	status,0,c
  3842  000DF6  D023               	goto	l3833
  3843  000DF8                     l3829:
  3844                           
  3845                           ; BSR set to: 0
  3846  000DF8  0100               	movlb	0	; () banked
  3847  000DFA  BF81               	btfsc	(exibirHora@s+1)& (0+255),7,b
  3848  000DFC  D008               	goto	l3831
  3849  000DFE  0100               	movlb	0	; () banked
  3850  000E00  5181               	movf	(exibirHora@s+1)& (0+255),w,b
  3851  000E02  E11D               	bnz	l3833
  3852  000E04  0E0A               	movlw	10
  3853  000E06  0100               	movlb	0	; () banked
  3854  000E08  5D80               	subwf	exibirHora@s& (0+255),w,b
  3855  000E0A  B0D8               	btfsc	status,0,c
  3856  000E0C  D018               	goto	l3833
  3857  000E0E                     l3831:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;lcd.c: 106: sprintf(string, "HORA: %i:0%i:0%i", h, m, s);
  3861  000E0E  C091  F06B         	movff	exibirHora@string,sprintf@sp
  3862  000E12  C092  F06C         	movff	exibirHora@string+1,sprintf@sp+1
  3863  000E16  0E2E               	movlw	low STR_8
  3864  000E18  0100               	movlb	0	; () banked
  3865  000E1A  6F6D               	movwf	sprintf@f& (0+255),b
  3866  000E1C  0E08               	movlw	high STR_8
  3867  000E1E  0100               	movlb	0	; () banked
  3868  000E20  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  3869  000E22  C07C  F06F         	movff	exibirHora@h,?_sprintf+4
  3870  000E26  C07D  F070         	movff	exibirHora@h+1,?_sprintf+5
  3871  000E2A  C07E  F071         	movff	exibirHora@m,?_sprintf+6
  3872  000E2E  C07F  F072         	movff	exibirHora@m+1,?_sprintf+7
  3873  000E32  C080  F073         	movff	exibirHora@s,?_sprintf+8
  3874  000E36  C081  F074         	movff	exibirHora@s+1,?_sprintf+9
  3875  000E3A  ECC6  F00A         	call	_sprintf	;wreg free
  3876  000E3E                     l3833:
  3877                           
  3878                           ;lcd.c: 107: }
  3879                           ;lcd.c: 108: if(h < 10 && m >= 10 && s >= 10){
  3880  000E3E  0100               	movlb	0	; () banked
  3881  000E40  BF7D               	btfsc	(exibirHora@h+1)& (0+255),7,b
  3882  000E42  D008               	goto	l3835
  3883  000E44  0100               	movlb	0	; () banked
  3884  000E46  517D               	movf	(exibirHora@h+1)& (0+255),w,b
  3885  000E48  E133               	bnz	l3841
  3886  000E4A  0E0A               	movlw	10
  3887  000E4C  0100               	movlb	0	; () banked
  3888  000E4E  5D7C               	subwf	exibirHora@h& (0+255),w,b
  3889  000E50  B0D8               	btfsc	status,0,c
  3890  000E52  D02E               	goto	l3841
  3891  000E54                     l3835:
  3892                           
  3893                           ; BSR set to: 0
  3894  000E54  0100               	movlb	0	; () banked
  3895  000E56  BF7F               	btfsc	(exibirHora@m+1)& (0+255),7,b
  3896  000E58  D02B               	goto	l3841
  3897  000E5A  0100               	movlb	0	; () banked
  3898  000E5C  517F               	movf	(exibirHora@m+1)& (0+255),w,b
  3899  000E5E  E105               	bnz	u3790
  3900  000E60  0E0A               	movlw	10
  3901  000E62  0100               	movlb	0	; () banked
  3902  000E64  5D7E               	subwf	exibirHora@m& (0+255),w,b
  3903  000E66  A0D8               	btfss	status,0,c
  3904  000E68  D023               	goto	l3841
  3905  000E6A                     u3790:
  3906                           
  3907                           ; BSR set to: 0
  3908  000E6A  0100               	movlb	0	; () banked
  3909  000E6C  BF81               	btfsc	(exibirHora@s+1)& (0+255),7,b
  3910  000E6E  D020               	goto	l3841
  3911  000E70  0100               	movlb	0	; () banked
  3912  000E72  5181               	movf	(exibirHora@s+1)& (0+255),w,b
  3913  000E74  E105               	bnz	u3800
  3914  000E76  0E0A               	movlw	10
  3915  000E78  0100               	movlb	0	; () banked
  3916  000E7A  5D80               	subwf	exibirHora@s& (0+255),w,b
  3917  000E7C  A0D8               	btfss	status,0,c
  3918  000E7E  D018               	goto	l3841
  3919  000E80                     u3800:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;lcd.c: 109: sprintf(string, "HORA: 0%i:%i:%i", h, m, s);
  3923  000E80  C091  F06B         	movff	exibirHora@string,sprintf@sp
  3924  000E84  C092  F06C         	movff	exibirHora@string+1,sprintf@sp+1
  3925  000E88  0EA1               	movlw	low STR_9
  3926  000E8A  0100               	movlb	0	; () banked
  3927  000E8C  6F6D               	movwf	sprintf@f& (0+255),b
  3928  000E8E  0E08               	movlw	high STR_9
  3929  000E90  0100               	movlb	0	; () banked
  3930  000E92  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  3931  000E94  C07C  F06F         	movff	exibirHora@h,?_sprintf+4
  3932  000E98  C07D  F070         	movff	exibirHora@h+1,?_sprintf+5
  3933  000E9C  C07E  F071         	movff	exibirHora@m,?_sprintf+6
  3934  000EA0  C07F  F072         	movff	exibirHora@m+1,?_sprintf+7
  3935  000EA4  C080  F073         	movff	exibirHora@s,?_sprintf+8
  3936  000EA8  C081  F074         	movff	exibirHora@s+1,?_sprintf+9
  3937  000EAC  ECC6  F00A         	call	_sprintf	;wreg free
  3938  000EB0                     l3841:
  3939                           
  3940                           ;lcd.c: 110: }
  3941                           ;lcd.c: 111: if(h < 10 && m >= 10 && s < 10){
  3942  000EB0  0100               	movlb	0	; () banked
  3943  000EB2  BF7D               	btfsc	(exibirHora@h+1)& (0+255),7,b
  3944  000EB4  D008               	goto	l3843
  3945  000EB6  0100               	movlb	0	; () banked
  3946  000EB8  517D               	movf	(exibirHora@h+1)& (0+255),w,b
  3947  000EBA  E133               	bnz	l3849
  3948  000EBC  0E0A               	movlw	10
  3949  000EBE  0100               	movlb	0	; () banked
  3950  000EC0  5D7C               	subwf	exibirHora@h& (0+255),w,b
  3951  000EC2  B0D8               	btfsc	status,0,c
  3952  000EC4  D02E               	goto	l3849
  3953  000EC6                     l3843:
  3954                           
  3955                           ; BSR set to: 0
  3956  000EC6  0100               	movlb	0	; () banked
  3957  000EC8  BF7F               	btfsc	(exibirHora@m+1)& (0+255),7,b
  3958  000ECA  D02B               	goto	l3849
  3959  000ECC  0100               	movlb	0	; () banked
  3960  000ECE  517F               	movf	(exibirHora@m+1)& (0+255),w,b
  3961  000ED0  E105               	bnz	u3820
  3962  000ED2  0E0A               	movlw	10
  3963  000ED4  0100               	movlb	0	; () banked
  3964  000ED6  5D7E               	subwf	exibirHora@m& (0+255),w,b
  3965  000ED8  A0D8               	btfss	status,0,c
  3966  000EDA  D023               	goto	l3849
  3967  000EDC                     u3820:
  3968                           
  3969                           ; BSR set to: 0
  3970  000EDC  0100               	movlb	0	; () banked
  3971  000EDE  BF81               	btfsc	(exibirHora@s+1)& (0+255),7,b
  3972  000EE0  D008               	goto	l3847
  3973  000EE2  0100               	movlb	0	; () banked
  3974  000EE4  5181               	movf	(exibirHora@s+1)& (0+255),w,b
  3975  000EE6  E11D               	bnz	l3849
  3976  000EE8  0E0A               	movlw	10
  3977  000EEA  0100               	movlb	0	; () banked
  3978  000EEC  5D80               	subwf	exibirHora@s& (0+255),w,b
  3979  000EEE  B0D8               	btfsc	status,0,c
  3980  000EF0  D018               	goto	l3849
  3981  000EF2                     l3847:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;lcd.c: 112: sprintf(string, "HORA: 0%i:%i:0%i", h, m, s);
  3985  000EF2  C091  F06B         	movff	exibirHora@string,sprintf@sp
  3986  000EF6  C092  F06C         	movff	exibirHora@string+1,sprintf@sp+1
  3987  000EFA  0E3F               	movlw	low STR_10
  3988  000EFC  0100               	movlb	0	; () banked
  3989  000EFE  6F6D               	movwf	sprintf@f& (0+255),b
  3990  000F00  0E08               	movlw	high STR_10
  3991  000F02  0100               	movlb	0	; () banked
  3992  000F04  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  3993  000F06  C07C  F06F         	movff	exibirHora@h,?_sprintf+4
  3994  000F0A  C07D  F070         	movff	exibirHora@h+1,?_sprintf+5
  3995  000F0E  C07E  F071         	movff	exibirHora@m,?_sprintf+6
  3996  000F12  C07F  F072         	movff	exibirHora@m+1,?_sprintf+7
  3997  000F16  C080  F073         	movff	exibirHora@s,?_sprintf+8
  3998  000F1A  C081  F074         	movff	exibirHora@s+1,?_sprintf+9
  3999  000F1E  ECC6  F00A         	call	_sprintf	;wreg free
  4000  000F22                     l3849:
  4001                           
  4002                           ;lcd.c: 113: }
  4003                           ;lcd.c: 114: if(h < 10 && m < 10 && s >= 10){
  4004  000F22  0100               	movlb	0	; () banked
  4005  000F24  BF7D               	btfsc	(exibirHora@h+1)& (0+255),7,b
  4006  000F26  D008               	goto	l3851
  4007  000F28  0100               	movlb	0	; () banked
  4008  000F2A  517D               	movf	(exibirHora@h+1)& (0+255),w,b
  4009  000F2C  E133               	bnz	l3857
  4010  000F2E  0E0A               	movlw	10
  4011  000F30  0100               	movlb	0	; () banked
  4012  000F32  5D7C               	subwf	exibirHora@h& (0+255),w,b
  4013  000F34  B0D8               	btfsc	status,0,c
  4014  000F36  D02E               	goto	l3857
  4015  000F38                     l3851:
  4016                           
  4017                           ; BSR set to: 0
  4018  000F38  0100               	movlb	0	; () banked
  4019  000F3A  BF7F               	btfsc	(exibirHora@m+1)& (0+255),7,b
  4020  000F3C  D008               	goto	l3853
  4021  000F3E  0100               	movlb	0	; () banked
  4022  000F40  517F               	movf	(exibirHora@m+1)& (0+255),w,b
  4023  000F42  E128               	bnz	l3857
  4024  000F44  0E0A               	movlw	10
  4025  000F46  0100               	movlb	0	; () banked
  4026  000F48  5D7E               	subwf	exibirHora@m& (0+255),w,b
  4027  000F4A  B0D8               	btfsc	status,0,c
  4028  000F4C  D023               	goto	l3857
  4029  000F4E                     l3853:
  4030                           
  4031                           ; BSR set to: 0
  4032  000F4E  0100               	movlb	0	; () banked
  4033  000F50  BF81               	btfsc	(exibirHora@s+1)& (0+255),7,b
  4034  000F52  D020               	goto	l3857
  4035  000F54  0100               	movlb	0	; () banked
  4036  000F56  5181               	movf	(exibirHora@s+1)& (0+255),w,b
  4037  000F58  E105               	bnz	u3860
  4038  000F5A  0E0A               	movlw	10
  4039  000F5C  0100               	movlb	0	; () banked
  4040  000F5E  5D80               	subwf	exibirHora@s& (0+255),w,b
  4041  000F60  A0D8               	btfss	status,0,c
  4042  000F62  D018               	goto	l3857
  4043  000F64                     u3860:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;lcd.c: 115: sprintf(string, "HORA: 0%i:0%i:%i", h, m, s);
  4047  000F64  C091  F06B         	movff	exibirHora@string,sprintf@sp
  4048  000F68  C092  F06C         	movff	exibirHora@string+1,sprintf@sp+1
  4049  000F6C  0E50               	movlw	low STR_11
  4050  000F6E  0100               	movlb	0	; () banked
  4051  000F70  6F6D               	movwf	sprintf@f& (0+255),b
  4052  000F72  0E08               	movlw	high STR_11
  4053  000F74  0100               	movlb	0	; () banked
  4054  000F76  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  4055  000F78  C07C  F06F         	movff	exibirHora@h,?_sprintf+4
  4056  000F7C  C07D  F070         	movff	exibirHora@h+1,?_sprintf+5
  4057  000F80  C07E  F071         	movff	exibirHora@m,?_sprintf+6
  4058  000F84  C07F  F072         	movff	exibirHora@m+1,?_sprintf+7
  4059  000F88  C080  F073         	movff	exibirHora@s,?_sprintf+8
  4060  000F8C  C081  F074         	movff	exibirHora@s+1,?_sprintf+9
  4061  000F90  ECC6  F00A         	call	_sprintf	;wreg free
  4062  000F94                     l3857:
  4063                           
  4064                           ;lcd.c: 116: }
  4065                           ;lcd.c: 117: if(h < 10 && m < 10 && s < 10){
  4066  000F94  0100               	movlb	0	; () banked
  4067  000F96  BF7D               	btfsc	(exibirHora@h+1)& (0+255),7,b
  4068  000F98  D008               	goto	l3859
  4069  000F9A  0100               	movlb	0	; () banked
  4070  000F9C  517D               	movf	(exibirHora@h+1)& (0+255),w,b
  4071  000F9E  E133               	bnz	l3865
  4072  000FA0  0E0A               	movlw	10
  4073  000FA2  0100               	movlb	0	; () banked
  4074  000FA4  5D7C               	subwf	exibirHora@h& (0+255),w,b
  4075  000FA6  B0D8               	btfsc	status,0,c
  4076  000FA8  D02E               	goto	l3865
  4077  000FAA                     l3859:
  4078                           
  4079                           ; BSR set to: 0
  4080  000FAA  0100               	movlb	0	; () banked
  4081  000FAC  BF7F               	btfsc	(exibirHora@m+1)& (0+255),7,b
  4082  000FAE  D008               	goto	l3861
  4083  000FB0  0100               	movlb	0	; () banked
  4084  000FB2  517F               	movf	(exibirHora@m+1)& (0+255),w,b
  4085  000FB4  E128               	bnz	l3865
  4086  000FB6  0E0A               	movlw	10
  4087  000FB8  0100               	movlb	0	; () banked
  4088  000FBA  5D7E               	subwf	exibirHora@m& (0+255),w,b
  4089  000FBC  B0D8               	btfsc	status,0,c
  4090  000FBE  D023               	goto	l3865
  4091  000FC0                     l3861:
  4092                           
  4093                           ; BSR set to: 0
  4094  000FC0  0100               	movlb	0	; () banked
  4095  000FC2  BF81               	btfsc	(exibirHora@s+1)& (0+255),7,b
  4096  000FC4  D008               	goto	l3863
  4097  000FC6  0100               	movlb	0	; () banked
  4098  000FC8  5181               	movf	(exibirHora@s+1)& (0+255),w,b
  4099  000FCA  E11D               	bnz	l3865
  4100  000FCC  0E0A               	movlw	10
  4101  000FCE  0100               	movlb	0	; () banked
  4102  000FD0  5D80               	subwf	exibirHora@s& (0+255),w,b
  4103  000FD2  B0D8               	btfsc	status,0,c
  4104  000FD4  D018               	goto	l3865
  4105  000FD6                     l3863:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;lcd.c: 118: sprintf(string, "HORA: 0%i:0%i:0%i", h, m, s);
  4109  000FD6  C091  F06B         	movff	exibirHora@string,sprintf@sp
  4110  000FDA  C092  F06C         	movff	exibirHora@string+1,sprintf@sp+1
  4111  000FDE  0E0B               	movlw	low STR_12
  4112  000FE0  0100               	movlb	0	; () banked
  4113  000FE2  6F6D               	movwf	sprintf@f& (0+255),b
  4114  000FE4  0E08               	movlw	high STR_12
  4115  000FE6  0100               	movlb	0	; () banked
  4116  000FE8  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  4117  000FEA  C07C  F06F         	movff	exibirHora@h,?_sprintf+4
  4118  000FEE  C07D  F070         	movff	exibirHora@h+1,?_sprintf+5
  4119  000FF2  C07E  F071         	movff	exibirHora@m,?_sprintf+6
  4120  000FF6  C07F  F072         	movff	exibirHora@m+1,?_sprintf+7
  4121  000FFA  C080  F073         	movff	exibirHora@s,?_sprintf+8
  4122  000FFE  C081  F074         	movff	exibirHora@s+1,?_sprintf+9
  4123  001002  ECC6  F00A         	call	_sprintf	;wreg free
  4124  001006                     l3865:
  4125                           
  4126                           ;lcd.c: 119: }
  4127                           ;lcd.c: 120: return string;
  4128  001006  C091  F07C         	movff	exibirHora@string,?_exibirHora
  4129  00100A  C092  F07D         	movff	exibirHora@string+1,?_exibirHora+1
  4130  00100E  0012               	return	
  4131  001010                     __end_of_exibirHora:
  4132                           	opt stack 0
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           intcon	equ	0xFF2
  4138                           postinc0	equ	0xFEE
  4139                           wreg	equ	0xFE8
  4140                           postdec1	equ	0xFE5
  4141                           fsr1l	equ	0xFE1
  4142                           indf2	equ	0xFDF
  4143                           fsr2h	equ	0xFDA
  4144                           fsr2l	equ	0xFD9
  4145                           status	equ	0xFD8
  4146                           
  4147 ;; *************** function _exibirData *****************
  4148 ;; Defined at:
  4149 ;;		line 78 in file "lcd.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  dia             2   28[BANK0 ] int 
  4152 ;;  mes             2   30[BANK0 ] int 
  4153 ;;  ano             2   32[BANK0 ] int 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  2   28[BANK0 ] PTR unsigned char 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4165 ;;      Params:         0       6       0       0       0       0       0       0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4168 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4169 ;;Total ram usage:        6 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    5
  4172 ;; This function calls:
  4173 ;;		_sprintf
  4174 ;; This function is called by:
  4175 ;;		_inicializaTela1
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text21
  4180  00170A                     __ptext21:
  4181                           	opt stack 0
  4182  00170A                     _exibirData:
  4183                           	opt stack 24
  4184                           
  4185                           ;lcd.c: 79: static char *string;
  4186                           ;lcd.c: 80: if(dia >= 10 && mes >= 10){
  4187                           
  4188                           ;incstack = 0
  4189  00170A  0100               	movlb	0	; () banked
  4190  00170C  BF7D               	btfsc	(exibirData@dia+1)& (0+255),7,b
  4191  00170E  D02B               	goto	l3779
  4192  001710  0100               	movlb	0	; () banked
  4193  001712  517D               	movf	(exibirData@dia+1)& (0+255),w,b
  4194  001714  E105               	bnz	u3580
  4195  001716  0E0A               	movlw	10
  4196  001718  0100               	movlb	0	; () banked
  4197  00171A  5D7C               	subwf	exibirData@dia& (0+255),w,b
  4198  00171C  A0D8               	btfss	status,0,c
  4199  00171E  D023               	goto	l3779
  4200  001720                     u3580:
  4201                           
  4202                           ; BSR set to: 0
  4203  001720  0100               	movlb	0	; () banked
  4204  001722  BF7F               	btfsc	(exibirData@mes+1)& (0+255),7,b
  4205  001724  D020               	goto	l3779
  4206  001726  0100               	movlb	0	; () banked
  4207  001728  517F               	movf	(exibirData@mes+1)& (0+255),w,b
  4208  00172A  E105               	bnz	u3590
  4209  00172C  0E0A               	movlw	10
  4210  00172E  0100               	movlb	0	; () banked
  4211  001730  5D7E               	subwf	exibirData@mes& (0+255),w,b
  4212  001732  A0D8               	btfss	status,0,c
  4213  001734  D018               	goto	l3779
  4214  001736                     u3590:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;lcd.c: 81: sprintf(string, "DATA: %i/%i/%i", dia, mes, ano);
  4218  001736  C093  F06B         	movff	exibirData@string,sprintf@sp
  4219  00173A  C094  F06C         	movff	exibirData@string+1,sprintf@sp+1
  4220  00173E  0EB1               	movlw	low STR_1
  4221  001740  0100               	movlb	0	; () banked
  4222  001742  6F6D               	movwf	sprintf@f& (0+255),b
  4223  001744  0E08               	movlw	high STR_1
  4224  001746  0100               	movlb	0	; () banked
  4225  001748  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  4226  00174A  C07C  F06F         	movff	exibirData@dia,?_sprintf+4
  4227  00174E  C07D  F070         	movff	exibirData@dia+1,?_sprintf+5
  4228  001752  C07E  F071         	movff	exibirData@mes,?_sprintf+6
  4229  001756  C07F  F072         	movff	exibirData@mes+1,?_sprintf+7
  4230  00175A  C080  F073         	movff	exibirData@ano,?_sprintf+8
  4231  00175E  C081  F074         	movff	exibirData@ano+1,?_sprintf+9
  4232  001762  ECC6  F00A         	call	_sprintf	;wreg free
  4233  001766                     l3779:
  4234                           
  4235                           ;lcd.c: 82: }
  4236                           ;lcd.c: 83: if(dia >= 10 && mes < 10){
  4237  001766  0100               	movlb	0	; () banked
  4238  001768  BF7D               	btfsc	(exibirData@dia+1)& (0+255),7,b
  4239  00176A  D02B               	goto	l3785
  4240  00176C  0100               	movlb	0	; () banked
  4241  00176E  517D               	movf	(exibirData@dia+1)& (0+255),w,b
  4242  001770  E105               	bnz	u3600
  4243  001772  0E0A               	movlw	10
  4244  001774  0100               	movlb	0	; () banked
  4245  001776  5D7C               	subwf	exibirData@dia& (0+255),w,b
  4246  001778  A0D8               	btfss	status,0,c
  4247  00177A  D023               	goto	l3785
  4248  00177C                     u3600:
  4249                           
  4250                           ; BSR set to: 0
  4251  00177C  0100               	movlb	0	; () banked
  4252  00177E  BF7F               	btfsc	(exibirData@mes+1)& (0+255),7,b
  4253  001780  D008               	goto	l3783
  4254  001782  0100               	movlb	0	; () banked
  4255  001784  517F               	movf	(exibirData@mes+1)& (0+255),w,b
  4256  001786  E11D               	bnz	l3785
  4257  001788  0E0A               	movlw	10
  4258  00178A  0100               	movlb	0	; () banked
  4259  00178C  5D7E               	subwf	exibirData@mes& (0+255),w,b
  4260  00178E  B0D8               	btfsc	status,0,c
  4261  001790  D018               	goto	l3785
  4262  001792                     l3783:
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;lcd.c: 84: sprintf(string, "DATA: %i/0%i/%i", dia, mes, ano);
  4266  001792  C093  F06B         	movff	exibirData@string,sprintf@sp
  4267  001796  C094  F06C         	movff	exibirData@string+1,sprintf@sp+1
  4268  00179A  0E71               	movlw	low STR_2
  4269  00179C  0100               	movlb	0	; () banked
  4270  00179E  6F6D               	movwf	sprintf@f& (0+255),b
  4271  0017A0  0E08               	movlw	high STR_2
  4272  0017A2  0100               	movlb	0	; () banked
  4273  0017A4  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  4274  0017A6  C07C  F06F         	movff	exibirData@dia,?_sprintf+4
  4275  0017AA  C07D  F070         	movff	exibirData@dia+1,?_sprintf+5
  4276  0017AE  C07E  F071         	movff	exibirData@mes,?_sprintf+6
  4277  0017B2  C07F  F072         	movff	exibirData@mes+1,?_sprintf+7
  4278  0017B6  C080  F073         	movff	exibirData@ano,?_sprintf+8
  4279  0017BA  C081  F074         	movff	exibirData@ano+1,?_sprintf+9
  4280  0017BE  ECC6  F00A         	call	_sprintf	;wreg free
  4281  0017C2                     l3785:
  4282                           
  4283                           ;lcd.c: 85: }
  4284                           ;lcd.c: 86: if(dia < 10 && mes >= 10){
  4285  0017C2  0100               	movlb	0	; () banked
  4286  0017C4  BF7D               	btfsc	(exibirData@dia+1)& (0+255),7,b
  4287  0017C6  D008               	goto	l3787
  4288  0017C8  0100               	movlb	0	; () banked
  4289  0017CA  517D               	movf	(exibirData@dia+1)& (0+255),w,b
  4290  0017CC  E128               	bnz	l3791
  4291  0017CE  0E0A               	movlw	10
  4292  0017D0  0100               	movlb	0	; () banked
  4293  0017D2  5D7C               	subwf	exibirData@dia& (0+255),w,b
  4294  0017D4  B0D8               	btfsc	status,0,c
  4295  0017D6  D023               	goto	l3791
  4296  0017D8                     l3787:
  4297                           
  4298                           ; BSR set to: 0
  4299  0017D8  0100               	movlb	0	; () banked
  4300  0017DA  BF7F               	btfsc	(exibirData@mes+1)& (0+255),7,b
  4301  0017DC  D020               	goto	l3791
  4302  0017DE  0100               	movlb	0	; () banked
  4303  0017E0  517F               	movf	(exibirData@mes+1)& (0+255),w,b
  4304  0017E2  E105               	bnz	u3630
  4305  0017E4  0E0A               	movlw	10
  4306  0017E6  0100               	movlb	0	; () banked
  4307  0017E8  5D7E               	subwf	exibirData@mes& (0+255),w,b
  4308  0017EA  A0D8               	btfss	status,0,c
  4309  0017EC  D018               	goto	l3791
  4310  0017EE                     u3630:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;lcd.c: 87: sprintf(string, "DATA: 0%i/%i/%i", dia, mes, ano);
  4314  0017EE  C093  F06B         	movff	exibirData@string,sprintf@sp
  4315  0017F2  C094  F06C         	movff	exibirData@string+1,sprintf@sp+1
  4316  0017F6  0E61               	movlw	low STR_3
  4317  0017F8  0100               	movlb	0	; () banked
  4318  0017FA  6F6D               	movwf	sprintf@f& (0+255),b
  4319  0017FC  0E08               	movlw	high STR_3
  4320  0017FE  0100               	movlb	0	; () banked
  4321  001800  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  4322  001802  C07C  F06F         	movff	exibirData@dia,?_sprintf+4
  4323  001806  C07D  F070         	movff	exibirData@dia+1,?_sprintf+5
  4324  00180A  C07E  F071         	movff	exibirData@mes,?_sprintf+6
  4325  00180E  C07F  F072         	movff	exibirData@mes+1,?_sprintf+7
  4326  001812  C080  F073         	movff	exibirData@ano,?_sprintf+8
  4327  001816  C081  F074         	movff	exibirData@ano+1,?_sprintf+9
  4328  00181A  ECC6  F00A         	call	_sprintf	;wreg free
  4329  00181E                     l3791:
  4330                           
  4331                           ;lcd.c: 88: }if(dia < 10 && mes < 10){
  4332  00181E  0100               	movlb	0	; () banked
  4333  001820  BF7D               	btfsc	(exibirData@dia+1)& (0+255),7,b
  4334  001822  D008               	goto	l3793
  4335  001824  0100               	movlb	0	; () banked
  4336  001826  517D               	movf	(exibirData@dia+1)& (0+255),w,b
  4337  001828  E128               	bnz	l3797
  4338  00182A  0E0A               	movlw	10
  4339  00182C  0100               	movlb	0	; () banked
  4340  00182E  5D7C               	subwf	exibirData@dia& (0+255),w,b
  4341  001830  B0D8               	btfsc	status,0,c
  4342  001832  D023               	goto	l3797
  4343  001834                     l3793:
  4344                           
  4345                           ; BSR set to: 0
  4346  001834  0100               	movlb	0	; () banked
  4347  001836  BF7F               	btfsc	(exibirData@mes+1)& (0+255),7,b
  4348  001838  D008               	goto	l3795
  4349  00183A  0100               	movlb	0	; () banked
  4350  00183C  517F               	movf	(exibirData@mes+1)& (0+255),w,b
  4351  00183E  E11D               	bnz	l3797
  4352  001840  0E0A               	movlw	10
  4353  001842  0100               	movlb	0	; () banked
  4354  001844  5D7E               	subwf	exibirData@mes& (0+255),w,b
  4355  001846  B0D8               	btfsc	status,0,c
  4356  001848  D018               	goto	l3797
  4357  00184A                     l3795:
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;lcd.c: 89: sprintf(string, "DATA: 0%i/0%i/%i", dia, mes, ano);
  4361  00184A  C093  F06B         	movff	exibirData@string,sprintf@sp
  4362  00184E  C094  F06C         	movff	exibirData@string+1,sprintf@sp+1
  4363  001852  0E1D               	movlw	low STR_4
  4364  001854  0100               	movlb	0	; () banked
  4365  001856  6F6D               	movwf	sprintf@f& (0+255),b
  4366  001858  0E08               	movlw	high STR_4
  4367  00185A  0100               	movlb	0	; () banked
  4368  00185C  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  4369  00185E  C07C  F06F         	movff	exibirData@dia,?_sprintf+4
  4370  001862  C07D  F070         	movff	exibirData@dia+1,?_sprintf+5
  4371  001866  C07E  F071         	movff	exibirData@mes,?_sprintf+6
  4372  00186A  C07F  F072         	movff	exibirData@mes+1,?_sprintf+7
  4373  00186E  C080  F073         	movff	exibirData@ano,?_sprintf+8
  4374  001872  C081  F074         	movff	exibirData@ano+1,?_sprintf+9
  4375  001876  ECC6  F00A         	call	_sprintf	;wreg free
  4376  00187A                     l3797:
  4377                           
  4378                           ;lcd.c: 90: }
  4379                           ;lcd.c: 91: return string;
  4380  00187A  C093  F07C         	movff	exibirData@string,?_exibirData
  4381  00187E  C094  F07D         	movff	exibirData@string+1,?_exibirData+1
  4382  001882  0012               	return	
  4383  001884                     __end_of_exibirData:
  4384                           	opt stack 0
  4385                           tblptru	equ	0xFF8
  4386                           tblptrh	equ	0xFF7
  4387                           tblptrl	equ	0xFF6
  4388                           tablat	equ	0xFF5
  4389                           intcon	equ	0xFF2
  4390                           postinc0	equ	0xFEE
  4391                           wreg	equ	0xFE8
  4392                           postdec1	equ	0xFE5
  4393                           fsr1l	equ	0xFE1
  4394                           indf2	equ	0xFDF
  4395                           fsr2h	equ	0xFDA
  4396                           fsr2l	equ	0xFD9
  4397                           status	equ	0xFD8
  4398                           
  4399 ;; *************** function _sprintf *****************
  4400 ;; Defined at:
  4401 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  sp              2   11[BANK0 ] PTR unsigned char 
  4404 ;;		 -> NULL(0), 
  4405 ;;  f               2   13[BANK0 ] PTR const unsigned char 
  4406 ;;		 -> STR_20(12), STR_19(11), STR_18(11), STR_17(10), 
  4407 ;;		 -> STR_16(11), STR_15(10), STR_14(10), STR_13(9), 
  4408 ;;		 -> STR_12(18), STR_11(17), STR_10(17), STR_9(16), 
  4409 ;;		 -> STR_8(17), STR_7(16), STR_6(16), STR_5(15), 
  4410 ;;		 -> STR_4(17), STR_3(16), STR_2(16), STR_1(15), 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  tmpval          4    0        struct .
  4413 ;;  cp              3    0        PTR const unsigned char 
  4414 ;;  val             2   25[BANK0 ] unsigned int 
  4415 ;;  ap              2   21[BANK0 ] PTR void [1]
  4416 ;;		 -> ?_sprintf(2), 
  4417 ;;  len             2    0        unsigned int 
  4418 ;;  c               1   27[BANK0 ] char 
  4419 ;;  prec            1   24[BANK0 ] char 
  4420 ;;  flag            1   23[BANK0 ] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  2   11[BANK0 ] int 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4430 ;;      Params:         0      10       0       0       0       0       0       0       0
  4431 ;;      Locals:         0       7       0       0       0       0       0       0       0
  4432 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4433 ;;      Totals:         1      17       0       0       0       0       0       0       0
  4434 ;;Total ram usage:       18 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    4
  4437 ;; This function calls:
  4438 ;;		___lwdiv
  4439 ;;		___lwmod
  4440 ;; This function is called by:
  4441 ;;		_exibirData
  4442 ;;		_exibirHora
  4443 ;;		_exibirAlarme
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text22
  4448  00158C                     __ptext22:
  4449                           	opt stack 0
  4450  00158C                     _sprintf:
  4451                           	opt stack 24
  4452                           
  4453                           ;doprnt.c: 494: va_list ap;
  4454                           ;doprnt.c: 499: signed char c;
  4455                           ;doprnt.c: 506: signed char prec;
  4456                           ;doprnt.c: 508: unsigned char flag;
  4457                           ;doprnt.c: 523: union {
  4458                           ;doprnt.c: 524: unsigned long vd;
  4459                           ;doprnt.c: 525: double integ;
  4460                           ;doprnt.c: 526: } tmpval;
  4461                           ;doprnt.c: 528: unsigned int val;
  4462                           ;doprnt.c: 529: unsigned len;
  4463                           ;doprnt.c: 530: const char * cp;
  4464                           ;doprnt.c: 533: *ap = __va_start();
  4465                           
  4466                           ;incstack = 0
  4467  00158C  0E6F               	movlw	low (?_sprintf+4)
  4468  00158E  0100               	movlb	0	; () banked
  4469  001590  6F75               	movwf	sprintf@ap& (0+255),b
  4470  001592  0E00               	movlw	high (?_sprintf+4)
  4471  001594  0100               	movlb	0	; () banked
  4472  001596  6F76               	movwf	(sprintf@ap+1)& (0+255),b
  4473                           
  4474                           ;doprnt.c: 536: while(c = *f++) {
  4475  001598  D0A3               	goto	l3697
  4476  00159A                     l3645:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;doprnt.c: 538: if(c != '%')
  4480  00159A  0E25               	movlw	37
  4481  00159C  0100               	movlb	0	; () banked
  4482  00159E  197B               	xorwf	sprintf@c& (0+255),w,b
  4483  0015A0  B4D8               	btfsc	status,2,c
  4484  0015A2  D00A               	goto	l3651
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;doprnt.c: 540: {
  4488                           ;doprnt.c: 541: ((*sp++ = (c)));
  4489  0015A4  C06B  FFD9         	movff	sprintf@sp,fsr2l
  4490  0015A8  C06C  FFDA         	movff	sprintf@sp+1,fsr2h
  4491  0015AC  C07B  FFDF         	movff	sprintf@c,indf2
  4492                           
  4493                           ; BSR set to: 0
  4494  0015B0  0100               	movlb	0	; () banked
  4495  0015B2  4B6B               	infsnz	sprintf@sp& (0+255),f,b
  4496  0015B4  2B6C               	incf	(sprintf@sp+1)& (0+255),f,b
  4497                           
  4498                           ;doprnt.c: 542: continue;
  4499  0015B6  D094               	goto	l3697
  4500  0015B8                     l3651:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;doprnt.c: 543: }
  4504                           ;doprnt.c: 548: flag = 0;
  4505  0015B8  0E00               	movlw	0
  4506  0015BA  0100               	movlb	0	; () banked
  4507  0015BC  6F77               	movwf	sprintf@flag& (0+255),b
  4508                           
  4509                           ; BSR set to: 0
  4510                           
  4511                           ; BSR set to: 0
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;doprnt.c: 822: }
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;doprnt.c: 813: continue;
  4518                           
  4519                           ;doprnt.c: 802: default:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;doprnt.c: 698: case 'i':
  4523                           ;doprnt.c: 699: break;
  4524                           
  4525                           ; BSR set to: 0
  4526                           
  4527                           ;doprnt.c: 697: case 'd':
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;doprnt.c: 638: goto alldone;
  4531                           
  4532                           ;doprnt.c: 637: case 0:
  4533                           
  4534                           ;doprnt.c: 635: switch(c = *f++) {
  4535  0015BE  C06D  FFF6         	movff	sprintf@f,tblptrl
  4536  0015C2  C06E  FFF7         	movff	sprintf@f+1,tblptrh
  4537  0015C6  0100               	movlb	0	; () banked
  4538  0015C8  4B6D               	infsnz	sprintf@f& (0+255),f,b
  4539  0015CA  2B6E               	incf	(sprintf@f+1)& (0+255),f,b
  4540  0015CC                     	if	0	;tblptru may be non-zero
  4541  0015CC                     	endif
  4542  0015CC                     	if	0	;tblptru may be non-zero
  4543  0015CC                     	endif
  4544  0015CC  0008               	tblrd		*
  4545  0015CE  CFF5 F07B          	movff	tablat,sprintf@c
  4546  0015D2  0100               	movlb	0	; () banked
  4547  0015D4  517B               	movf	sprintf@c& (0+255),w,b
  4548                           
  4549                           ; Switch size 1, requested type "space"
  4550                           ; Number of cases is 3, Range of values is 0 to 105
  4551                           ; switch strategies available:
  4552                           ; Name         Instructions Cycles
  4553                           ; simple_byte           10     6 (average)
  4554                           ;	Chosen strategy is simple_byte
  4555  0015D6  0A00               	xorlw	0	; case 0
  4556  0015D8  B4D8               	btfsc	status,2,c
  4557  0015DA  D090               	goto	l3699
  4558  0015DC  0A64               	xorlw	100	; case 100
  4559  0015DE  B4D8               	btfsc	status,2,c
  4560  0015E0  D003               	goto	l3657
  4561  0015E2  0A0D               	xorlw	13	; case 105
  4562  0015E4  A4D8               	btfss	status,2,c
  4563  0015E6  D07C               	goto	l3697
  4564  0015E8                     l3657:
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;doprnt.c: 1253: {
  4568                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4569  0015E8  C075  FFD9         	movff	sprintf@ap,fsr2l
  4570  0015EC  C076  FFDA         	movff	sprintf@ap+1,fsr2h
  4571  0015F0  CFDE F079          	movff	postinc2,sprintf@val
  4572  0015F4  CFDD F07A          	movff	postdec2,sprintf@val+1
  4573                           
  4574                           ; BSR set to: 0
  4575  0015F8  0E02               	movlw	2
  4576  0015FA  0100               	movlb	0	; () banked
  4577  0015FC  2775               	addwf	sprintf@ap& (0+255),f,b
  4578  0015FE  0E00               	movlw	0
  4579  001600  2376               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;doprnt.c: 1261: if((int)val < 0) {
  4583  001602  0100               	movlb	0	; () banked
  4584  001604  AF7A               	btfss	(sprintf@val+1)& (0+255),7,b
  4585  001606  D008               	goto	l3667
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;doprnt.c: 1262: flag |= 0x03;
  4589  001608  0E03               	movlw	3
  4590  00160A  0100               	movlb	0	; () banked
  4591  00160C  1377               	iorwf	sprintf@flag& (0+255),f,b
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;doprnt.c: 1263: val = -val;
  4595  00160E  0100               	movlb	0	; () banked
  4596  001610  6D79               	negf	sprintf@val& (0+255),b
  4597  001612  1F7A               	comf	(sprintf@val+1)& (0+255),f,b
  4598  001614  B0D8               	btfsc	status,0,c
  4599  001616  2B7A               	incf	(sprintf@val+1)& (0+255),f,b
  4600  001618                     l3667:
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;doprnt.c: 1264: }
  4604                           ;doprnt.c: 1266: }
  4605                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4606  001618  0E01               	movlw	1
  4607  00161A  0100               	movlb	0	; () banked
  4608  00161C  6F7B               	movwf	sprintf@c& (0+255),b
  4609  00161E                     l3669:
  4610                           
  4611                           ; BSR set to: 0
  4612  00161E  0E05               	movlw	5
  4613  001620  0100               	movlb	0	; () banked
  4614  001622  197B               	xorwf	sprintf@c& (0+255),w,b
  4615  001624  B4D8               	btfsc	status,2,c
  4616  001626  D016               	goto	l3681
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;doprnt.c: 1306: if(val < dpowers[c])
  4620                           
  4621                           ; BSR set to: 0
  4622                           
  4623                           ; BSR set to: 0
  4624  001628  0100               	movlb	0	; () banked
  4625  00162A  517B               	movf	sprintf@c& (0+255),w,b
  4626  00162C  0D02               	mullw	2
  4627  00162E  0E01               	movlw	low _dpowers
  4628  001630  24F3               	addwf	prodl,w,c
  4629  001632  6EF6               	movwf	tblptrl,c
  4630  001634  0E08               	movlw	high _dpowers
  4631  001636  20F4               	addwfc	prodh,w,c
  4632  001638  6EF7               	movwf	tblptrh,c
  4633  00163A                     	if	0	;There are less than 3 active tblptr bytes
  4634  00163A                     	endif
  4635  00163A  0009               	tblrd		*+
  4636  00163C  50F5               	movf	tablat,w,c
  4637  00163E  0100               	movlb	0	; () banked
  4638  001640  5D79               	subwf	sprintf@val& (0+255),w,b
  4639  001642  0009               	tblrd		*+
  4640  001644  50F5               	movf	tablat,w,c
  4641  001646  0100               	movlb	0	; () banked
  4642  001648  597A               	subwfb	(sprintf@val+1)& (0+255),w,b
  4643  00164A  A0D8               	btfss	status,0,c
  4644  00164C  D003               	goto	l3681
  4645                           
  4646                           ; BSR set to: 0
  4647                           
  4648                           ; BSR set to: 0
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;doprnt.c: 1307: break;
  4652  00164E  0100               	movlb	0	; () banked
  4653  001650  2B7B               	incf	sprintf@c& (0+255),f,b
  4654  001652  D7E5               	goto	l3669
  4655  001654                     l3681:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;doprnt.c: 1422: {
  4659                           ;doprnt.c: 1438: if(flag & 0x03)
  4660  001654  C077  F021         	movff	sprintf@flag,??_sprintf
  4661  001658  0E03               	movlw	3
  4662  00165A  1621               	andwf	??_sprintf,f,c
  4663  00165C  B4D8               	btfsc	status,2,c
  4664  00165E  D009               	goto	l3687
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4668  001660  C06B  FFD9         	movff	sprintf@sp,fsr2l
  4669  001664  C06C  FFDA         	movff	sprintf@sp+1,fsr2h
  4670  001668  0E2D               	movlw	45
  4671  00166A  6EDF               	movwf	indf2,c
  4672                           
  4673                           ; BSR set to: 0
  4674  00166C  0100               	movlb	0	; () banked
  4675  00166E  4B6B               	infsnz	sprintf@sp& (0+255),f,b
  4676  001670  2B6C               	incf	(sprintf@sp+1)& (0+255),f,b
  4677  001672                     l3687:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;doprnt.c: 1469: }
  4681                           ;doprnt.c: 1472: prec = c;
  4682  001672  C07B  F078         	movff	sprintf@c,sprintf@prec
  4683                           
  4684                           ;doprnt.c: 1474: while(prec--) {
  4685  001676  D02E               	goto	l3695
  4686  001678                     l3689:
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;doprnt.c: 1478: {
  4690                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4691  001678  0100               	movlb	0	; () banked
  4692  00167A  5178               	movf	sprintf@prec& (0+255),w,b
  4693  00167C  0D02               	mullw	2
  4694  00167E  0E01               	movlw	low _dpowers
  4695  001680  24F3               	addwf	prodl,w,c
  4696  001682  6EF6               	movwf	tblptrl,c
  4697  001684  0E08               	movlw	high _dpowers
  4698  001686  20F4               	addwfc	prodh,w,c
  4699  001688  6EF7               	movwf	tblptrh,c
  4700  00168A                     	if	0	;There are less than 3 active tblptr bytes
  4701  00168A                     	endif
  4702  00168A  0009               	tblrd		*+
  4703  00168C  CFF5 F062          	movff	tablat,___lwdiv@divisor
  4704  001690  000A               	tblrd		*-
  4705  001692  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  4706  001696  C079  F060         	movff	sprintf@val,___lwdiv@dividend
  4707  00169A  C07A  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  4708  00169E  EC37  F00F         	call	___lwdiv	;wreg free
  4709  0016A2  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  4710  0016A6  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  4711  0016AA  0E00               	movlw	0
  4712  0016AC  0100               	movlb	0	; () banked
  4713  0016AE  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  4714  0016B0  0E0A               	movlw	10
  4715  0016B2  6F69               	movwf	___lwmod@divisor& (0+255),b
  4716  0016B4  ECD9  F00F         	call	___lwmod	;wreg free
  4717  0016B8  0100               	movlb	0	; () banked
  4718  0016BA  5167               	movf	?___lwmod& (0+255),w,b
  4719  0016BC  0F30               	addlw	48
  4720  0016BE  0100               	movlb	0	; () banked
  4721  0016C0  6F7B               	movwf	sprintf@c& (0+255),b
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;doprnt.c: 1523: }
  4725                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4726  0016C2  C06B  FFD9         	movff	sprintf@sp,fsr2l
  4727  0016C6  C06C  FFDA         	movff	sprintf@sp+1,fsr2h
  4728  0016CA  C07B  FFDF         	movff	sprintf@c,indf2
  4729                           
  4730                           ; BSR set to: 0
  4731  0016CE  0100               	movlb	0	; () banked
  4732  0016D0  4B6B               	infsnz	sprintf@sp& (0+255),f,b
  4733  0016D2  2B6C               	incf	(sprintf@sp+1)& (0+255),f,b
  4734  0016D4                     l3695:
  4735                           
  4736                           ; BSR set to: 0
  4737  0016D4  0100               	movlb	0	; () banked
  4738  0016D6  0778               	decf	sprintf@prec& (0+255),f,b
  4739  0016D8  0100               	movlb	0	; () banked
  4740  0016DA  2978               	incf	sprintf@prec& (0+255),w,b
  4741  0016DC  A4D8               	btfss	status,2,c
  4742  0016DE  D7CC               	goto	l3689
  4743  0016E0                     l3697:
  4744                           
  4745                           ; BSR set to: 0
  4746  0016E0  C06D  FFF6         	movff	sprintf@f,tblptrl
  4747  0016E4  C06E  FFF7         	movff	sprintf@f+1,tblptrh
  4748  0016E8  0100               	movlb	0	; () banked
  4749  0016EA  4B6D               	infsnz	sprintf@f& (0+255),f,b
  4750  0016EC  2B6E               	incf	(sprintf@f+1)& (0+255),f,b
  4751  0016EE                     	if	0	;tblptru may be non-zero
  4752  0016EE                     	endif
  4753  0016EE                     	if	0	;tblptru may be non-zero
  4754  0016EE                     	endif
  4755  0016EE  0008               	tblrd		*
  4756  0016F0  CFF5 F07B          	movff	tablat,sprintf@c
  4757  0016F4  0100               	movlb	0	; () banked
  4758  0016F6  517B               	movf	sprintf@c& (0+255),w,b
  4759  0016F8  A4D8               	btfss	status,2,c
  4760  0016FA  D74F               	goto	l3645
  4761  0016FC                     l3699:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;doprnt.c: 1538: *sp = 0;
  4765  0016FC  C06B  FFD9         	movff	sprintf@sp,fsr2l
  4766  001700  C06C  FFDA         	movff	sprintf@sp+1,fsr2h
  4767  001704  0E00               	movlw	0
  4768  001706  6EDF               	movwf	indf2,c
  4769  001708  0012               	return	
  4770  00170A                     __end_of_sprintf:
  4771                           	opt stack 0
  4772                           tblptru	equ	0xFF8
  4773                           tblptrh	equ	0xFF7
  4774                           tblptrl	equ	0xFF6
  4775                           tablat	equ	0xFF5
  4776                           prodh	equ	0xFF4
  4777                           prodl	equ	0xFF3
  4778                           intcon	equ	0xFF2
  4779                           postinc0	equ	0xFEE
  4780                           wreg	equ	0xFE8
  4781                           postdec1	equ	0xFE5
  4782                           fsr1l	equ	0xFE1
  4783                           indf2	equ	0xFDF
  4784                           postinc2	equ	0xFDE
  4785                           postdec2	equ	0xFDD
  4786                           fsr2h	equ	0xFDA
  4787                           fsr2l	equ	0xFD9
  4788                           status	equ	0xFD8
  4789                           
  4790 ;; *************** function ___lwmod *****************
  4791 ;; Defined at:
  4792 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  dividend        2    7[BANK0 ] unsigned int 
  4795 ;;  divisor         2    9[BANK0 ] unsigned int 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  counter         1   31[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  2    7[BANK0 ] unsigned int 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4807 ;;      Params:         0       4       0       0       0       0       0       0       0
  4808 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4810 ;;      Totals:         1       4       0       0       0       0       0       0       0
  4811 ;;Total ram usage:        5 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    3
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_sprintf
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text23
  4822  001FB2                     __ptext23:
  4823                           	opt stack 0
  4824  001FB2                     ___lwmod:
  4825                           	opt stack 24
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;incstack = 0
  4829  001FB2  0100               	movlb	0	; () banked
  4830  001FB4  5169               	movf	___lwmod@divisor& (0+255),w,b
  4831  001FB6  0100               	movlb	0	; () banked
  4832  001FB8  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4833  001FBA  B4D8               	btfsc	status,2,c
  4834  001FBC  D023               	goto	l1136
  4835                           
  4836                           ; BSR set to: 0
  4837  001FBE  0E01               	movlw	1
  4838  001FC0  6E20               	movwf	___lwmod@counter,c
  4839  001FC2  D005               	goto	l3545
  4840  001FC4                     l3543:
  4841                           
  4842                           ; BSR set to: 0
  4843  001FC4  0100               	movlb	0	; () banked
  4844  001FC6  90D8               	bcf	status,0,c
  4845  001FC8  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  4846  001FCA  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4847  001FCC  2A20               	incf	___lwmod@counter,f,c
  4848  001FCE                     l3545:
  4849                           
  4850                           ; BSR set to: 0
  4851  001FCE  0100               	movlb	0	; () banked
  4852  001FD0  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4853  001FD2  D7F8               	goto	l3543
  4854  001FD4                     l3547:
  4855                           
  4856                           ; BSR set to: 0
  4857  001FD4  0100               	movlb	0	; () banked
  4858  001FD6  5169               	movf	___lwmod@divisor& (0+255),w,b
  4859  001FD8  0100               	movlb	0	; () banked
  4860  001FDA  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  4861  001FDC  0100               	movlb	0	; () banked
  4862  001FDE  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4863  001FE0  0100               	movlb	0	; () banked
  4864  001FE2  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4865  001FE4  A0D8               	btfss	status,0,c
  4866  001FE6  D008               	goto	l3551
  4867                           
  4868                           ; BSR set to: 0
  4869  001FE8  0100               	movlb	0	; () banked
  4870  001FEA  5169               	movf	___lwmod@divisor& (0+255),w,b
  4871  001FEC  0100               	movlb	0	; () banked
  4872  001FEE  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  4873  001FF0  0100               	movlb	0	; () banked
  4874  001FF2  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4875  001FF4  0100               	movlb	0	; () banked
  4876  001FF6  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4877  001FF8                     l3551:
  4878                           
  4879                           ; BSR set to: 0
  4880  001FF8  0100               	movlb	0	; () banked
  4881  001FFA  90D8               	bcf	status,0,c
  4882  001FFC  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4883  001FFE  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  4884                           
  4885                           ; BSR set to: 0
  4886  002000  2E20               	decfsz	___lwmod@counter,f,c
  4887  002002  D7E8               	goto	l3547
  4888  002004                     l1136:
  4889                           
  4890                           ; BSR set to: 0
  4891  002004  C067  F067         	movff	___lwmod@dividend,?___lwmod
  4892  002008  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  4893                           
  4894                           ; BSR set to: 0
  4895  00200C  0012               	return		;funcret
  4896  00200E                     __end_of___lwmod:
  4897                           	opt stack 0
  4898                           tblptru	equ	0xFF8
  4899                           tblptrh	equ	0xFF7
  4900                           tblptrl	equ	0xFF6
  4901                           tablat	equ	0xFF5
  4902                           prodh	equ	0xFF4
  4903                           prodl	equ	0xFF3
  4904                           intcon	equ	0xFF2
  4905                           postinc0	equ	0xFEE
  4906                           wreg	equ	0xFE8
  4907                           postdec1	equ	0xFE5
  4908                           fsr1l	equ	0xFE1
  4909                           indf2	equ	0xFDF
  4910                           postinc2	equ	0xFDE
  4911                           postdec2	equ	0xFDD
  4912                           fsr2h	equ	0xFDA
  4913                           fsr2l	equ	0xFD9
  4914                           status	equ	0xFD8
  4915                           
  4916 ;; *************** function ___lwdiv *****************
  4917 ;; Defined at:
  4918 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  dividend        2    0[BANK0 ] unsigned int 
  4921 ;;  divisor         2    2[BANK0 ] unsigned int 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  quotient        2    5[BANK0 ] unsigned int 
  4924 ;;  counter         1    4[BANK0 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  2    0[BANK0 ] unsigned int 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4934 ;;      Params:         0       4       0       0       0       0       0       0       0
  4935 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4937 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4938 ;;Total ram usage:        7 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    3
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_sprintf
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text24
  4949  001E6E                     __ptext24:
  4950                           	opt stack 0
  4951  001E6E                     ___lwdiv:
  4952                           	opt stack 24
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;incstack = 0
  4956  001E6E  0E00               	movlw	0
  4957  001E70  0100               	movlb	0	; () banked
  4958  001E72  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4959  001E74  0E00               	movlw	0
  4960  001E76  6F65               	movwf	___lwdiv@quotient& (0+255),b
  4961                           
  4962                           ; BSR set to: 0
  4963  001E78  0100               	movlb	0	; () banked
  4964  001E7A  5162               	movf	___lwdiv@divisor& (0+255),w,b
  4965  001E7C  0100               	movlb	0	; () banked
  4966  001E7E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4967  001E80  B4D8               	btfsc	status,2,c
  4968  001E82  D02C               	goto	l1126
  4969                           
  4970                           ; BSR set to: 0
  4971  001E84  0E01               	movlw	1
  4972  001E86  0100               	movlb	0	; () banked
  4973  001E88  6F64               	movwf	___lwdiv@counter& (0+255),b
  4974  001E8A  D006               	goto	l3525
  4975  001E8C                     l3523:
  4976                           
  4977                           ; BSR set to: 0
  4978  001E8C  0100               	movlb	0	; () banked
  4979  001E8E  90D8               	bcf	status,0,c
  4980  001E90  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  4981  001E92  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4982  001E94  0100               	movlb	0	; () banked
  4983  001E96  2B64               	incf	___lwdiv@counter& (0+255),f,b
  4984  001E98                     l3525:
  4985                           
  4986                           ; BSR set to: 0
  4987  001E98  0100               	movlb	0	; () banked
  4988  001E9A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4989  001E9C  D7F7               	goto	l3523
  4990  001E9E                     l3527:
  4991                           
  4992                           ; BSR set to: 0
  4993  001E9E  0100               	movlb	0	; () banked
  4994  001EA0  90D8               	bcf	status,0,c
  4995  001EA2  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  4996  001EA4  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4997                           
  4998                           ; BSR set to: 0
  4999  001EA6  0100               	movlb	0	; () banked
  5000  001EA8  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5001  001EAA  0100               	movlb	0	; () banked
  5002  001EAC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5003  001EAE  0100               	movlb	0	; () banked
  5004  001EB0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5005  001EB2  0100               	movlb	0	; () banked
  5006  001EB4  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5007  001EB6  A0D8               	btfss	status,0,c
  5008  001EB8  D00A               	goto	l3535
  5009                           
  5010                           ; BSR set to: 0
  5011  001EBA  0100               	movlb	0	; () banked
  5012  001EBC  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5013  001EBE  0100               	movlb	0	; () banked
  5014  001EC0  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  5015  001EC2  0100               	movlb	0	; () banked
  5016  001EC4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5017  001EC6  0100               	movlb	0	; () banked
  5018  001EC8  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5019                           
  5020                           ; BSR set to: 0
  5021  001ECA  0100               	movlb	0	; () banked
  5022  001ECC  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  5023  001ECE                     l3535:
  5024                           
  5025                           ; BSR set to: 0
  5026  001ECE  0100               	movlb	0	; () banked
  5027  001ED0  90D8               	bcf	status,0,c
  5028  001ED2  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5029  001ED4  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  5030                           
  5031                           ; BSR set to: 0
  5032  001ED6  0100               	movlb	0	; () banked
  5033  001ED8  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  5034  001EDA  D7E1               	goto	l3527
  5035  001EDC                     l1126:
  5036                           
  5037                           ; BSR set to: 0
  5038  001EDC  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  5039  001EE0  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5040                           
  5041                           ; BSR set to: 0
  5042  001EE4  0012               	return		;funcret
  5043  001EE6                     __end_of___lwdiv:
  5044                           	opt stack 0
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           prodh	equ	0xFF4
  5050                           prodl	equ	0xFF3
  5051                           intcon	equ	0xFF2
  5052                           postinc0	equ	0xFEE
  5053                           wreg	equ	0xFE8
  5054                           postdec1	equ	0xFE5
  5055                           fsr1l	equ	0xFE1
  5056                           indf2	equ	0xFDF
  5057                           postinc2	equ	0xFDE
  5058                           postdec2	equ	0xFDD
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function _controlaCursorR *****************
  5064 ;; Defined at:
  5065 ;;		line 47 in file "lcd.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5079 ;;      Params:         0       0       0       0       0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5081 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5082 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5083 ;;Total ram usage:        2 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    6
  5086 ;; This function calls:
  5087 ;;		_SetDDRamAddr
  5088 ;;		_WriteCmdXLCD
  5089 ;; This function is called by:
  5090 ;;		_inicializaTela1
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text25
  5095  001D6A                     __ptext25:
  5096                           	opt stack 0
  5097  001D6A                     _controlaCursorR:
  5098                           	opt stack 23
  5099                           
  5100                           ;lcd.c: 48: switch(posCursorR){
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;incstack = 0
  5104  001D6A  D020               	goto	l3767
  5105  001D6C                     l3749:
  5106                           
  5107                           ;lcd.c: 50: WriteCmdXLCD(0x0F);
  5108  001D6C  0E0F               	movlw	15
  5109  001D6E  EC29  F011         	call	_WriteCmdXLCD
  5110                           
  5111                           ;lcd.c: 51: break;
  5112  001D72  0012               	return	
  5113  001D74                     l3751:
  5114                           
  5115                           ;lcd.c: 53: SetDDRamAddr(0x07);
  5116  001D74  0E07               	movlw	7
  5117  001D76  ECAA  F00F         	call	_SetDDRamAddr
  5118                           
  5119                           ;lcd.c: 54: break;
  5120  001D7A  0012               	return	
  5121  001D7C                     l3753:
  5122                           
  5123                           ;lcd.c: 56: SetDDRamAddr(0x0A);
  5124  001D7C  0E0A               	movlw	10
  5125  001D7E  ECAA  F00F         	call	_SetDDRamAddr
  5126                           
  5127                           ;lcd.c: 57: break;
  5128  001D82  0012               	return	
  5129  001D84                     l3755:
  5130                           
  5131                           ;lcd.c: 59: SetDDRamAddr(0x0D);
  5132  001D84  0E0D               	movlw	13
  5133  001D86  ECAA  F00F         	call	_SetDDRamAddr
  5134                           
  5135                           ;lcd.c: 60: break;
  5136  001D8A  0012               	return	
  5137  001D8C                     l3757:
  5138                           
  5139                           ;lcd.c: 62: SetDDRamAddr(0x47);
  5140  001D8C  0E47               	movlw	71
  5141  001D8E  ECAA  F00F         	call	_SetDDRamAddr
  5142                           
  5143                           ;lcd.c: 63: break;
  5144  001D92  0012               	return	
  5145  001D94                     l3759:
  5146                           
  5147                           ;lcd.c: 65: SetDDRamAddr(0x4A);
  5148  001D94  0E4A               	movlw	74
  5149  001D96  ECAA  F00F         	call	_SetDDRamAddr
  5150                           
  5151                           ;lcd.c: 66: break;
  5152  001D9A  0012               	return	
  5153  001D9C                     l3761:
  5154                           
  5155                           ;lcd.c: 68: SetDDRamAddr(0x4F);
  5156  001D9C  0E4F               	movlw	79
  5157  001D9E  ECAA  F00F         	call	_SetDDRamAddr
  5158                           
  5159                           ;lcd.c: 69: break;
  5160  001DA2  0012               	return	
  5161  001DA4                     l3763:
  5162                           
  5163                           ;lcd.c: 71: WriteCmdXLCD(0x0C);
  5164  001DA4  0E0C               	movlw	12
  5165  001DA6  EC29  F011         	call	_WriteCmdXLCD
  5166                           
  5167                           ;lcd.c: 75: }
  5168                           
  5169                           ;lcd.c: 74: return;
  5170                           
  5171                           ;lcd.c: 73: default:
  5172                           
  5173                           ;lcd.c: 72: break;
  5174  001DAA  0012               	return	
  5175  001DAC                     l3767:
  5176  001DAC  C026  F063         	movff	_posCursorR,??_controlaCursorR
  5177  001DB0  C027  F064         	movff	_posCursorR+1,??_controlaCursorR+1
  5178                           
  5179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5180                           ; Switch size 1, requested type "space"
  5181                           ; Number of cases is 1, Range of values is 0 to 0
  5182                           ; switch strategies available:
  5183                           ; Name         Instructions Cycles
  5184                           ; simple_byte            4     3 (average)
  5185                           ;	Chosen strategy is simple_byte
  5186  001DB4  0100               	movlb	0	; () banked
  5187  001DB6  5164               	movf	(??_controlaCursorR+1)& (0+255),w,b
  5188  001DB8  0A00               	xorlw	0	; case 0
  5189  001DBA  A4D8               	btfss	status,2,c
  5190  001DBC  0012               	return	
  5191                           
  5192                           ; BSR set to: 0
  5193                           ; Switch size 1, requested type "space"
  5194                           ; Number of cases is 8, Range of values is 0 to 7
  5195                           ; switch strategies available:
  5196                           ; Name         Instructions Cycles
  5197                           ; simple_byte           25    13 (average)
  5198                           ;	Chosen strategy is simple_byte
  5199  001DBE  0100               	movlb	0	; () banked
  5200  001DC0  5163               	movf	??_controlaCursorR& (0+255),w,b
  5201  001DC2  0A00               	xorlw	0	; case 0
  5202  001DC4  B4D8               	btfsc	status,2,c
  5203  001DC6  D7D2               	goto	l3749
  5204  001DC8  0A01               	xorlw	1	; case 1
  5205  001DCA  B4D8               	btfsc	status,2,c
  5206  001DCC  D7D3               	goto	l3751
  5207  001DCE  0A03               	xorlw	3	; case 2
  5208  001DD0  B4D8               	btfsc	status,2,c
  5209  001DD2  D7D4               	goto	l3753
  5210  001DD4  0A01               	xorlw	1	; case 3
  5211  001DD6  B4D8               	btfsc	status,2,c
  5212  001DD8  D7D5               	goto	l3755
  5213  001DDA  0A07               	xorlw	7	; case 4
  5214  001DDC  B4D8               	btfsc	status,2,c
  5215  001DDE  D7D6               	goto	l3757
  5216  001DE0  0A01               	xorlw	1	; case 5
  5217  001DE2  B4D8               	btfsc	status,2,c
  5218  001DE4  D7D7               	goto	l3759
  5219  001DE6  0A03               	xorlw	3	; case 6
  5220  001DE8  B4D8               	btfsc	status,2,c
  5221  001DEA  D7D8               	goto	l3761
  5222  001DEC  0A01               	xorlw	1	; case 7
  5223  001DEE  A4D8               	btfss	status,2,c
  5224  001DF0  0012               	return	
  5225  001DF2  D7D8               	goto	l3763
  5226  001DF4                     __end_of_controlaCursorR:
  5227                           	opt stack 0
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           prodh	equ	0xFF4
  5233                           prodl	equ	0xFF3
  5234                           intcon	equ	0xFF2
  5235                           postinc0	equ	0xFEE
  5236                           wreg	equ	0xFE8
  5237                           postdec1	equ	0xFE5
  5238                           fsr1l	equ	0xFE1
  5239                           indf2	equ	0xFDF
  5240                           postinc2	equ	0xFDE
  5241                           postdec2	equ	0xFDD
  5242                           fsr2h	equ	0xFDA
  5243                           fsr2l	equ	0xFD9
  5244                           status	equ	0xFD8
  5245                           
  5246 ;; *************** function _ajustarT1 *****************
  5247 ;; Defined at:
  5248 ;;		line 256 in file "lcd.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;		None
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  2   26[None  ] int 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5262 ;;      Params:         0       0       0       0       0       0       0       0       0
  5263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5264 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5265 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5266 ;;Total ram usage:        2 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; Hardware stack levels required when called:    3
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_main
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text26
  5277  001A9E                     __ptext26:
  5278                           	opt stack 0
  5279  001A9E                     _ajustarT1:
  5280                           	opt stack 27
  5281                           
  5282                           ;lcd.c: 257: if(PORTDbits.RD2 == 1){
  5283                           
  5284                           ;incstack = 0
  5285  001A9E  A483               	btfss	3971,2,c	;volatile
  5286  001AA0  D037               	goto	l316
  5287                           
  5288                           ;lcd.c: 258: _delay((unsigned long)((180)*(80000000/4000.0)));
  5289  001AA2  0E13               	movlw	19
  5290  001AA4  6E21               	movwf	(??_ajustarT1+1)& (0+255),c
  5291  001AA6  0E44               	movlw	68
  5292  001AA8  6E20               	movwf	??_ajustarT1& (0+255),c
  5293  001AAA  0E44               	movlw	68
  5294  001AAC                     u4627:
  5295  001AAC  2EE8               	decfsz	wreg,f,c
  5296  001AAE  D7FE               	bra	u4627
  5297  001AB0  2E20               	decfsz	??_ajustarT1& (0+255),f,c
  5298  001AB2  D7FC               	bra	u4627
  5299  001AB4  2E21               	decfsz	(??_ajustarT1+1)& (0+255),f,c
  5300  001AB6  D7FA               	bra	u4627
  5301  001AB8  D000               	nop2	
  5302                           
  5303                           ;lcd.c: 259: if(posCursorR == 1){
  5304  001ABA  0426               	decf	_posCursorR,w,c
  5305  001ABC  1027               	iorwf	_posCursorR+1,w,c
  5306  001ABE  A4D8               	btfss	status,2,c
  5307  001AC0  D002               	goto	l3077
  5308                           
  5309                           ;lcd.c: 260: re.hora++;
  5310  001AC2  4A38               	infsnz	_re+4,f,c
  5311  001AC4  2A39               	incf	_re+5,f,c
  5312  001AC6                     l3077:
  5313                           
  5314                           ;lcd.c: 261: }
  5315                           ;lcd.c: 262: if(posCursorR == 2){
  5316  001AC6  0E02               	movlw	2
  5317  001AC8  1826               	xorwf	_posCursorR,w,c
  5318  001ACA  1027               	iorwf	_posCursorR+1,w,c
  5319  001ACC  A4D8               	btfss	status,2,c
  5320  001ACE  D002               	goto	l3081
  5321                           
  5322                           ;lcd.c: 263: re.minuto++;
  5323  001AD0  4A34               	infsnz	_re,f,c
  5324  001AD2  2A35               	incf	_re+1,f,c
  5325  001AD4                     l3081:
  5326                           
  5327                           ;lcd.c: 264: }
  5328                           ;lcd.c: 265: if(posCursorR == 3){
  5329  001AD4  0E03               	movlw	3
  5330  001AD6  1826               	xorwf	_posCursorR,w,c
  5331  001AD8  1027               	iorwf	_posCursorR+1,w,c
  5332  001ADA  A4D8               	btfss	status,2,c
  5333  001ADC  D002               	goto	l3085
  5334                           
  5335                           ;lcd.c: 266: re.segundo++;
  5336  001ADE  4A36               	infsnz	_re+2,f,c
  5337  001AE0  2A37               	incf	_re+3,f,c
  5338  001AE2                     l3085:
  5339                           
  5340                           ;lcd.c: 267: }
  5341                           ;lcd.c: 268: if(posCursorR == 4){
  5342  001AE2  0E04               	movlw	4
  5343  001AE4  1826               	xorwf	_posCursorR,w,c
  5344  001AE6  1027               	iorwf	_posCursorR+1,w,c
  5345  001AE8  A4D8               	btfss	status,2,c
  5346  001AEA  D002               	goto	l3089
  5347                           
  5348                           ;lcd.c: 269: ca.dia++;
  5349  001AEC  4A3A               	infsnz	_ca,f,c
  5350  001AEE  2A3B               	incf	_ca+1,f,c
  5351  001AF0                     l3089:
  5352                           
  5353                           ;lcd.c: 270: }
  5354                           ;lcd.c: 271: if(posCursorR == 5){
  5355  001AF0  0E05               	movlw	5
  5356  001AF2  1826               	xorwf	_posCursorR,w,c
  5357  001AF4  1027               	iorwf	_posCursorR+1,w,c
  5358  001AF6  A4D8               	btfss	status,2,c
  5359  001AF8  D002               	goto	l3093
  5360                           
  5361                           ;lcd.c: 272: ca.mes++;
  5362  001AFA  4A3C               	infsnz	_ca+2,f,c
  5363  001AFC  2A3D               	incf	_ca+3,f,c
  5364  001AFE                     l3093:
  5365                           
  5366                           ;lcd.c: 273: }
  5367                           ;lcd.c: 274: if(posCursorR == 6){
  5368  001AFE  0E06               	movlw	6
  5369  001B00  1826               	xorwf	_posCursorR,w,c
  5370  001B02  1027               	iorwf	_posCursorR+1,w,c
  5371  001B04  A4D8               	btfss	status,2,c
  5372  001B06  D002               	goto	l323
  5373                           
  5374                           ;lcd.c: 275: ca.ano++;
  5375  001B08  4A3E               	infsnz	_ca+4,f,c
  5376  001B0A  2A3F               	incf	_ca+5,f,c
  5377  001B0C                     l323:
  5378  001B0C  B483               	btfsc	3971,2,c	;volatile
  5379  001B0E  D7FE               	goto	l323
  5380  001B10                     l316:
  5381                           
  5382                           ;lcd.c: 278: }
  5383                           ;lcd.c: 280: if(PORTDbits.RD3 == 1){
  5384  001B10  A683               	btfss	3971,3,c	;volatile
  5385  001B12  0012               	return	
  5386                           
  5387                           ;lcd.c: 281: _delay((unsigned long)((180)*(80000000/4000.0)));
  5388  001B14  0E13               	movlw	19
  5389  001B16  6E21               	movwf	(??_ajustarT1+1)& (0+255),c
  5390  001B18  0E44               	movlw	68
  5391  001B1A  6E20               	movwf	??_ajustarT1& (0+255),c
  5392  001B1C  0E44               	movlw	68
  5393  001B1E                     u4637:
  5394  001B1E  2EE8               	decfsz	wreg,f,c
  5395  001B20  D7FE               	bra	u4637
  5396  001B22  2E20               	decfsz	??_ajustarT1& (0+255),f,c
  5397  001B24  D7FC               	bra	u4637
  5398  001B26  2E21               	decfsz	(??_ajustarT1+1)& (0+255),f,c
  5399  001B28  D7FA               	bra	u4637
  5400  001B2A  D000               	nop2	
  5401                           
  5402                           ;lcd.c: 282: if(posCursorR == 1){
  5403  001B2C  0426               	decf	_posCursorR,w,c
  5404  001B2E  1027               	iorwf	_posCursorR+1,w,c
  5405  001B30  A4D8               	btfss	status,2,c
  5406  001B32  D003               	goto	l3103
  5407                           
  5408                           ;lcd.c: 283: re.hora--;
  5409  001B34  0638               	decf	_re+4,f,c
  5410  001B36  A0D8               	btfss	status,0,c
  5411  001B38  0639               	decf	_re+5,f,c
  5412  001B3A                     l3103:
  5413                           
  5414                           ;lcd.c: 284: }
  5415                           ;lcd.c: 285: if(posCursorR == 2){
  5416  001B3A  0E02               	movlw	2
  5417  001B3C  1826               	xorwf	_posCursorR,w,c
  5418  001B3E  1027               	iorwf	_posCursorR+1,w,c
  5419  001B40  A4D8               	btfss	status,2,c
  5420  001B42  D003               	goto	l3107
  5421                           
  5422                           ;lcd.c: 286: re.minuto--;
  5423  001B44  0634               	decf	_re,f,c
  5424  001B46  A0D8               	btfss	status,0,c
  5425  001B48  0635               	decf	_re+1,f,c
  5426  001B4A                     l3107:
  5427                           
  5428                           ;lcd.c: 287: }
  5429                           ;lcd.c: 288: if(posCursorR == 3){
  5430  001B4A  0E03               	movlw	3
  5431  001B4C  1826               	xorwf	_posCursorR,w,c
  5432  001B4E  1027               	iorwf	_posCursorR+1,w,c
  5433  001B50  A4D8               	btfss	status,2,c
  5434  001B52  D003               	goto	l3111
  5435                           
  5436                           ;lcd.c: 289: re.segundo--;
  5437  001B54  0636               	decf	_re+2,f,c
  5438  001B56  A0D8               	btfss	status,0,c
  5439  001B58  0637               	decf	_re+3,f,c
  5440  001B5A                     l3111:
  5441                           
  5442                           ;lcd.c: 290: }
  5443                           ;lcd.c: 291: if(posCursorR == 4){
  5444  001B5A  0E04               	movlw	4
  5445  001B5C  1826               	xorwf	_posCursorR,w,c
  5446  001B5E  1027               	iorwf	_posCursorR+1,w,c
  5447  001B60  A4D8               	btfss	status,2,c
  5448  001B62  D003               	goto	l3115
  5449                           
  5450                           ;lcd.c: 292: ca.dia--;
  5451  001B64  063A               	decf	_ca,f,c
  5452  001B66  A0D8               	btfss	status,0,c
  5453  001B68  063B               	decf	_ca+1,f,c
  5454  001B6A                     l3115:
  5455                           
  5456                           ;lcd.c: 293: }
  5457                           ;lcd.c: 294: if(posCursorR == 5){
  5458  001B6A  0E05               	movlw	5
  5459  001B6C  1826               	xorwf	_posCursorR,w,c
  5460  001B6E  1027               	iorwf	_posCursorR+1,w,c
  5461  001B70  A4D8               	btfss	status,2,c
  5462  001B72  D003               	goto	l3119
  5463                           
  5464                           ;lcd.c: 295: ca.mes--;
  5465  001B74  063C               	decf	_ca+2,f,c
  5466  001B76  A0D8               	btfss	status,0,c
  5467  001B78  063D               	decf	_ca+3,f,c
  5468  001B7A                     l3119:
  5469                           
  5470                           ;lcd.c: 296: }
  5471                           ;lcd.c: 297: if(posCursorR == 6){
  5472  001B7A  0E06               	movlw	6
  5473  001B7C  1826               	xorwf	_posCursorR,w,c
  5474  001B7E  1027               	iorwf	_posCursorR+1,w,c
  5475  001B80  A4D8               	btfss	status,2,c
  5476  001B82  D003               	goto	l333
  5477                           
  5478                           ;lcd.c: 298: ca.ano--;
  5479  001B84  063E               	decf	_ca+4,f,c
  5480  001B86  A0D8               	btfss	status,0,c
  5481  001B88  063F               	decf	_ca+5,f,c
  5482  001B8A                     l333:
  5483  001B8A  A683               	btfss	3971,3,c	;volatile
  5484  001B8C  0012               	return	
  5485  001B8E  D7FD               	goto	l333
  5486  001B90                     __end_of_ajustarT1:
  5487                           	opt stack 0
  5488                           tblptru	equ	0xFF8
  5489                           tblptrh	equ	0xFF7
  5490                           tblptrl	equ	0xFF6
  5491                           tablat	equ	0xFF5
  5492                           prodh	equ	0xFF4
  5493                           prodl	equ	0xFF3
  5494                           intcon	equ	0xFF2
  5495                           postinc0	equ	0xFEE
  5496                           wreg	equ	0xFE8
  5497                           postdec1	equ	0xFE5
  5498                           fsr1l	equ	0xFE1
  5499                           indf2	equ	0xFDF
  5500                           postinc2	equ	0xFDE
  5501                           postdec2	equ	0xFDD
  5502                           fsr2h	equ	0xFDA
  5503                           fsr2l	equ	0xFD9
  5504                           status	equ	0xFD8
  5505                           
  5506 ;; *************** function _ajustarAlarme *****************
  5507 ;; Defined at:
  5508 ;;		line 201 in file "lcd.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5524 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5525 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5526 ;;Total ram usage:        2 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    4
  5529 ;; This function calls:
  5530 ;;		_tratar_alarme
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text27
  5537  001B90                     __ptext27:
  5538                           	opt stack 0
  5539  001B90                     _ajustarAlarme:
  5540                           	opt stack 26
  5541                           
  5542                           ;lcd.c: 202: if(PORTDbits.RD2 == 1){
  5543                           
  5544                           ;incstack = 0
  5545  001B90  A483               	btfss	3971,2,c	;volatile
  5546  001B92  D023               	goto	l287
  5547                           
  5548                           ;lcd.c: 203: _delay((unsigned long)((180)*(80000000/4000.0)));
  5549  001B94  0E13               	movlw	19
  5550  001B96  0100               	movlb	0	; () banked
  5551  001B98  6F63               	movwf	(??_ajustarAlarme+1)& (0+255),b
  5552  001B9A  0E44               	movlw	68
  5553  001B9C  0100               	movlb	0	; () banked
  5554  001B9E  6F62               	movwf	??_ajustarAlarme& (0+255),b
  5555  001BA0  0E44               	movlw	68
  5556  001BA2                     u4647:
  5557  001BA2  2EE8               	decfsz	wreg,f,c
  5558  001BA4  D7FE               	bra	u4647
  5559  001BA6  2F62               	decfsz	??_ajustarAlarme& (0+255),f,b
  5560  001BA8  D7FC               	bra	u4647
  5561  001BAA  2F63               	decfsz	(??_ajustarAlarme+1)& (0+255),f,b
  5562  001BAC  D7FA               	bra	u4647
  5563  001BAE  F000               	nop	
  5564                           
  5565                           ;lcd.c: 204: if(posCursor == 0){
  5566  001BB0  5028               	movf	_posCursor,w,c
  5567  001BB2  1029               	iorwf	_posCursor+1,w,c
  5568  001BB4  A4D8               	btfss	status,2,c
  5569  001BB6  D002               	goto	l4101
  5570                           
  5571                           ;lcd.c: 205: alarme.hora++;
  5572  001BB8  4A32               	infsnz	_alarme+4,f,c
  5573  001BBA  2A33               	incf	_alarme+5,f,c
  5574  001BBC                     l4101:
  5575                           
  5576                           ;lcd.c: 206: }
  5577                           ;lcd.c: 207: if(posCursor == 1){
  5578  001BBC  0428               	decf	_posCursor,w,c
  5579  001BBE  1029               	iorwf	_posCursor+1,w,c
  5580  001BC0  A4D8               	btfss	status,2,c
  5581  001BC2  D002               	goto	l4105
  5582                           
  5583                           ;lcd.c: 208: alarme.minuto++;
  5584  001BC4  4A2E               	infsnz	_alarme,f,c
  5585  001BC6  2A2F               	incf	_alarme+1,f,c
  5586  001BC8                     l4105:
  5587                           
  5588                           ;lcd.c: 209: }
  5589                           ;lcd.c: 210: if(posCursor == 2){
  5590  001BC8  0E02               	movlw	2
  5591  001BCA  1828               	xorwf	_posCursor,w,c
  5592  001BCC  1029               	iorwf	_posCursor+1,w,c
  5593  001BCE  A4D8               	btfss	status,2,c
  5594  001BD0  D002               	goto	l291
  5595                           
  5596                           ;lcd.c: 211: alarme.segundo++;
  5597  001BD2  4A30               	infsnz	_alarme+2,f,c
  5598  001BD4  2A31               	incf	_alarme+3,f,c
  5599  001BD6                     l291:
  5600  001BD6  B483               	btfsc	3971,2,c	;volatile
  5601  001BD8  D7FE               	goto	l291
  5602  001BDA                     l287:
  5603                           
  5604                           ;lcd.c: 214: }
  5605                           ;lcd.c: 216: if(PORTDbits.RD3 == 1){
  5606  001BDA  A683               	btfss	3971,3,c	;volatile
  5607  001BDC  D026               	goto	l4123
  5608                           
  5609                           ;lcd.c: 217: _delay((unsigned long)((180)*(80000000/4000.0)));
  5610  001BDE  0E13               	movlw	19
  5611  001BE0  0100               	movlb	0	; () banked
  5612  001BE2  6F63               	movwf	(??_ajustarAlarme+1)& (0+255),b
  5613  001BE4  0E44               	movlw	68
  5614  001BE6  0100               	movlb	0	; () banked
  5615  001BE8  6F62               	movwf	??_ajustarAlarme& (0+255),b
  5616  001BEA  0E44               	movlw	68
  5617  001BEC                     u4657:
  5618  001BEC  2EE8               	decfsz	wreg,f,c
  5619  001BEE  D7FE               	bra	u4657
  5620  001BF0  2F62               	decfsz	??_ajustarAlarme& (0+255),f,b
  5621  001BF2  D7FC               	bra	u4657
  5622  001BF4  2F63               	decfsz	(??_ajustarAlarme+1)& (0+255),f,b
  5623  001BF6  D7FA               	bra	u4657
  5624  001BF8  F000               	nop	
  5625                           
  5626                           ;lcd.c: 218: if(posCursor == 0){
  5627  001BFA  5028               	movf	_posCursor,w,c
  5628  001BFC  1029               	iorwf	_posCursor+1,w,c
  5629  001BFE  A4D8               	btfss	status,2,c
  5630  001C00  D003               	goto	l4115
  5631                           
  5632                           ;lcd.c: 219: alarme.hora--;
  5633  001C02  0632               	decf	_alarme+4,f,c
  5634  001C04  A0D8               	btfss	status,0,c
  5635  001C06  0633               	decf	_alarme+5,f,c
  5636  001C08                     l4115:
  5637                           
  5638                           ;lcd.c: 220: }
  5639                           ;lcd.c: 221: if(posCursor == 1){
  5640  001C08  0428               	decf	_posCursor,w,c
  5641  001C0A  1029               	iorwf	_posCursor+1,w,c
  5642  001C0C  A4D8               	btfss	status,2,c
  5643  001C0E  D003               	goto	l4119
  5644                           
  5645                           ;lcd.c: 222: alarme.minuto--;
  5646  001C10  062E               	decf	_alarme,f,c
  5647  001C12  A0D8               	btfss	status,0,c
  5648  001C14  062F               	decf	_alarme+1,f,c
  5649  001C16                     l4119:
  5650                           
  5651                           ;lcd.c: 223: }
  5652                           ;lcd.c: 224: if(posCursor == 2){
  5653  001C16  0E02               	movlw	2
  5654  001C18  1828               	xorwf	_posCursor,w,c
  5655  001C1A  1029               	iorwf	_posCursor+1,w,c
  5656  001C1C  A4D8               	btfss	status,2,c
  5657  001C1E  D003               	goto	l298
  5658                           
  5659                           ;lcd.c: 225: alarme.segundo--;
  5660  001C20  0630               	decf	_alarme+2,f,c
  5661  001C22  A0D8               	btfss	status,0,c
  5662  001C24  0631               	decf	_alarme+3,f,c
  5663  001C26                     l298:
  5664  001C26  B683               	btfsc	3971,3,c	;volatile
  5665  001C28  D7FE               	goto	l298
  5666  001C2A                     l4123:
  5667                           
  5668                           ;lcd.c: 228: }
  5669                           ;lcd.c: 229: tratar_alarme(&alarme);
  5670  001C2A  0E2E               	movlw	low _alarme
  5671  001C2C  6E20               	movwf	tratar_alarme@c,c
  5672  001C2E  0E00               	movlw	high _alarme
  5673  001C30  6E21               	movwf	tratar_alarme@c+1,c
  5674  001C32  ECCF  F00C         	call	_tratar_alarme	;wreg free
  5675  001C36  0012               	return		;funcret
  5676  001C38                     __end_of_ajustarAlarme:
  5677                           	opt stack 0
  5678                           tblptru	equ	0xFF8
  5679                           tblptrh	equ	0xFF7
  5680                           tblptrl	equ	0xFF6
  5681                           tablat	equ	0xFF5
  5682                           prodh	equ	0xFF4
  5683                           prodl	equ	0xFF3
  5684                           intcon	equ	0xFF2
  5685                           postinc0	equ	0xFEE
  5686                           wreg	equ	0xFE8
  5687                           postdec1	equ	0xFE5
  5688                           fsr1l	equ	0xFE1
  5689                           indf2	equ	0xFDF
  5690                           postinc2	equ	0xFDE
  5691                           postdec2	equ	0xFDD
  5692                           fsr2h	equ	0xFDA
  5693                           fsr2l	equ	0xFD9
  5694                           status	equ	0xFD8
  5695                           
  5696 ;; *************** function _tratar_alarme *****************
  5697 ;; Defined at:
  5698 ;;		line 76 in file "relogio.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  c               2   31[COMRAM] PTR struct .
  5701 ;;		 -> alarme(6), 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      void 
  5706 ;; Registers used:
  5707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5713 ;;      Params:         2       0       0       0       0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5715 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5716 ;;      Totals:         2       2       0       0       0       0       0       0       0
  5717 ;;Total ram usage:        4 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    3
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_ajustarAlarme
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text28
  5728  00199E                     __ptext28:
  5729                           	opt stack 0
  5730  00199E                     _tratar_alarme:
  5731                           	opt stack 26
  5732                           
  5733                           ;relogio.c: 77: if(c->hora > 23) c->hora = 0;
  5734                           
  5735                           ;incstack = 0
  5736  00199E  EE20 F004          	lfsr	2,4
  5737  0019A2  5020               	movf	tratar_alarme@c,w,c
  5738  0019A4  26D9               	addwf	fsr2l,f,c
  5739  0019A6  5021               	movf	tratar_alarme@c+1,w,c
  5740  0019A8  22DA               	addwfc	fsr2h,f,c
  5741  0019AA  0E01               	movlw	1
  5742  0019AC  BEDB               	btfsc	plusw2,7,c
  5743  0019AE  D011               	goto	l400
  5744  0019B0  0E01               	movlw	1
  5745  0019B2  50DB               	movf	plusw2,w,c
  5746  0019B4  E104               	bnz	u4280
  5747  0019B6  0E18               	movlw	24
  5748  0019B8  5CDE               	subwf	postinc2,w,c
  5749  0019BA  A0D8               	btfss	status,0,c
  5750  0019BC  D00A               	goto	l400
  5751  0019BE                     u4280:
  5752  0019BE  EE20 F004          	lfsr	2,4
  5753  0019C2  5020               	movf	tratar_alarme@c,w,c
  5754  0019C4  26D9               	addwf	fsr2l,f,c
  5755  0019C6  5021               	movf	tratar_alarme@c+1,w,c
  5756  0019C8  22DA               	addwfc	fsr2h,f,c
  5757  0019CA  0E00               	movlw	0
  5758  0019CC  6EDE               	movwf	postinc2,c
  5759  0019CE  0E00               	movlw	0
  5760  0019D0  6EDD               	movwf	postdec2,c
  5761  0019D2                     l400:
  5762                           
  5763                           ;relogio.c: 79: if(c->minuto > 59) c->minuto = 0;
  5764  0019D2  C020  FFD9         	movff	tratar_alarme@c,fsr2l
  5765  0019D6  C021  FFDA         	movff	tratar_alarme@c+1,fsr2h
  5766  0019DA  0E01               	movlw	1
  5767  0019DC  BEDB               	btfsc	plusw2,7,c
  5768  0019DE  D00F               	goto	l4057
  5769  0019E0  0E01               	movlw	1
  5770  0019E2  50DB               	movf	plusw2,w,c
  5771  0019E4  E104               	bnz	u4290
  5772  0019E6  0E3C               	movlw	60
  5773  0019E8  5CDE               	subwf	postinc2,w,c
  5774  0019EA  A0D8               	btfss	status,0,c
  5775  0019EC  D008               	goto	l4057
  5776  0019EE                     u4290:
  5777  0019EE  C020  FFD9         	movff	tratar_alarme@c,fsr2l
  5778  0019F2  C021  FFDA         	movff	tratar_alarme@c+1,fsr2h
  5779  0019F6  0E00               	movlw	0
  5780  0019F8  6EDE               	movwf	postinc2,c
  5781  0019FA  0E00               	movlw	0
  5782  0019FC  6EDD               	movwf	postdec2,c
  5783  0019FE                     l4057:
  5784                           
  5785                           ;relogio.c: 81: if(c->segundo > 59) c->segundo = 0;
  5786  0019FE  EE20 F002          	lfsr	2,2
  5787  001A02  5020               	movf	tratar_alarme@c,w,c
  5788  001A04  26D9               	addwf	fsr2l,f,c
  5789  001A06  5021               	movf	tratar_alarme@c+1,w,c
  5790  001A08  22DA               	addwfc	fsr2h,f,c
  5791  001A0A  0E01               	movlw	1
  5792  001A0C  BEDB               	btfsc	plusw2,7,c
  5793  001A0E  D011               	goto	l402
  5794  001A10  0E01               	movlw	1
  5795  001A12  50DB               	movf	plusw2,w,c
  5796  001A14  E104               	bnz	u4300
  5797  001A16  0E3C               	movlw	60
  5798  001A18  5CDE               	subwf	postinc2,w,c
  5799  001A1A  A0D8               	btfss	status,0,c
  5800  001A1C  D00A               	goto	l402
  5801  001A1E                     u4300:
  5802  001A1E  EE20 F002          	lfsr	2,2
  5803  001A22  5020               	movf	tratar_alarme@c,w,c
  5804  001A24  26D9               	addwf	fsr2l,f,c
  5805  001A26  5021               	movf	tratar_alarme@c+1,w,c
  5806  001A28  22DA               	addwfc	fsr2h,f,c
  5807  001A2A  0E00               	movlw	0
  5808  001A2C  6EDE               	movwf	postinc2,c
  5809  001A2E  0E00               	movlw	0
  5810  001A30  6EDD               	movwf	postdec2,c
  5811  001A32                     l402:
  5812                           
  5813                           ;relogio.c: 83: if(c->hora < 0) c->hora = 23;
  5814  001A32  EE20 F004          	lfsr	2,4
  5815  001A36  5020               	movf	tratar_alarme@c,w,c
  5816  001A38  26D9               	addwf	fsr2l,f,c
  5817  001A3A  5021               	movf	tratar_alarme@c+1,w,c
  5818  001A3C  22DA               	addwfc	fsr2h,f,c
  5819  001A3E  0E01               	movlw	1
  5820  001A40  AEDB               	btfss	plusw2,7,c
  5821  001A42  D00A               	goto	l403
  5822  001A44  EE20 F004          	lfsr	2,4
  5823  001A48  5020               	movf	tratar_alarme@c,w,c
  5824  001A4A  26D9               	addwf	fsr2l,f,c
  5825  001A4C  5021               	movf	tratar_alarme@c+1,w,c
  5826  001A4E  22DA               	addwfc	fsr2h,f,c
  5827  001A50  0E17               	movlw	23
  5828  001A52  6EDE               	movwf	postinc2,c
  5829  001A54  0E00               	movlw	0
  5830  001A56  6EDD               	movwf	postdec2,c
  5831  001A58                     l403:
  5832                           
  5833                           ;relogio.c: 85: if(c->minuto < 0) c->minuto = 59;
  5834  001A58  C020  FFD9         	movff	tratar_alarme@c,fsr2l
  5835  001A5C  C021  FFDA         	movff	tratar_alarme@c+1,fsr2h
  5836  001A60  0E01               	movlw	1
  5837  001A62  AEDB               	btfss	plusw2,7,c
  5838  001A64  D008               	goto	l4065
  5839  001A66  C020  FFD9         	movff	tratar_alarme@c,fsr2l
  5840  001A6A  C021  FFDA         	movff	tratar_alarme@c+1,fsr2h
  5841  001A6E  0E3B               	movlw	59
  5842  001A70  6EDE               	movwf	postinc2,c
  5843  001A72  0E00               	movlw	0
  5844  001A74  6EDD               	movwf	postdec2,c
  5845  001A76                     l4065:
  5846                           
  5847                           ;relogio.c: 87: if(c->segundo < 0) c->segundo = 59;
  5848  001A76  EE20 F002          	lfsr	2,2
  5849  001A7A  5020               	movf	tratar_alarme@c,w,c
  5850  001A7C  26D9               	addwf	fsr2l,f,c
  5851  001A7E  5021               	movf	tratar_alarme@c+1,w,c
  5852  001A80  22DA               	addwfc	fsr2h,f,c
  5853  001A82  0E01               	movlw	1
  5854  001A84  AEDB               	btfss	plusw2,7,c
  5855  001A86  0012               	return	
  5856  001A88  EE20 F002          	lfsr	2,2
  5857  001A8C  5020               	movf	tratar_alarme@c,w,c
  5858  001A8E  26D9               	addwf	fsr2l,f,c
  5859  001A90  5021               	movf	tratar_alarme@c+1,w,c
  5860  001A92  22DA               	addwfc	fsr2h,f,c
  5861  001A94  0E3B               	movlw	59
  5862  001A96  6EDE               	movwf	postinc2,c
  5863  001A98  0E00               	movlw	0
  5864  001A9A  6EDD               	movwf	postdec2,c
  5865  001A9C  0012               	return	
  5866  001A9E                     __end_of_tratar_alarme:
  5867                           	opt stack 0
  5868                           tblptru	equ	0xFF8
  5869                           tblptrh	equ	0xFF7
  5870                           tblptrl	equ	0xFF6
  5871                           tablat	equ	0xFF5
  5872                           prodh	equ	0xFF4
  5873                           prodl	equ	0xFF3
  5874                           intcon	equ	0xFF2
  5875                           postinc0	equ	0xFEE
  5876                           wreg	equ	0xFE8
  5877                           postdec1	equ	0xFE5
  5878                           fsr1l	equ	0xFE1
  5879                           indf2	equ	0xFDF
  5880                           postinc2	equ	0xFDE
  5881                           postdec2	equ	0xFDD
  5882                           plusw2	equ	0xFDB
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function _LCD_Clear *****************
  5888 ;; Defined at:
  5889 ;;		line 25 in file "lcd.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5906 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5907 ;;Total ram usage:        0 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    6
  5910 ;; This function calls:
  5911 ;;		_BusyXLCD
  5912 ;;		_WriteCmdXLCD
  5913 ;; This function is called by:
  5914 ;;		_main
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text29
  5919  00247C                     __ptext29:
  5920                           	opt stack 0
  5921  00247C                     _LCD_Clear:
  5922                           	opt stack 24
  5923  00247C                     l4089:
  5924  00247C  EC65  F011         	call	_BusyXLCD	;wreg free
  5925  002480  0900               	iorlw	0
  5926  002482  A4D8               	btfss	status,2,c
  5927  002484  D7FB               	goto	l4089
  5928                           
  5929                           ;lcd.c: 27: WriteCmdXLCD(0x01);
  5930  002486  0E01               	movlw	1
  5931  002488  EC29  F011         	call	_WriteCmdXLCD
  5932  00248C  0012               	return		;funcret
  5933  00248E                     __end_of_LCD_Clear:
  5934                           	opt stack 0
  5935                           tblptru	equ	0xFF8
  5936                           tblptrh	equ	0xFF7
  5937                           tblptrl	equ	0xFF6
  5938                           tablat	equ	0xFF5
  5939                           prodh	equ	0xFF4
  5940                           prodl	equ	0xFF3
  5941                           intcon	equ	0xFF2
  5942                           postinc0	equ	0xFEE
  5943                           wreg	equ	0xFE8
  5944                           postdec1	equ	0xFE5
  5945                           fsr1l	equ	0xFE1
  5946                           indf2	equ	0xFDF
  5947                           postinc2	equ	0xFDE
  5948                           postdec2	equ	0xFDD
  5949                           plusw2	equ	0xFDB
  5950                           fsr2h	equ	0xFDA
  5951                           fsr2l	equ	0xFD9
  5952                           status	equ	0xFD8
  5953                           
  5954 ;; *************** function _InitXLCD *****************
  5955 ;; Defined at:
  5956 ;;		line 18 in file "lcd.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;		None
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;		None
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  2   12[None  ] int 
  5963 ;; Registers used:
  5964 ;;		wreg, status,2, status,0, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5970 ;;      Params:         0       0       0       0       0       0       0       0       0
  5971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5974 ;;Total ram usage:        0 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    7
  5977 ;; This function calls:
  5978 ;;		_BusyXLCD
  5979 ;;		_OpenXLCD
  5980 ;; This function is called by:
  5981 ;;		_main
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text30
  5986  00248E                     __ptext30:
  5987                           	opt stack 0
  5988  00248E                     _InitXLCD:
  5989                           	opt stack 23
  5990                           
  5991                           ;lcd.c: 19: OpenXLCD(0b00101100 & 0b00111000);
  5992                           
  5993                           ;incstack = 0
  5994  00248E  0E28               	movlw	40
  5995  002490  EC1C  F00E         	call	_OpenXLCD
  5996  002494                     l4071:
  5997  002494  EC65  F011         	call	_BusyXLCD	;wreg free
  5998  002498  0900               	iorlw	0
  5999  00249A  B4D8               	btfsc	status,2,c
  6000  00249C  0012               	return	
  6001  00249E  D7FA               	goto	l4071
  6002  0024A0                     __end_of_InitXLCD:
  6003                           	opt stack 0
  6004                           tblptru	equ	0xFF8
  6005                           tblptrh	equ	0xFF7
  6006                           tblptrl	equ	0xFF6
  6007                           tablat	equ	0xFF5
  6008                           prodh	equ	0xFF4
  6009                           prodl	equ	0xFF3
  6010                           intcon	equ	0xFF2
  6011                           postinc0	equ	0xFEE
  6012                           wreg	equ	0xFE8
  6013                           postdec1	equ	0xFE5
  6014                           fsr1l	equ	0xFE1
  6015                           indf2	equ	0xFDF
  6016                           postinc2	equ	0xFDE
  6017                           postdec2	equ	0xFDD
  6018                           plusw2	equ	0xFDB
  6019                           fsr2h	equ	0xFDA
  6020                           fsr2l	equ	0xFD9
  6021                           status	equ	0xFD8
  6022                           
  6023 ;; *************** function _OpenXLCD *****************
  6024 ;; Defined at:
  6025 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  lcdtype         1    wreg     unsigned char 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;  lcdtype         1    3[BANK0 ] unsigned char 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  1    wreg      void 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0, cstack
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6039 ;;      Params:         0       0       0       0       0       0       0       0       0
  6040 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6042 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6043 ;;Total ram usage:        1 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    6
  6046 ;; This function calls:
  6047 ;;		_BusyXLCD
  6048 ;;		_Delay10KTCYx
  6049 ;;		_DelayPORXLCD
  6050 ;;		_SetDDRamAddr
  6051 ;;		_WriteCmdXLCD
  6052 ;; This function is called by:
  6053 ;;		_InitXLCD
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text31
  6058  001C38                     __ptext31:
  6059                           	opt stack 0
  6060  001C38                     _OpenXLCD:
  6061                           	opt stack 23
  6062                           
  6063                           ;incstack = 0
  6064                           ;OpenXLCD@lcdtype stored from wreg
  6065  001C38  0100               	movlb	0	; () banked
  6066  001C3A  6F63               	movwf	OpenXLCD@lcdtype& (0+255),b
  6067  001C3C  0EF0               	movlw	240
  6068  001C3E  1681               	andwf	3969,f,c	;volatile
  6069  001C40  0EF0               	movlw	240
  6070  001C42  1693               	andwf	3987,f,c	;volatile
  6071  001C44  9C93               	bcf	3987,6,c	;volatile
  6072  001C46  9A93               	bcf	3987,5,c	;volatile
  6073  001C48  9893               	bcf	3987,4,c	;volatile
  6074  001C4A  9C8A               	bcf	3978,6,c	;volatile
  6075  001C4C  9A8A               	bcf	3978,5,c	;volatile
  6076  001C4E  988A               	bcf	3978,4,c	;volatile
  6077  001C50  EC6B  F012         	call	_DelayPORXLCD	;wreg free
  6078  001C54  0E30               	movlw	48
  6079  001C56  EC29  F011         	call	_WriteCmdXLCD
  6080  001C5A  0E05               	movlw	5
  6081  001C5C  EC33  F012         	call	_Delay10KTCYx
  6082  001C60  0E30               	movlw	48
  6083  001C62  EC29  F011         	call	_WriteCmdXLCD
  6084  001C66  0E01               	movlw	1
  6085  001C68  EC33  F012         	call	_Delay10KTCYx
  6086  001C6C  0E32               	movlw	50
  6087  001C6E  EC29  F011         	call	_WriteCmdXLCD
  6088  001C72                     l4003:
  6089  001C72  EC65  F011         	call	_BusyXLCD	;wreg free
  6090  001C76  0900               	iorlw	0
  6091  001C78  A4D8               	btfss	status,2,c
  6092  001C7A  D7FB               	goto	l4003
  6093  001C7C                     l4005:
  6094  001C7C  EC65  F011         	call	_BusyXLCD	;wreg free
  6095  001C80  0900               	iorlw	0
  6096  001C82  A4D8               	btfss	status,2,c
  6097  001C84  D7FB               	goto	l4005
  6098  001C86  0100               	movlb	0	; () banked
  6099  001C88  5163               	movf	OpenXLCD@lcdtype& (0+255),w,b
  6100  001C8A  EC29  F011         	call	_WriteCmdXLCD
  6101  001C8E                     l4009:
  6102  001C8E  EC65  F011         	call	_BusyXLCD	;wreg free
  6103  001C92  0900               	iorlw	0
  6104  001C94  A4D8               	btfss	status,2,c
  6105  001C96  D7FB               	goto	l4009
  6106  001C98  0E08               	movlw	8
  6107  001C9A  EC29  F011         	call	_WriteCmdXLCD
  6108  001C9E                     l4013:
  6109  001C9E  EC65  F011         	call	_BusyXLCD	;wreg free
  6110  001CA2  0900               	iorlw	0
  6111  001CA4  A4D8               	btfss	status,2,c
  6112  001CA6  D7FB               	goto	l4013
  6113  001CA8  0E0F               	movlw	15
  6114  001CAA  EC29  F011         	call	_WriteCmdXLCD
  6115  001CAE                     l4017:
  6116  001CAE  EC65  F011         	call	_BusyXLCD	;wreg free
  6117  001CB2  0900               	iorlw	0
  6118  001CB4  A4D8               	btfss	status,2,c
  6119  001CB6  D7FB               	goto	l4017
  6120  001CB8  0E01               	movlw	1
  6121  001CBA  EC29  F011         	call	_WriteCmdXLCD
  6122  001CBE                     l4021:
  6123  001CBE  EC65  F011         	call	_BusyXLCD	;wreg free
  6124  001CC2  0900               	iorlw	0
  6125  001CC4  A4D8               	btfss	status,2,c
  6126  001CC6  D7FB               	goto	l4021
  6127  001CC8  0E04               	movlw	4
  6128  001CCA  EC29  F011         	call	_WriteCmdXLCD
  6129  001CCE                     l4025:
  6130  001CCE  EC65  F011         	call	_BusyXLCD	;wreg free
  6131  001CD2  0900               	iorlw	0
  6132  001CD4  A4D8               	btfss	status,2,c
  6133  001CD6  D7FB               	goto	l4025
  6134  001CD8  0E80               	movlw	128
  6135  001CDA  ECAA  F00F         	call	_SetDDRamAddr
  6136  001CDE  0012               	return	
  6137  001CE0                     __end_of_OpenXLCD:
  6138                           	opt stack 0
  6139                           tblptru	equ	0xFF8
  6140                           tblptrh	equ	0xFF7
  6141                           tblptrl	equ	0xFF6
  6142                           tablat	equ	0xFF5
  6143                           prodh	equ	0xFF4
  6144                           prodl	equ	0xFF3
  6145                           intcon	equ	0xFF2
  6146                           postinc0	equ	0xFEE
  6147                           wreg	equ	0xFE8
  6148                           postdec1	equ	0xFE5
  6149                           fsr1l	equ	0xFE1
  6150                           indf2	equ	0xFDF
  6151                           postinc2	equ	0xFDE
  6152                           postdec2	equ	0xFDD
  6153                           plusw2	equ	0xFDB
  6154                           fsr2h	equ	0xFDA
  6155                           fsr2l	equ	0xFD9
  6156                           status	equ	0xFD8
  6157                           
  6158 ;; *************** function _WriteCmdXLCD *****************
  6159 ;; Defined at:
  6160 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  cmd             1    wreg     unsigned char 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  cmd             1   32[COMRAM] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0
  6175 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6177 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6178 ;;Total ram usage:        1 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    5
  6181 ;; This function calls:
  6182 ;;		_DelayFor18TCY
  6183 ;; This function is called by:
  6184 ;;		_LCD_Clear
  6185 ;;		_controlaCursorR
  6186 ;;		_inicializaTela1
  6187 ;;		_inicializaTela2
  6188 ;;		_despertarAlarme
  6189 ;;		_OpenXLCD
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text32
  6194  002252                     __ptext32:
  6195                           	opt stack 0
  6196  002252                     _WriteCmdXLCD:
  6197                           	opt stack 23
  6198                           
  6199                           ;incstack = 0
  6200                           ;WriteCmdXLCD@cmd stored from wreg
  6201  002252  6E21               	movwf	WriteCmdXLCD@cmd,c
  6202  002254  0EF0               	movlw	240
  6203  002256  1693               	andwf	3987,f,c	;volatile
  6204  002258  0EF0               	movlw	240
  6205  00225A  1681               	andwf	3969,f,c	;volatile
  6206  00225C  3821               	swapf	WriteCmdXLCD@cmd,w,c
  6207  00225E  0B0F               	andlw	15
  6208  002260  0B0F               	andlw	15
  6209  002262  1281               	iorwf	3969,f,c	;volatile
  6210  002264  9C8A               	bcf	3978,6,c	;volatile
  6211  002266  9A8A               	bcf	3978,5,c	;volatile
  6212  002268  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6213  00226C  888A               	bsf	3978,4,c	;volatile
  6214  00226E  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6215  002272  988A               	bcf	3978,4,c	;volatile
  6216  002274  0EF0               	movlw	240
  6217  002276  1681               	andwf	3969,f,c	;volatile
  6218  002278  5021               	movf	WriteCmdXLCD@cmd,w,c
  6219  00227A  0B0F               	andlw	15
  6220  00227C  1281               	iorwf	3969,f,c	;volatile
  6221  00227E  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6222  002282  888A               	bsf	3978,4,c	;volatile
  6223  002284  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6224  002288  988A               	bcf	3978,4,c	;volatile
  6225  00228A  0E0F               	movlw	15
  6226  00228C  1293               	iorwf	3987,f,c	;volatile
  6227  00228E  0012               	return	
  6228  002290                     __end_of_WriteCmdXLCD:
  6229                           	opt stack 0
  6230                           tblptru	equ	0xFF8
  6231                           tblptrh	equ	0xFF7
  6232                           tblptrl	equ	0xFF6
  6233                           tablat	equ	0xFF5
  6234                           prodh	equ	0xFF4
  6235                           prodl	equ	0xFF3
  6236                           intcon	equ	0xFF2
  6237                           postinc0	equ	0xFEE
  6238                           wreg	equ	0xFE8
  6239                           postdec1	equ	0xFE5
  6240                           fsr1l	equ	0xFE1
  6241                           indf2	equ	0xFDF
  6242                           postinc2	equ	0xFDE
  6243                           postdec2	equ	0xFDD
  6244                           plusw2	equ	0xFDB
  6245                           fsr2h	equ	0xFDA
  6246                           fsr2l	equ	0xFD9
  6247                           status	equ	0xFD8
  6248                           
  6249 ;; *************** function _SetDDRamAddr *****************
  6250 ;; Defined at:
  6251 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  DDaddr          1    wreg     unsigned char 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  DDaddr          1   32[COMRAM] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6265 ;;      Params:         0       0       0       0       0       0       0       0       0
  6266 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6267 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6268 ;;      Totals:         1       3       0       0       0       0       0       0       0
  6269 ;;Total ram usage:        4 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    5
  6272 ;; This function calls:
  6273 ;;		_DelayFor18TCY
  6274 ;; This function is called by:
  6275 ;;		_controlaCursor
  6276 ;;		_controlaCursorR
  6277 ;;		_inicializaTela1
  6278 ;;		_inicializaTela2
  6279 ;;		_despertarAlarme
  6280 ;;		_OpenXLCD
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text33
  6285  001F54                     __ptext33:
  6286                           	opt stack 0
  6287  001F54                     _SetDDRamAddr:
  6288                           	opt stack 23
  6289                           
  6290                           ;incstack = 0
  6291                           ;SetDDRamAddr@DDaddr stored from wreg
  6292  001F54  6E21               	movwf	SetDDRamAddr@DDaddr,c
  6293  001F56  0EF0               	movlw	240
  6294  001F58  1693               	andwf	3987,f,c	;volatile
  6295  001F5A  0EF0               	movlw	240
  6296  001F5C  1681               	andwf	3969,f,c	;volatile
  6297  001F5E  5021               	movf	SetDDRamAddr@DDaddr,w,c
  6298  001F60  0100               	movlb	0	; () banked
  6299  001F62  6F60               	movwf	??_SetDDRamAddr& (0+255),b
  6300  001F64  6B61               	clrf	(??_SetDDRamAddr+1)& (0+255),b
  6301  001F66  0100               	movlb	0	; () banked
  6302  001F68  8F60               	bsf	??_SetDDRamAddr& (0+255),7,b
  6303  001F6A  0E04               	movlw	4
  6304  001F6C  0100               	movlb	0	; () banked
  6305  001F6E  6F62               	movwf	(??_SetDDRamAddr+2)& (0+255),b
  6306  001F70                     u3495:
  6307  001F70  0100               	movlb	0	; () banked
  6308  001F72  3561               	rlcf	(??_SetDDRamAddr+1)& (0+255),w,b
  6309  001F74  3361               	rrcf	(??_SetDDRamAddr+1)& (0+255),f,b
  6310  001F76  3360               	rrcf	??_SetDDRamAddr& (0+255),f,b
  6311  001F78  0100               	movlb	0	; () banked
  6312  001F7A  2F62               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,b
  6313  001F7C  D7F9               	goto	u3495
  6314  001F7E  0100               	movlb	0	; () banked
  6315  001F80  5160               	movf	??_SetDDRamAddr& (0+255),w,b
  6316  001F82  0B0F               	andlw	15
  6317  001F84  1281               	iorwf	3969,f,c	;volatile
  6318                           
  6319                           ; BSR set to: 0
  6320  001F86  9C8A               	bcf	3978,6,c	;volatile
  6321                           
  6322                           ; BSR set to: 0
  6323  001F88  9A8A               	bcf	3978,5,c	;volatile
  6324                           
  6325                           ; BSR set to: 0
  6326  001F8A  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6327  001F8E  888A               	bsf	3978,4,c	;volatile
  6328  001F90  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6329  001F94  988A               	bcf	3978,4,c	;volatile
  6330  001F96  0EF0               	movlw	240
  6331  001F98  1681               	andwf	3969,f,c	;volatile
  6332  001F9A  5021               	movf	SetDDRamAddr@DDaddr,w,c
  6333  001F9C  0B0F               	andlw	15
  6334  001F9E  1281               	iorwf	3969,f,c	;volatile
  6335  001FA0  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6336  001FA4  888A               	bsf	3978,4,c	;volatile
  6337  001FA6  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6338  001FAA  988A               	bcf	3978,4,c	;volatile
  6339  001FAC  0E0F               	movlw	15
  6340  001FAE  1293               	iorwf	3987,f,c	;volatile
  6341  001FB0  0012               	return	
  6342  001FB2                     __end_of_SetDDRamAddr:
  6343                           	opt stack 0
  6344                           tblptru	equ	0xFF8
  6345                           tblptrh	equ	0xFF7
  6346                           tblptrl	equ	0xFF6
  6347                           tablat	equ	0xFF5
  6348                           prodh	equ	0xFF4
  6349                           prodl	equ	0xFF3
  6350                           intcon	equ	0xFF2
  6351                           postinc0	equ	0xFEE
  6352                           wreg	equ	0xFE8
  6353                           postdec1	equ	0xFE5
  6354                           fsr1l	equ	0xFE1
  6355                           indf2	equ	0xFDF
  6356                           postinc2	equ	0xFDE
  6357                           postdec2	equ	0xFDD
  6358                           plusw2	equ	0xFDB
  6359                           fsr2h	equ	0xFDA
  6360                           fsr2l	equ	0xFD9
  6361                           status	equ	0xFD8
  6362                           
  6363 ;; *************** function _DelayPORXLCD *****************
  6364 ;; Defined at:
  6365 ;;		line 8 in file "lcd.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;		None
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		wreg, cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6379 ;;      Params:         0       0       0       0       0       0       0       0       0
  6380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6383 ;;Total ram usage:        0 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:    4
  6386 ;; This function calls:
  6387 ;;		_Delay1KTCYx
  6388 ;; This function is called by:
  6389 ;;		_OpenXLCD
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text34
  6394  0024D6                     __ptext34:
  6395                           	opt stack 0
  6396  0024D6                     _DelayPORXLCD:
  6397                           	opt stack 24
  6398                           
  6399                           ;lcd.c: 9: Delay1KTCYx(180);
  6400                           
  6401                           ;incstack = 0
  6402  0024D6  0EB4               	movlw	180
  6403  0024D8  EC50  F012         	call	_Delay1KTCYx
  6404  0024DC  0012               	return	
  6405  0024DE                     __end_of_DelayPORXLCD:
  6406                           	opt stack 0
  6407                           tblptru	equ	0xFF8
  6408                           tblptrh	equ	0xFF7
  6409                           tblptrl	equ	0xFF6
  6410                           tablat	equ	0xFF5
  6411                           prodh	equ	0xFF4
  6412                           prodl	equ	0xFF3
  6413                           intcon	equ	0xFF2
  6414                           postinc0	equ	0xFEE
  6415                           wreg	equ	0xFE8
  6416                           postdec1	equ	0xFE5
  6417                           fsr1l	equ	0xFE1
  6418                           indf2	equ	0xFDF
  6419                           postinc2	equ	0xFDE
  6420                           postdec2	equ	0xFDD
  6421                           plusw2	equ	0xFDB
  6422                           fsr2h	equ	0xFDA
  6423                           fsr2l	equ	0xFD9
  6424                           status	equ	0xFD8
  6425                           
  6426 ;; *************** function _Delay1KTCYx *****************
  6427 ;; Defined at:
  6428 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  unit            1    wreg     unsigned char 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  unit            1   31[COMRAM] unsigned char 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      void 
  6435 ;; Registers used:
  6436 ;;		wreg
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6442 ;;      Params:         0       0       0       0       0       0       0       0       0
  6443 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6445 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6446 ;;Total ram usage:        1 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; Hardware stack levels required when called:    3
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_DelayPORXLCD
  6453 ;;		_DelayXLCD
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text35
  6458  0024A0                     __ptext35:
  6459                           	opt stack 0
  6460  0024A0                     _Delay1KTCYx:
  6461                           	opt stack 24
  6462                           
  6463                           ;incstack = 0
  6464                           ;Delay1KTCYx@unit stored from wreg
  6465  0024A0  6E20               	movwf	Delay1KTCYx@unit,c
  6466  0024A2  0EC8               	movlw	200
  6467  0024A4                     u4667:
  6468  0024A4  D000               	nop2	
  6469  0024A6  2EE8               	decfsz	wreg,f,c
  6470  0024A8  D7FD               	bra	u4667
  6471  0024AA  2E20               	decfsz	Delay1KTCYx@unit,f,c
  6472  0024AC  D7FA               	goto	l3555
  6473  0024AE  0012               	return	
  6474  0024B0                     __end_of_Delay1KTCYx:
  6475                           	opt stack 0
  6476                           tblptru	equ	0xFF8
  6477                           tblptrh	equ	0xFF7
  6478                           tblptrl	equ	0xFF6
  6479                           tablat	equ	0xFF5
  6480                           prodh	equ	0xFF4
  6481                           prodl	equ	0xFF3
  6482                           intcon	equ	0xFF2
  6483                           postinc0	equ	0xFEE
  6484                           wreg	equ	0xFE8
  6485                           postdec1	equ	0xFE5
  6486                           fsr1l	equ	0xFE1
  6487                           indf2	equ	0xFDF
  6488                           postinc2	equ	0xFDE
  6489                           postdec2	equ	0xFDD
  6490                           plusw2	equ	0xFDB
  6491                           fsr2h	equ	0xFDA
  6492                           fsr2l	equ	0xFD9
  6493                           status	equ	0xFD8
  6494                           
  6495 ;; *************** function _Delay10KTCYx *****************
  6496 ;; Defined at:
  6497 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  unit            1    wreg     unsigned char 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  unit            1   32[COMRAM] unsigned char 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  1    wreg      void 
  6504 ;; Registers used:
  6505 ;;		wreg
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6511 ;;      Params:         0       0       0       0       0       0       0       0       0
  6512 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6513 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6514 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6515 ;;Total ram usage:        2 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    3
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		_OpenXLCD
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text36
  6526  002466                     __ptext36:
  6527                           	opt stack 0
  6528  002466                     _Delay10KTCYx:
  6529                           	opt stack 25
  6530                           
  6531                           ;incstack = 0
  6532                           ;Delay10KTCYx@unit stored from wreg
  6533  002466  6E21               	movwf	Delay10KTCYx@unit,c
  6534  002468  0E0D               	movlw	13
  6535  00246A  6E20               	movwf	??_Delay10KTCYx& (0+255),c
  6536  00246C  0EFC               	movlw	252
  6537  00246E                     u4677:
  6538  00246E  2EE8               	decfsz	wreg,f,c
  6539  002470  D7FE               	bra	u4677
  6540  002472  2E20               	decfsz	??_Delay10KTCYx& (0+255),f,c
  6541  002474  D7FC               	bra	u4677
  6542  002476  2E21               	decfsz	Delay10KTCYx@unit,f,c
  6543  002478  D7F7               	goto	l3957
  6544  00247A  0012               	return	
  6545  00247C                     __end_of_Delay10KTCYx:
  6546                           	opt stack 0
  6547                           tblptru	equ	0xFF8
  6548                           tblptrh	equ	0xFF7
  6549                           tblptrl	equ	0xFF6
  6550                           tablat	equ	0xFF5
  6551                           prodh	equ	0xFF4
  6552                           prodl	equ	0xFF3
  6553                           intcon	equ	0xFF2
  6554                           postinc0	equ	0xFEE
  6555                           wreg	equ	0xFE8
  6556                           postdec1	equ	0xFE5
  6557                           fsr1l	equ	0xFE1
  6558                           indf2	equ	0xFDF
  6559                           postinc2	equ	0xFDE
  6560                           postdec2	equ	0xFDD
  6561                           plusw2	equ	0xFDB
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _BusyXLCD *****************
  6567 ;; Defined at:
  6568 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      unsigned char 
  6575 ;; Registers used:
  6576 ;;		wreg, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6585 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    5
  6589 ;; This function calls:
  6590 ;;		_DelayFor18TCY
  6591 ;; This function is called by:
  6592 ;;		_InitXLCD
  6593 ;;		_LCD_Clear
  6594 ;;		_OpenXLCD
  6595 ;;		_putrsXLCD
  6596 ;;		_putsXLCD
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text37
  6601  0022CA                     __ptext37:
  6602                           	opt stack 0
  6603  0022CA                     _BusyXLCD:
  6604                           	opt stack 23
  6605                           
  6606                           ;incstack = 0
  6607  0022CA  8C8A               	bsf	3978,6,c	;volatile
  6608  0022CC  9A8A               	bcf	3978,5,c	;volatile
  6609  0022CE  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6610  0022D2  888A               	bsf	3978,4,c	;volatile
  6611  0022D4  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6612  0022D8  A681               	btfss	3969,3,c	;volatile
  6613  0022DA  D00A               	goto	l599
  6614  0022DC  988A               	bcf	3978,4,c	;volatile
  6615  0022DE  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6616  0022E2  888A               	bsf	3978,4,c	;volatile
  6617  0022E4  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6618  0022E8  988A               	bcf	3978,4,c	;volatile
  6619  0022EA  9C8A               	bcf	3978,6,c	;volatile
  6620  0022EC  0E01               	movlw	1
  6621  0022EE  0012               	return	
  6622  0022F0                     l599:
  6623  0022F0  988A               	bcf	3978,4,c	;volatile
  6624  0022F2  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6625  0022F6  888A               	bsf	3978,4,c	;volatile
  6626  0022F8  EC6F  F012         	call	_DelayFor18TCY	;wreg free
  6627  0022FC  988A               	bcf	3978,4,c	;volatile
  6628  0022FE  9C8A               	bcf	3978,6,c	;volatile
  6629  002300  0E00               	movlw	0
  6630  002302  0012               	return	
  6631  002304                     __end_of_BusyXLCD:
  6632                           	opt stack 0
  6633                           tblptru	equ	0xFF8
  6634                           tblptrh	equ	0xFF7
  6635                           tblptrl	equ	0xFF6
  6636                           tablat	equ	0xFF5
  6637                           prodh	equ	0xFF4
  6638                           prodl	equ	0xFF3
  6639                           intcon	equ	0xFF2
  6640                           postinc0	equ	0xFEE
  6641                           wreg	equ	0xFE8
  6642                           postdec1	equ	0xFE5
  6643                           fsr1l	equ	0xFE1
  6644                           indf2	equ	0xFDF
  6645                           postinc2	equ	0xFDE
  6646                           postdec2	equ	0xFDD
  6647                           plusw2	equ	0xFDB
  6648                           fsr2h	equ	0xFDA
  6649                           fsr2l	equ	0xFD9
  6650                           status	equ	0xFD8
  6651                           
  6652 ;; *************** function _DelayFor18TCY *****************
  6653 ;; Defined at:
  6654 ;;		line 4 in file "lcd.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      void 
  6661 ;; Registers used:
  6662 ;;		wreg, cstack
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6668 ;;      Params:         0       0       0       0       0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6671 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    4
  6675 ;; This function calls:
  6676 ;;		_Delay10TCYx
  6677 ;; This function is called by:
  6678 ;;		_BusyXLCD
  6679 ;;		_SetDDRamAddr
  6680 ;;		_WriteCmdXLCD
  6681 ;;		_WriteDataXLCD
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text38
  6686  0024DE                     __ptext38:
  6687                           	opt stack 0
  6688  0024DE                     _DelayFor18TCY:
  6689                           	opt stack 23
  6690                           
  6691                           ;lcd.c: 5: Delay10TCYx(120);
  6692                           
  6693                           ;incstack = 0
  6694  0024DE  0E78               	movlw	120
  6695  0024E0  EC58  F012         	call	_Delay10TCYx
  6696  0024E4  0012               	return		;funcret
  6697  0024E6                     __end_of_DelayFor18TCY:
  6698                           	opt stack 0
  6699                           tblptru	equ	0xFF8
  6700                           tblptrh	equ	0xFF7
  6701                           tblptrl	equ	0xFF6
  6702                           tablat	equ	0xFF5
  6703                           prodh	equ	0xFF4
  6704                           prodl	equ	0xFF3
  6705                           intcon	equ	0xFF2
  6706                           postinc0	equ	0xFEE
  6707                           wreg	equ	0xFE8
  6708                           postdec1	equ	0xFE5
  6709                           fsr1l	equ	0xFE1
  6710                           indf2	equ	0xFDF
  6711                           postinc2	equ	0xFDE
  6712                           postdec2	equ	0xFDD
  6713                           plusw2	equ	0xFDB
  6714                           fsr2h	equ	0xFDA
  6715                           fsr2l	equ	0xFD9
  6716                           status	equ	0xFD8
  6717                           
  6718 ;; *************** function _Delay10TCYx *****************
  6719 ;; Defined at:
  6720 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  unit            1    wreg     unsigned char 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  unit            1   31[COMRAM] unsigned char 
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  1    wreg      void 
  6727 ;; Registers used:
  6728 ;;		wreg
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6734 ;;      Params:         0       0       0       0       0       0       0       0       0
  6735 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6737 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6738 ;;Total ram usage:        1 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:    3
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_DelayFor18TCY
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text39
  6749  0024B0                     __ptext39:
  6750                           	opt stack 0
  6751  0024B0                     _Delay10TCYx:
  6752                           	opt stack 23
  6753                           
  6754                           ;incstack = 0
  6755                           ;Delay10TCYx@unit stored from wreg
  6756  0024B0  6E20               	movwf	Delay10TCYx@unit,c
  6757  0024B2  0E03               	movlw	3
  6758  0024B4                     u4687:
  6759  0024B4  2EE8               	decfsz	wreg,f,c
  6760  0024B6  D7FE               	bra	u4687
  6761  0024B8  F000               	nop	
  6762  0024BA  2E20               	decfsz	Delay10TCYx@unit,f,c
  6763  0024BC  D7FA               	goto	l3511
  6764  0024BE  0012               	return	
  6765  0024C0                     __end_of_Delay10TCYx:
  6766                           	opt stack 0
  6767                           tblptru	equ	0xFF8
  6768                           tblptrh	equ	0xFF7
  6769                           tblptrl	equ	0xFF6
  6770                           tablat	equ	0xFF5
  6771                           prodh	equ	0xFF4
  6772                           prodl	equ	0xFF3
  6773                           intcon	equ	0xFF2
  6774                           postinc0	equ	0xFEE
  6775                           wreg	equ	0xFE8
  6776                           postdec1	equ	0xFE5
  6777                           fsr1l	equ	0xFE1
  6778                           indf2	equ	0xFDF
  6779                           postinc2	equ	0xFDE
  6780                           postdec2	equ	0xFDD
  6781                           plusw2	equ	0xFDB
  6782                           fsr2h	equ	0xFDA
  6783                           fsr2l	equ	0xFD9
  6784                           status	equ	0xFD8
  6785                           
  6786 ;; *************** function _SerialRxPinInterrupt *****************
  6787 ;; Defined at:
  6788 ;;		line 122 in file "main.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;		None
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1    wreg      void 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6804 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6805 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6806 ;;Total ram usage:       14 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:    2
  6809 ;; This function calls:
  6810 ;;		_converte_char_hex
  6811 ;;		_tratar_relogio
  6812 ;; This function is called by:
  6813 ;;		Interrupt level 2
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           	psect	intcode
  6818  000008                     __pintcode:
  6819                           	opt stack 0
  6820  000008                     _SerialRxPinInterrupt:
  6821                           	opt stack 22
  6822                           
  6823                           ;incstack = 0
  6824  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6825  00000A  ED42  F00C         	call	int_func,f	;refresh shadow registers
  6826                           tblptru	equ	0xFF8
  6827                           tblptrh	equ	0xFF7
  6828                           tblptrl	equ	0xFF6
  6829                           tablat	equ	0xFF5
  6830                           prodh	equ	0xFF4
  6831                           prodl	equ	0xFF3
  6832                           intcon	equ	0xFF2
  6833                           postinc0	equ	0xFEE
  6834                           wreg	equ	0xFE8
  6835                           postdec1	equ	0xFE5
  6836                           fsr1l	equ	0xFE1
  6837                           indf2	equ	0xFDF
  6838                           postinc2	equ	0xFDE
  6839                           postdec2	equ	0xFDD
  6840                           plusw2	equ	0xFDB
  6841                           fsr2h	equ	0xFDA
  6842                           fsr2l	equ	0xFD9
  6843                           status	equ	0xFD8
  6844                           
  6845                           	psect	intcode_body
  6846  001884                     __pintcode_body:
  6847                           	opt stack 22
  6848  001884                     int_func:
  6849                           	opt stack 22
  6850  001884  0006               	pop		; remove dummy address from shadow register refresh
  6851  001886  CFFA F012          	movff	pclath,??_SerialRxPinInterrupt
  6852  00188A  CFFB F013          	movff	pclatu,??_SerialRxPinInterrupt+1
  6853  00188E  CFE9 F014          	movff	fsr0l,??_SerialRxPinInterrupt+2
  6854  001892  CFEA F015          	movff	fsr0h,??_SerialRxPinInterrupt+3
  6855  001896  CFE1 F016          	movff	fsr1l,??_SerialRxPinInterrupt+4
  6856  00189A  CFE2 F017          	movff	fsr1h,??_SerialRxPinInterrupt+5
  6857  00189E  CFD9 F018          	movff	fsr2l,??_SerialRxPinInterrupt+6
  6858  0018A2  CFDA F019          	movff	fsr2h,??_SerialRxPinInterrupt+7
  6859  0018A6  CFF3 F01A          	movff	prodl,??_SerialRxPinInterrupt+8
  6860  0018AA  CFF4 F01B          	movff	prodh,??_SerialRxPinInterrupt+9
  6861  0018AE  CFF6 F01C          	movff	tblptrl,??_SerialRxPinInterrupt+10
  6862  0018B2  CFF7 F01D          	movff	tblptrh,??_SerialRxPinInterrupt+11
  6863  0018B6  CFF8 F01E          	movff	tblptru,??_SerialRxPinInterrupt+12
  6864  0018BA  CFF5 F01F          	movff	tablat,??_SerialRxPinInterrupt+13
  6865                           
  6866                           ;main.c: 123: if(TMR0IF){
  6867  0018BE  A4F2               	btfss	intcon,2,c	;volatile
  6868  0018C0  D008               	goto	i2l3411
  6869                           
  6870                           ;main.c: 124: TMR0=2535;
  6871  0018C2  0E09               	movlw	9
  6872  0018C4  6ED7               	movwf	4055,c	;volatile
  6873  0018C6  0EE7               	movlw	231
  6874  0018C8  6ED6               	movwf	4054,c	;volatile
  6875                           
  6876                           ;main.c: 125: INTCONbits.TMR0IF=0;
  6877  0018CA  94F2               	bcf	intcon,2,c	;volatile
  6878                           
  6879                           ;main.c: 126: contador++;
  6880  0018CC  0100               	movlb	0	; () banked
  6881  0018CE  4B9B               	infsnz	_contador& (0+255),f,b
  6882  0018D0  2B9C               	incf	(_contador+1)& (0+255),f,b
  6883  0018D2                     i2l3411:
  6884                           
  6885                           ;main.c: 127: }
  6886                           ;main.c: 128: if(contador>1){
  6887  0018D2  0100               	movlb	0	; () banked
  6888  0018D4  BF9C               	btfsc	(_contador+1)& (0+255),7,b
  6889  0018D6  D026               	goto	i2l3423
  6890  0018D8  0100               	movlb	0	; () banked
  6891  0018DA  519C               	movf	(_contador+1)& (0+255),w,b
  6892  0018DC  E105               	bnz	i2u335_40
  6893  0018DE  0E02               	movlw	2
  6894  0018E0  0100               	movlb	0	; () banked
  6895  0018E2  5D9B               	subwf	_contador& (0+255),w,b
  6896  0018E4  A0D8               	btfss	status,0,c
  6897  0018E6  D01E               	goto	i2l3423
  6898  0018E8                     i2u335_40:
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;main.c: 129: if(flag_inicializacao == 1 ){
  6902  0018E8  0100               	movlb	0	; () banked
  6903  0018EA  05BE               	decf	_flag_inicializacao& (0+255),w,b
  6904  0018EC  0100               	movlb	0	; () banked
  6905  0018EE  11BF               	iorwf	(_flag_inicializacao+1)& (0+255),w,b
  6906  0018F0  A4D8               	btfss	status,2,c
  6907  0018F2  D004               	goto	i2l3417
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;main.c: 130: flag_inicializacao = -1;
  6911  0018F4  0100               	movlb	0	; () banked
  6912  0018F6  69BE               	setf	_flag_inicializacao& (0+255),b
  6913  0018F8  69BF               	setf	(_flag_inicializacao+1)& (0+255),b
  6914                           
  6915                           ;main.c: 131: }else{
  6916  0018FA  D014               	goto	i2l3423
  6917  0018FC                     i2l3417:
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;main.c: 132: tratar_relogio(&ca, &re);
  6921  0018FC  0E3A               	movlw	low _ca
  6922  0018FE  6E05               	movwf	tratar_relogio@c,c
  6923  001900  0E00               	movlw	high _ca
  6924  001902  6E06               	movwf	tratar_relogio@c+1,c
  6925  001904  0E34               	movlw	low _re
  6926  001906  6E07               	movwf	tratar_relogio@r,c
  6927  001908  0E00               	movlw	high _re
  6928  00190A  6E08               	movwf	tratar_relogio@r+1,c
  6929  00190C  EC08  F008         	call	_tratar_relogio	;wreg free
  6930                           
  6931                           ;main.c: 133: flagDisplay = 1;
  6932  001910  0E00               	movlw	0
  6933  001912  0100               	movlb	0	; () banked
  6934  001914  6FC1               	movwf	(_flagDisplay+1)& (0+255),b
  6935  001916  0E01               	movlw	1
  6936  001918  6FC0               	movwf	_flagDisplay& (0+255),b
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;main.c: 134: contador=0;
  6940  00191A  0E00               	movlw	0
  6941  00191C  0100               	movlb	0	; () banked
  6942  00191E  6F9C               	movwf	(_contador+1)& (0+255),b
  6943  001920  0E00               	movlw	0
  6944  001922  6F9B               	movwf	_contador& (0+255),b
  6945  001924                     i2l3423:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;main.c: 135: }
  6949                           ;main.c: 136: }
  6950                           ;main.c: 139: if(PIR1bits.RCIF == 1){
  6951  001924  AA9E               	btfss	3998,5,c	;volatile
  6952  001926  D01D               	goto	i2l121
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;main.c: 140: if(i<7){
  6956  001928  502B               	movf	_i+1,w,c
  6957  00192A  E114               	bnz	i2l3435
  6958  00192C  0E07               	movlw	7
  6959  00192E  5C2A               	subwf	_i,w,c
  6960  001930  B0D8               	btfsc	status,0,c
  6961  001932  D010               	goto	i2l3435
  6962  001934                     i2l117:
  6963  001934  AA9E               	btfss	3998,5,c	;volatile
  6964  001936  D7FE               	goto	i2l117
  6965                           
  6966                           ;main.c: 142: dado[i]= converte_char_hex(RCREG);
  6967  001938  0E9D               	movlw	low _dado
  6968  00193A  242A               	addwf	_i,w,c
  6969  00193C  6ED9               	movwf	fsr2l,c
  6970  00193E  0E00               	movlw	high _dado
  6971  001940  202B               	addwfc	_i+1,w,c
  6972  001942  6EDA               	movwf	fsr2h,c
  6973  001944  50AE               	movf	4014,w,c	;volatile
  6974  001946  EC73  F00F         	call	_converte_char_hex
  6975  00194A  6EDF               	movwf	indf2,c
  6976                           
  6977                           ;main.c: 143: i++;
  6978  00194C  4A2A               	infsnz	_i,f,c
  6979  00194E  2A2B               	incf	_i+1,f,c
  6980                           
  6981                           ;main.c: 145: ESTADO_COMUNICACAO = 0x01;
  6982  001950  0E01               	movlw	1
  6983  001952  6E2D               	movwf	_ESTADO_COMUNICACAO,c
  6984  001954                     i2l3435:
  6985                           
  6986                           ;main.c: 146: }
  6987                           ;main.c: 148: if(ESTADO_COMUNICACAO == 0x00){
  6988  001954  502D               	movf	_ESTADO_COMUNICACAO,w,c
  6989  001956  A4D8               	btfss	status,2,c
  6990  001958  D004               	goto	i2l121
  6991                           
  6992                           ;main.c: 149: i = 0;
  6993  00195A  0E00               	movlw	0
  6994  00195C  6E2B               	movwf	_i+1,c
  6995  00195E  0E00               	movlw	0
  6996  001960  6E2A               	movwf	_i,c
  6997  001962                     i2l121:
  6998  001962  C01F  FFF5         	movff	??_SerialRxPinInterrupt+13,tablat
  6999  001966  C01E  FFF8         	movff	??_SerialRxPinInterrupt+12,tblptru
  7000  00196A  C01D  FFF7         	movff	??_SerialRxPinInterrupt+11,tblptrh
  7001  00196E  C01C  FFF6         	movff	??_SerialRxPinInterrupt+10,tblptrl
  7002  001972  C01B  FFF4         	movff	??_SerialRxPinInterrupt+9,prodh
  7003  001976  C01A  FFF3         	movff	??_SerialRxPinInterrupt+8,prodl
  7004  00197A  C019  FFDA         	movff	??_SerialRxPinInterrupt+7,fsr2h
  7005  00197E  C018  FFD9         	movff	??_SerialRxPinInterrupt+6,fsr2l
  7006  001982  C017  FFE2         	movff	??_SerialRxPinInterrupt+5,fsr1h
  7007  001986  C016  FFE1         	movff	??_SerialRxPinInterrupt+4,fsr1l
  7008  00198A  C015  FFEA         	movff	??_SerialRxPinInterrupt+3,fsr0h
  7009  00198E  C014  FFE9         	movff	??_SerialRxPinInterrupt+2,fsr0l
  7010  001992  C013  FFFB         	movff	??_SerialRxPinInterrupt+1,pclatu
  7011  001996  C012  FFFA         	movff	??_SerialRxPinInterrupt,pclath
  7012  00199A  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7013  00199C  0011               	retfie		f
  7014  00199E                     __end_of_SerialRxPinInterrupt:
  7015                           	opt stack 0
  7016                           pclatu	equ	0xFFB
  7017                           pclath	equ	0xFFA
  7018                           tblptru	equ	0xFF8
  7019                           tblptrh	equ	0xFF7
  7020                           tblptrl	equ	0xFF6
  7021                           tablat	equ	0xFF5
  7022                           prodh	equ	0xFF4
  7023                           prodl	equ	0xFF3
  7024                           intcon	equ	0xFF2
  7025                           postinc0	equ	0xFEE
  7026                           fsr0h	equ	0xFEA
  7027                           fsr0l	equ	0xFE9
  7028                           wreg	equ	0xFE8
  7029                           postdec1	equ	0xFE5
  7030                           fsr1h	equ	0xFE2
  7031                           fsr1l	equ	0xFE1
  7032                           indf2	equ	0xFDF
  7033                           postinc2	equ	0xFDE
  7034                           postdec2	equ	0xFDD
  7035                           plusw2	equ	0xFDB
  7036                           fsr2h	equ	0xFDA
  7037                           fsr2l	equ	0xFD9
  7038                           status	equ	0xFD8
  7039                           
  7040 ;; *************** function _tratar_relogio *****************
  7041 ;; Defined at:
  7042 ;;		line 14 in file "relogio.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  c               2    4[COMRAM] PTR struct .
  7045 ;;		 -> ca(6), 
  7046 ;;  r               2    6[COMRAM] PTR struct .
  7047 ;;		 -> re(6), 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7059 ;;      Params:         4       0       0       0       0       0       0       0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7061 ;;      Temps:          9       0       0       0       0       0       0       0       0
  7062 ;;      Totals:        13       0       0       0       0       0       0       0       0
  7063 ;;Total ram usage:       13 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    1
  7066 ;; This function calls:
  7067 ;;		_verifica_b
  7068 ;; This function is called by:
  7069 ;;		_SerialRxPinInterrupt
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text41
  7074  001010                     __ptext41:
  7075                           	opt stack 0
  7076  001010                     _tratar_relogio:
  7077                           	opt stack 22
  7078                           
  7079                           ;relogio.c: 15: r->segundo++;
  7080                           
  7081                           ;incstack = 0
  7082  001010  EE20 F002          	lfsr	2,2
  7083  001014  5007               	movf	tratar_relogio@r,w,c
  7084  001016  26D9               	addwf	fsr2l,f,c
  7085  001018  5008               	movf	tratar_relogio@r+1,w,c
  7086  00101A  22DA               	addwfc	fsr2h,f,c
  7087  00101C  2ADE               	incf	postinc2,f,c
  7088  00101E  0E00               	movlw	0
  7089  001020  22DD               	addwfc	postdec2,f,c
  7090                           
  7091                           ;relogio.c: 16: verifica_b(c->ano);
  7092  001022  EE20 F004          	lfsr	2,4
  7093  001026  5005               	movf	tratar_relogio@c,w,c
  7094  001028  26D9               	addwf	fsr2l,f,c
  7095  00102A  5006               	movf	tratar_relogio@c+1,w,c
  7096  00102C  22DA               	addwfc	fsr2h,f,c
  7097  00102E  CFDE F001          	movff	postinc2,verifica_b@ano
  7098  001032  CFDD F002          	movff	postdec2,verifica_b@ano+1
  7099  001036  EC01  F012         	call	_verifica_b	;wreg free
  7100                           
  7101                           ;relogio.c: 17: if(tempoAlarme < 35 && flagAlarme == 1){
  7102  00103A  BE23               	btfsc	_tempoAlarme+1,7,c
  7103  00103C  D006               	goto	i2l3203
  7104  00103E  5023               	movf	_tempoAlarme+1,w,c
  7105  001040  E10B               	bnz	i2l3207
  7106  001042  0E23               	movlw	35
  7107  001044  5C22               	subwf	_tempoAlarme,w,c
  7108  001046  B0D8               	btfsc	status,0,c
  7109  001048  D007               	goto	i2l3207
  7110  00104A                     i2l3203:
  7111  00104A  0424               	decf	_flagAlarme,w,c
  7112  00104C  1025               	iorwf	_flagAlarme+1,w,c
  7113  00104E  A4D8               	btfss	status,2,c
  7114  001050  D003               	goto	i2l3207
  7115                           
  7116                           ;relogio.c: 18: tempoAlarme++;
  7117  001052  4A22               	infsnz	_tempoAlarme,f,c
  7118  001054  2A23               	incf	_tempoAlarme+1,f,c
  7119                           
  7120                           ;relogio.c: 19: }else{
  7121  001056  D004               	goto	i2l3209
  7122  001058                     i2l3207:
  7123                           
  7124                           ;relogio.c: 20: tempoAlarme = 0;
  7125  001058  0E00               	movlw	0
  7126  00105A  6E23               	movwf	_tempoAlarme+1,c
  7127  00105C  0E00               	movlw	0
  7128  00105E  6E22               	movwf	_tempoAlarme,c
  7129  001060                     i2l3209:
  7130                           
  7131                           ;relogio.c: 21: }
  7132                           ;relogio.c: 23: if(r->segundo > 59){
  7133  001060  EE20 F002          	lfsr	2,2
  7134  001064  5007               	movf	tratar_relogio@r,w,c
  7135  001066  26D9               	addwf	fsr2l,f,c
  7136  001068  5008               	movf	tratar_relogio@r+1,w,c
  7137  00106A  22DA               	addwfc	fsr2h,f,c
  7138  00106C  0E01               	movlw	1
  7139  00106E  BEDB               	btfsc	plusw2,7,c
  7140  001070  D018               	goto	i2l386
  7141  001072  0E01               	movlw	1
  7142  001074  50DB               	movf	plusw2,w,c
  7143  001076  E104               	bnz	i2u300_40
  7144  001078  0E3C               	movlw	60
  7145  00107A  5CDE               	subwf	postinc2,w,c
  7146  00107C  A0D8               	btfss	status,0,c
  7147  00107E  D011               	goto	i2l386
  7148  001080                     i2u300_40:
  7149                           
  7150                           ;relogio.c: 24: r->minuto++;
  7151  001080  C007  FFD9         	movff	tratar_relogio@r,fsr2l
  7152  001084  C008  FFDA         	movff	tratar_relogio@r+1,fsr2h
  7153  001088  2ADE               	incf	postinc2,f,c
  7154  00108A  0E00               	movlw	0
  7155  00108C  22DD               	addwfc	postdec2,f,c
  7156                           
  7157                           ;relogio.c: 25: r->segundo = 0;
  7158  00108E  EE20 F002          	lfsr	2,2
  7159  001092  5007               	movf	tratar_relogio@r,w,c
  7160  001094  26D9               	addwf	fsr2l,f,c
  7161  001096  5008               	movf	tratar_relogio@r+1,w,c
  7162  001098  22DA               	addwfc	fsr2h,f,c
  7163  00109A  0E00               	movlw	0
  7164  00109C  6EDE               	movwf	postinc2,c
  7165  00109E  0E00               	movlw	0
  7166  0010A0  6EDD               	movwf	postdec2,c
  7167  0010A2                     i2l386:
  7168                           
  7169                           ;relogio.c: 26: }
  7170                           ;relogio.c: 27: if(r->minuto > 59){
  7171  0010A2  C007  FFD9         	movff	tratar_relogio@r,fsr2l
  7172  0010A6  C008  FFDA         	movff	tratar_relogio@r+1,fsr2h
  7173  0010AA  0E01               	movlw	1
  7174  0010AC  BEDB               	btfsc	plusw2,7,c
  7175  0010AE  D018               	goto	i2l3217
  7176  0010B0  0E01               	movlw	1
  7177  0010B2  50DB               	movf	plusw2,w,c
  7178  0010B4  E104               	bnz	i2u301_40
  7179  0010B6  0E3C               	movlw	60
  7180  0010B8  5CDE               	subwf	postinc2,w,c
  7181  0010BA  A0D8               	btfss	status,0,c
  7182  0010BC  D011               	goto	i2l3217
  7183  0010BE                     i2u301_40:
  7184                           
  7185                           ;relogio.c: 28: r->hora++;
  7186  0010BE  EE20 F004          	lfsr	2,4
  7187  0010C2  5007               	movf	tratar_relogio@r,w,c
  7188  0010C4  26D9               	addwf	fsr2l,f,c
  7189  0010C6  5008               	movf	tratar_relogio@r+1,w,c
  7190  0010C8  22DA               	addwfc	fsr2h,f,c
  7191  0010CA  2ADE               	incf	postinc2,f,c
  7192  0010CC  0E00               	movlw	0
  7193  0010CE  22DD               	addwfc	postdec2,f,c
  7194                           
  7195                           ;relogio.c: 29: r->minuto = 0;
  7196  0010D0  C007  FFD9         	movff	tratar_relogio@r,fsr2l
  7197  0010D4  C008  FFDA         	movff	tratar_relogio@r+1,fsr2h
  7198  0010D8  0E00               	movlw	0
  7199  0010DA  6EDE               	movwf	postinc2,c
  7200  0010DC  0E00               	movlw	0
  7201  0010DE  6EDD               	movwf	postdec2,c
  7202  0010E0                     i2l3217:
  7203                           
  7204                           ;relogio.c: 30: }
  7205                           ;relogio.c: 31: if(r->hora > 23){
  7206  0010E0  EE20 F004          	lfsr	2,4
  7207  0010E4  5007               	movf	tratar_relogio@r,w,c
  7208  0010E6  26D9               	addwf	fsr2l,f,c
  7209  0010E8  5008               	movf	tratar_relogio@r+1,w,c
  7210  0010EA  22DA               	addwfc	fsr2h,f,c
  7211  0010EC  0E01               	movlw	1
  7212  0010EE  BEDB               	btfsc	plusw2,7,c
  7213  0010F0  D018               	goto	i2l3221
  7214  0010F2  0E01               	movlw	1
  7215  0010F4  50DB               	movf	plusw2,w,c
  7216  0010F6  E104               	bnz	i2u302_40
  7217  0010F8  0E18               	movlw	24
  7218  0010FA  5CDE               	subwf	postinc2,w,c
  7219  0010FC  A0D8               	btfss	status,0,c
  7220  0010FE  D011               	goto	i2l3221
  7221  001100                     i2u302_40:
  7222                           
  7223                           ;relogio.c: 32: c->dia++;
  7224  001100  C005  FFD9         	movff	tratar_relogio@c,fsr2l
  7225  001104  C006  FFDA         	movff	tratar_relogio@c+1,fsr2h
  7226  001108  2ADE               	incf	postinc2,f,c
  7227  00110A  0E00               	movlw	0
  7228  00110C  22DD               	addwfc	postdec2,f,c
  7229                           
  7230                           ;relogio.c: 33: r->hora = 0;
  7231  00110E  EE20 F004          	lfsr	2,4
  7232  001112  5007               	movf	tratar_relogio@r,w,c
  7233  001114  26D9               	addwf	fsr2l,f,c
  7234  001116  5008               	movf	tratar_relogio@r+1,w,c
  7235  001118  22DA               	addwfc	fsr2h,f,c
  7236  00111A  0E00               	movlw	0
  7237  00111C  6EDE               	movwf	postinc2,c
  7238  00111E  0E00               	movlw	0
  7239  001120  6EDD               	movwf	postdec2,c
  7240  001122                     i2l3221:
  7241                           
  7242                           ;relogio.c: 34: }
  7243                           ;relogio.c: 35: if(c->dia > qtdDias_mes[c->mes-1]){
  7244  001122  C005  FFD9         	movff	tratar_relogio@c,fsr2l
  7245  001126  C006  FFDA         	movff	tratar_relogio@c+1,fsr2h
  7246  00112A  0EFE               	movlw	254
  7247  00112C  6E0B               	movwf	(??_tratar_relogio+2)& (0+255),c
  7248  00112E  0EFF               	movlw	255
  7249  001130  6E0C               	movwf	(??_tratar_relogio+3)& (0+255),c
  7250  001132  EE10 F002          	lfsr	1,2
  7251  001136  5005               	movf	tratar_relogio@c,w,c
  7252  001138  26E1               	addwf	fsr1l,f,c
  7253  00113A  5006               	movf	tratar_relogio@c+1,w,c
  7254  00113C  22E2               	addwfc	fsr1h,f,c
  7255  00113E  CFE6 F00D          	movff	postinc1,??_tratar_relogio+4
  7256  001142  CFE5 F00E          	movff	postdec1,??_tratar_relogio+5
  7257  001146  90D8               	bcf	status,0,c
  7258  001148  360D               	rlcf	??_tratar_relogio+4,f,c
  7259  00114A  360E               	rlcf	??_tratar_relogio+5,f,c
  7260  00114C  500B               	movf	??_tratar_relogio+2,w,c
  7261  00114E  260D               	addwf	??_tratar_relogio+4,f,c
  7262  001150  500C               	movf	??_tratar_relogio+3,w,c
  7263  001152  220E               	addwfc	??_tratar_relogio+5,f,c
  7264  001154  0EA4               	movlw	low _qtdDias_mes
  7265  001156  240D               	addwf	??_tratar_relogio+4,w,c
  7266  001158  6EE1               	movwf	fsr1l,c
  7267  00115A  0E00               	movlw	high _qtdDias_mes
  7268  00115C  200E               	addwfc	??_tratar_relogio+5,w,c
  7269  00115E  6EE2               	movwf	fsr1h,c
  7270  001160  50DE               	movf	postinc2,w,c
  7271  001162  5CE6               	subwf	postinc1,w,c
  7272  001164  50E6               	movf	postinc1,w,c
  7273  001166  0A80               	xorlw	128
  7274  001168  6E11               	movwf	(??_tratar_relogio+8)& (0+255),c
  7275  00116A  50DE               	movf	postinc2,w,c
  7276  00116C  0A80               	xorlw	128
  7277  00116E  5811               	subwfb	(??_tratar_relogio+8)& (0+255),w,c
  7278  001170  B0D8               	btfsc	status,0,c
  7279  001172  D011               	goto	i2l3227
  7280                           
  7281                           ;relogio.c: 36: c->mes++;
  7282  001174  EE20 F002          	lfsr	2,2
  7283  001178  5005               	movf	tratar_relogio@c,w,c
  7284  00117A  26D9               	addwf	fsr2l,f,c
  7285  00117C  5006               	movf	tratar_relogio@c+1,w,c
  7286  00117E  22DA               	addwfc	fsr2h,f,c
  7287  001180  2ADE               	incf	postinc2,f,c
  7288  001182  0E00               	movlw	0
  7289  001184  22DD               	addwfc	postdec2,f,c
  7290                           
  7291                           ;relogio.c: 37: c->dia = 1;
  7292  001186  C005  FFD9         	movff	tratar_relogio@c,fsr2l
  7293  00118A  C006  FFDA         	movff	tratar_relogio@c+1,fsr2h
  7294  00118E  0E01               	movlw	1
  7295  001190  6EDE               	movwf	postinc2,c
  7296  001192  0E00               	movlw	0
  7297  001194  6EDD               	movwf	postdec2,c
  7298  001196                     i2l3227:
  7299                           
  7300                           ;relogio.c: 38: }
  7301                           ;relogio.c: 39: if(c->mes > 12){
  7302  001196  EE20 F002          	lfsr	2,2
  7303  00119A  5005               	movf	tratar_relogio@c,w,c
  7304  00119C  26D9               	addwf	fsr2l,f,c
  7305  00119E  5006               	movf	tratar_relogio@c+1,w,c
  7306  0011A0  22DA               	addwfc	fsr2h,f,c
  7307  0011A2  0E01               	movlw	1
  7308  0011A4  BEDB               	btfsc	plusw2,7,c
  7309  0011A6  D02E               	goto	i2l3235
  7310  0011A8  0E01               	movlw	1
  7311  0011AA  50DB               	movf	plusw2,w,c
  7312  0011AC  E104               	bnz	i2u304_40
  7313  0011AE  0E0D               	movlw	13
  7314  0011B0  5CDE               	subwf	postinc2,w,c
  7315  0011B2  A0D8               	btfss	status,0,c
  7316  0011B4  D027               	goto	i2l3235
  7317  0011B6                     i2u304_40:
  7318                           
  7319                           ;relogio.c: 40: c->ano++;
  7320  0011B6  EE20 F004          	lfsr	2,4
  7321  0011BA  5005               	movf	tratar_relogio@c,w,c
  7322  0011BC  26D9               	addwf	fsr2l,f,c
  7323  0011BE  5006               	movf	tratar_relogio@c+1,w,c
  7324  0011C0  22DA               	addwfc	fsr2h,f,c
  7325  0011C2  2ADE               	incf	postinc2,f,c
  7326  0011C4  0E00               	movlw	0
  7327  0011C6  22DD               	addwfc	postdec2,f,c
  7328                           
  7329                           ;relogio.c: 41: c->mes = 1;
  7330  0011C8  EE20 F002          	lfsr	2,2
  7331  0011CC  5005               	movf	tratar_relogio@c,w,c
  7332  0011CE  26D9               	addwf	fsr2l,f,c
  7333  0011D0  5006               	movf	tratar_relogio@c+1,w,c
  7334  0011D2  22DA               	addwfc	fsr2h,f,c
  7335  0011D4  0E01               	movlw	1
  7336  0011D6  6EDE               	movwf	postinc2,c
  7337  0011D8  0E00               	movlw	0
  7338  0011DA  6EDD               	movwf	postdec2,c
  7339                           
  7340                           ;relogio.c: 42: c->dia = 1;
  7341  0011DC  C005  FFD9         	movff	tratar_relogio@c,fsr2l
  7342  0011E0  C006  FFDA         	movff	tratar_relogio@c+1,fsr2h
  7343  0011E4  0E01               	movlw	1
  7344  0011E6  6EDE               	movwf	postinc2,c
  7345  0011E8  0E00               	movlw	0
  7346  0011EA  6EDD               	movwf	postdec2,c
  7347                           
  7348                           ;relogio.c: 43: verifica_b(c->ano);
  7349  0011EC  EE20 F004          	lfsr	2,4
  7350  0011F0  5005               	movf	tratar_relogio@c,w,c
  7351  0011F2  26D9               	addwf	fsr2l,f,c
  7352  0011F4  5006               	movf	tratar_relogio@c+1,w,c
  7353  0011F6  22DA               	addwfc	fsr2h,f,c
  7354  0011F8  CFDE F001          	movff	postinc2,verifica_b@ano
  7355  0011FC  CFDD F002          	movff	postdec2,verifica_b@ano+1
  7356  001200  EC01  F012         	call	_verifica_b	;wreg free
  7357  001204                     i2l3235:
  7358                           
  7359                           ;relogio.c: 44: }
  7360                           ;relogio.c: 45: if(c->dia < 1){
  7361  001204  C005  FFD9         	movff	tratar_relogio@c,fsr2l
  7362  001208  C006  FFDA         	movff	tratar_relogio@c+1,fsr2h
  7363  00120C  0E01               	movlw	1
  7364  00120E  BEDB               	btfsc	plusw2,7,c
  7365  001210  D006               	goto	i2l3237
  7366  001212  0E01               	movlw	1
  7367  001214  50DB               	movf	plusw2,w,c
  7368  001216  E12F               	bnz	i2l3241
  7369  001218  04DE               	decf	postinc2,w,c
  7370  00121A  B0D8               	btfsc	status,0,c
  7371  00121C  D02C               	goto	i2l3241
  7372  00121E                     i2l3237:
  7373                           
  7374                           ;relogio.c: 46: c->dia = qtdDias_mes[c->mes -2];
  7375  00121E  0EFC               	movlw	252
  7376  001220  6E09               	movwf	??_tratar_relogio& (0+255),c
  7377  001222  0EFF               	movlw	255
  7378  001224  6E0A               	movwf	(??_tratar_relogio+1)& (0+255),c
  7379  001226  EE20 F002          	lfsr	2,2
  7380  00122A  5005               	movf	tratar_relogio@c,w,c
  7381  00122C  26D9               	addwf	fsr2l,f,c
  7382  00122E  5006               	movf	tratar_relogio@c+1,w,c
  7383  001230  22DA               	addwfc	fsr2h,f,c
  7384  001232  CFDE F00B          	movff	postinc2,??_tratar_relogio+2
  7385  001236  CFDD F00C          	movff	postdec2,??_tratar_relogio+3
  7386  00123A  90D8               	bcf	status,0,c
  7387  00123C  360B               	rlcf	??_tratar_relogio+2,f,c
  7388  00123E  360C               	rlcf	??_tratar_relogio+3,f,c
  7389  001240  5009               	movf	??_tratar_relogio,w,c
  7390  001242  260B               	addwf	??_tratar_relogio+2,f,c
  7391  001244  500A               	movf	??_tratar_relogio+1,w,c
  7392  001246  220C               	addwfc	??_tratar_relogio+3,f,c
  7393  001248  0EA4               	movlw	low _qtdDias_mes
  7394  00124A  240B               	addwf	??_tratar_relogio+2,w,c
  7395  00124C  6ED9               	movwf	fsr2l,c
  7396  00124E  0E00               	movlw	high _qtdDias_mes
  7397  001250  200C               	addwfc	??_tratar_relogio+3,w,c
  7398  001252  6EDA               	movwf	fsr2h,c
  7399  001254  C005  FFE1         	movff	tratar_relogio@c,fsr1l
  7400  001258  C006  FFE2         	movff	tratar_relogio@c+1,fsr1h
  7401  00125C  CFDE FFE6          	movff	postinc2,postinc1
  7402  001260  CFDD FFE5          	movff	postdec2,postdec1
  7403                           
  7404                           ;relogio.c: 47: c->mes--;
  7405  001264  EE20 F002          	lfsr	2,2
  7406  001268  5005               	movf	tratar_relogio@c,w,c
  7407  00126A  26D9               	addwf	fsr2l,f,c
  7408  00126C  5006               	movf	tratar_relogio@c+1,w,c
  7409  00126E  22DA               	addwfc	fsr2h,f,c
  7410  001270  06DE               	decf	postinc2,f,c
  7411  001272  0E00               	movlw	0
  7412  001274  5ADD               	subwfb	postdec2,f,c
  7413  001276                     i2l3241:
  7414                           
  7415                           ;relogio.c: 48: }
  7416                           ;relogio.c: 49: if(c->mes < 1){
  7417  001276  EE20 F002          	lfsr	2,2
  7418  00127A  5005               	movf	tratar_relogio@c,w,c
  7419  00127C  26D9               	addwf	fsr2l,f,c
  7420  00127E  5006               	movf	tratar_relogio@c+1,w,c
  7421  001280  22DA               	addwfc	fsr2h,f,c
  7422  001282  0E01               	movlw	1
  7423  001284  BEDB               	btfsc	plusw2,7,c
  7424  001286  D006               	goto	i2l3243
  7425  001288  0E01               	movlw	1
  7426  00128A  50DB               	movf	plusw2,w,c
  7427  00128C  E122               	bnz	i2l3247
  7428  00128E  04DE               	decf	postinc2,w,c
  7429  001290  B0D8               	btfsc	status,0,c
  7430  001292  D01F               	goto	i2l3247
  7431  001294                     i2l3243:
  7432                           
  7433                           ;relogio.c: 50: c->mes = 12;
  7434  001294  EE20 F002          	lfsr	2,2
  7435  001298  5005               	movf	tratar_relogio@c,w,c
  7436  00129A  26D9               	addwf	fsr2l,f,c
  7437  00129C  5006               	movf	tratar_relogio@c+1,w,c
  7438  00129E  22DA               	addwfc	fsr2h,f,c
  7439  0012A0  0E0C               	movlw	12
  7440  0012A2  6EDE               	movwf	postinc2,c
  7441  0012A4  0E00               	movlw	0
  7442  0012A6  6EDD               	movwf	postdec2,c
  7443                           
  7444                           ;relogio.c: 51: c->ano--;
  7445  0012A8  EE20 F004          	lfsr	2,4
  7446  0012AC  5005               	movf	tratar_relogio@c,w,c
  7447  0012AE  26D9               	addwf	fsr2l,f,c
  7448  0012B0  5006               	movf	tratar_relogio@c+1,w,c
  7449  0012B2  22DA               	addwfc	fsr2h,f,c
  7450  0012B4  06DE               	decf	postinc2,f,c
  7451  0012B6  0E00               	movlw	0
  7452  0012B8  5ADD               	subwfb	postdec2,f,c
  7453                           
  7454                           ;relogio.c: 52: verifica_b(c->ano);
  7455  0012BA  EE20 F004          	lfsr	2,4
  7456  0012BE  5005               	movf	tratar_relogio@c,w,c
  7457  0012C0  26D9               	addwf	fsr2l,f,c
  7458  0012C2  5006               	movf	tratar_relogio@c+1,w,c
  7459  0012C4  22DA               	addwfc	fsr2h,f,c
  7460  0012C6  CFDE F001          	movff	postinc2,verifica_b@ano
  7461  0012CA  CFDD F002          	movff	postdec2,verifica_b@ano+1
  7462  0012CE  EC01  F012         	call	_verifica_b	;wreg free
  7463  0012D2                     i2l3247:
  7464                           
  7465                           ;relogio.c: 53: }
  7466                           ;relogio.c: 55: if(c->ano < 0) c->ano = 0;
  7467  0012D2  EE20 F004          	lfsr	2,4
  7468  0012D6  5005               	movf	tratar_relogio@c,w,c
  7469  0012D8  26D9               	addwf	fsr2l,f,c
  7470  0012DA  5006               	movf	tratar_relogio@c+1,w,c
  7471  0012DC  22DA               	addwfc	fsr2h,f,c
  7472  0012DE  0E01               	movlw	1
  7473  0012E0  AEDB               	btfss	plusw2,7,c
  7474  0012E2  D00A               	goto	i2l393
  7475  0012E4  EE20 F004          	lfsr	2,4
  7476  0012E8  5005               	movf	tratar_relogio@c,w,c
  7477  0012EA  26D9               	addwf	fsr2l,f,c
  7478  0012EC  5006               	movf	tratar_relogio@c+1,w,c
  7479  0012EE  22DA               	addwfc	fsr2h,f,c
  7480  0012F0  0E00               	movlw	0
  7481  0012F2  6EDE               	movwf	postinc2,c
  7482  0012F4  0E00               	movlw	0
  7483  0012F6  6EDD               	movwf	postdec2,c
  7484  0012F8                     i2l393:
  7485                           
  7486                           ;relogio.c: 57: if(r->hora < 0){
  7487  0012F8  EE20 F004          	lfsr	2,4
  7488  0012FC  5007               	movf	tratar_relogio@r,w,c
  7489  0012FE  26D9               	addwf	fsr2l,f,c
  7490  001300  5008               	movf	tratar_relogio@r+1,w,c
  7491  001302  22DA               	addwfc	fsr2h,f,c
  7492  001304  0E01               	movlw	1
  7493  001306  AEDB               	btfss	plusw2,7,c
  7494  001308  D011               	goto	i2l394
  7495                           
  7496                           ;relogio.c: 58: c->dia--;
  7497  00130A  C005  FFD9         	movff	tratar_relogio@c,fsr2l
  7498  00130E  C006  FFDA         	movff	tratar_relogio@c+1,fsr2h
  7499  001312  06DE               	decf	postinc2,f,c
  7500  001314  0E00               	movlw	0
  7501  001316  5ADD               	subwfb	postdec2,f,c
  7502                           
  7503                           ;relogio.c: 59: r->hora = 23;
  7504  001318  EE20 F004          	lfsr	2,4
  7505  00131C  5007               	movf	tratar_relogio@r,w,c
  7506  00131E  26D9               	addwf	fsr2l,f,c
  7507  001320  5008               	movf	tratar_relogio@r+1,w,c
  7508  001322  22DA               	addwfc	fsr2h,f,c
  7509  001324  0E17               	movlw	23
  7510  001326  6EDE               	movwf	postinc2,c
  7511  001328  0E00               	movlw	0
  7512  00132A  6EDD               	movwf	postdec2,c
  7513  00132C                     i2l394:
  7514                           
  7515                           ;relogio.c: 60: }
  7516                           ;relogio.c: 62: if(r->minuto < 0){
  7517  00132C  C007  FFD9         	movff	tratar_relogio@r,fsr2l
  7518  001330  C008  FFDA         	movff	tratar_relogio@r+1,fsr2h
  7519  001334  0E01               	movlw	1
  7520  001336  AEDB               	btfss	plusw2,7,c
  7521  001338  D011               	goto	i2l3257
  7522                           
  7523                           ;relogio.c: 63: r->minuto = 59;
  7524  00133A  C007  FFD9         	movff	tratar_relogio@r,fsr2l
  7525  00133E  C008  FFDA         	movff	tratar_relogio@r+1,fsr2h
  7526  001342  0E3B               	movlw	59
  7527  001344  6EDE               	movwf	postinc2,c
  7528  001346  0E00               	movlw	0
  7529  001348  6EDD               	movwf	postdec2,c
  7530                           
  7531                           ;relogio.c: 64: r->hora--;
  7532  00134A  EE20 F004          	lfsr	2,4
  7533  00134E  5007               	movf	tratar_relogio@r,w,c
  7534  001350  26D9               	addwf	fsr2l,f,c
  7535  001352  5008               	movf	tratar_relogio@r+1,w,c
  7536  001354  22DA               	addwfc	fsr2h,f,c
  7537  001356  06DE               	decf	postinc2,f,c
  7538  001358  0E00               	movlw	0
  7539  00135A  5ADD               	subwfb	postdec2,f,c
  7540  00135C                     i2l3257:
  7541                           
  7542                           ;relogio.c: 65: }
  7543                           ;relogio.c: 67: if(r->segundo < 0){
  7544  00135C  EE20 F002          	lfsr	2,2
  7545  001360  5007               	movf	tratar_relogio@r,w,c
  7546  001362  26D9               	addwf	fsr2l,f,c
  7547  001364  5008               	movf	tratar_relogio@r+1,w,c
  7548  001366  22DA               	addwfc	fsr2h,f,c
  7549  001368  0E01               	movlw	1
  7550  00136A  AEDB               	btfss	plusw2,7,c
  7551  00136C  0012               	return	
  7552                           
  7553                           ;relogio.c: 68: r->segundo = 59;
  7554  00136E  EE20 F002          	lfsr	2,2
  7555  001372  5007               	movf	tratar_relogio@r,w,c
  7556  001374  26D9               	addwf	fsr2l,f,c
  7557  001376  5008               	movf	tratar_relogio@r+1,w,c
  7558  001378  22DA               	addwfc	fsr2h,f,c
  7559  00137A  0E3B               	movlw	59
  7560  00137C  6EDE               	movwf	postinc2,c
  7561  00137E  0E00               	movlw	0
  7562  001380  6EDD               	movwf	postdec2,c
  7563                           
  7564                           ;relogio.c: 69: r->minuto--;
  7565  001382  C007  FFD9         	movff	tratar_relogio@r,fsr2l
  7566  001386  C008  FFDA         	movff	tratar_relogio@r+1,fsr2h
  7567  00138A  06DE               	decf	postinc2,f,c
  7568  00138C  0E00               	movlw	0
  7569  00138E  5ADD               	subwfb	postdec2,f,c
  7570  001390  0012               	return	
  7571  001392                     __end_of_tratar_relogio:
  7572                           	opt stack 0
  7573                           pclatu	equ	0xFFB
  7574                           pclath	equ	0xFFA
  7575                           tblptru	equ	0xFF8
  7576                           tblptrh	equ	0xFF7
  7577                           tblptrl	equ	0xFF6
  7578                           tablat	equ	0xFF5
  7579                           prodh	equ	0xFF4
  7580                           prodl	equ	0xFF3
  7581                           intcon	equ	0xFF2
  7582                           postinc0	equ	0xFEE
  7583                           fsr0h	equ	0xFEA
  7584                           fsr0l	equ	0xFE9
  7585                           wreg	equ	0xFE8
  7586                           postinc1	equ	0xFE6
  7587                           postdec1	equ	0xFE5
  7588                           fsr1h	equ	0xFE2
  7589                           fsr1l	equ	0xFE1
  7590                           indf2	equ	0xFDF
  7591                           postinc2	equ	0xFDE
  7592                           postdec2	equ	0xFDD
  7593                           plusw2	equ	0xFDB
  7594                           fsr2h	equ	0xFDA
  7595                           fsr2l	equ	0xFD9
  7596                           status	equ	0xFD8
  7597                           
  7598 ;; *************** function _verifica_b *****************
  7599 ;; Defined at:
  7600 ;;		line 6 in file "relogio.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  ano             2    0[COMRAM] int 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;		None
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7614 ;;      Params:         2       0       0       0       0       0       0       0       0
  7615 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7616 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7617 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7618 ;;Total ram usage:        4 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_tratar_relogio
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text42
  7628  002402                     __ptext42:
  7629                           	opt stack 0
  7630  002402                     _verifica_b:
  7631                           	opt stack 22
  7632                           
  7633                           ;relogio.c: 7: if(ano%4==0){
  7634                           
  7635                           ;incstack = 0
  7636  002402  0E03               	movlw	3
  7637  002404  1401               	andwf	verifica_b@ano,w,c
  7638  002406  6E03               	movwf	??_verifica_b& (0+255),c
  7639  002408  0E00               	movlw	0
  7640  00240A  1402               	andwf	verifica_b@ano+1,w,c
  7641  00240C  6E04               	movwf	(??_verifica_b+1)& (0+255),c
  7642  00240E  5003               	movf	??_verifica_b,w,c
  7643  002410  1004               	iorwf	??_verifica_b+1,w,c
  7644  002412  A4D8               	btfss	status,2,c
  7645  002414  D006               	goto	i2l2991
  7646                           
  7647                           ;relogio.c: 8: qtdDias_mes[1] = 29;
  7648  002416  0E00               	movlw	0
  7649  002418  0100               	movlb	0	; () banked
  7650  00241A  6FA7               	movwf	(_qtdDias_mes+3)& (0+255),b
  7651  00241C  0E1D               	movlw	29
  7652  00241E  6FA6               	movwf	(_qtdDias_mes+2)& (0+255),b
  7653                           
  7654                           ;relogio.c: 9: }else{
  7655  002420  0012               	return	
  7656  002422                     i2l2991:
  7657                           
  7658                           ;relogio.c: 10: qtdDias_mes[1] = 28;
  7659  002422  0E00               	movlw	0
  7660  002424  0100               	movlb	0	; () banked
  7661  002426  6FA7               	movwf	(_qtdDias_mes+3)& (0+255),b
  7662  002428  0E1C               	movlw	28
  7663  00242A  6FA6               	movwf	(_qtdDias_mes+2)& (0+255),b
  7664  00242C  0012               	return	
  7665  00242E                     __end_of_verifica_b:
  7666                           	opt stack 0
  7667                           pclatu	equ	0xFFB
  7668                           pclath	equ	0xFFA
  7669                           tblptru	equ	0xFF8
  7670                           tblptrh	equ	0xFF7
  7671                           tblptrl	equ	0xFF6
  7672                           tablat	equ	0xFF5
  7673                           prodh	equ	0xFF4
  7674                           prodl	equ	0xFF3
  7675                           intcon	equ	0xFF2
  7676                           postinc0	equ	0xFEE
  7677                           fsr0h	equ	0xFEA
  7678                           fsr0l	equ	0xFE9
  7679                           wreg	equ	0xFE8
  7680                           postinc1	equ	0xFE6
  7681                           postdec1	equ	0xFE5
  7682                           fsr1h	equ	0xFE2
  7683                           fsr1l	equ	0xFE1
  7684                           indf2	equ	0xFDF
  7685                           postinc2	equ	0xFDE
  7686                           postdec2	equ	0xFDD
  7687                           plusw2	equ	0xFDB
  7688                           fsr2h	equ	0xFDA
  7689                           fsr2l	equ	0xFD9
  7690                           status	equ	0xFD8
  7691                           
  7692 ;; *************** function _converte_char_hex *****************
  7693 ;; Defined at:
  7694 ;;		line 52 in file "UART.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  dado            1    wreg     unsigned char 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  dado            1    0[COMRAM] unsigned char 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  1    wreg      unsigned char 
  7701 ;; Registers used:
  7702 ;;		wreg, status,2, status,0
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7708 ;;      Params:         0       0       0       0       0       0       0       0       0
  7709 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7711 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7712 ;;Total ram usage:        1 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_SerialRxPinInterrupt
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text43
  7722  001EE6                     __ptext43:
  7723                           	opt stack 0
  7724  001EE6                     _converte_char_hex:
  7725                           	opt stack 23
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;incstack = 0
  7729                           ;converte_char_hex@dado stored from wreg
  7730  001EE6  6E01               	movwf	converte_char_hex@dado,c
  7731                           
  7732                           ;UART.c: 53: if(dado == 0x31) return 0x01;
  7733  001EE8  0E31               	movlw	49
  7734  001EEA  1801               	xorwf	converte_char_hex@dado,w,c
  7735  001EEC  A4D8               	btfss	status,2,c
  7736  001EEE  D002               	goto	i2l3267
  7737  001EF0  0E01               	movlw	1
  7738  001EF2  0012               	return	
  7739  001EF4                     i2l3267:
  7740                           
  7741                           ;UART.c: 54: if(dado == 0x32) return 0x02;
  7742  001EF4  0E32               	movlw	50
  7743  001EF6  1801               	xorwf	converte_char_hex@dado,w,c
  7744  001EF8  A4D8               	btfss	status,2,c
  7745  001EFA  D002               	goto	i2l3273
  7746  001EFC  0E02               	movlw	2
  7747  001EFE  0012               	return	
  7748  001F00                     i2l3273:
  7749                           
  7750                           ;UART.c: 55: if(dado == 0x33) return 0x03;
  7751  001F00  0E33               	movlw	51
  7752  001F02  1801               	xorwf	converte_char_hex@dado,w,c
  7753  001F04  A4D8               	btfss	status,2,c
  7754  001F06  D002               	goto	i2l3279
  7755  001F08  0E03               	movlw	3
  7756  001F0A  0012               	return	
  7757  001F0C                     i2l3279:
  7758                           
  7759                           ;UART.c: 56: if(dado == 0x34) return 0x04;
  7760  001F0C  0E34               	movlw	52
  7761  001F0E  1801               	xorwf	converte_char_hex@dado,w,c
  7762  001F10  A4D8               	btfss	status,2,c
  7763  001F12  D002               	goto	i2l3285
  7764  001F14  0E04               	movlw	4
  7765  001F16  0012               	return	
  7766  001F18                     i2l3285:
  7767                           
  7768                           ;UART.c: 57: if(dado == 0x35) return 0x05;
  7769  001F18  0E35               	movlw	53
  7770  001F1A  1801               	xorwf	converte_char_hex@dado,w,c
  7771  001F1C  A4D8               	btfss	status,2,c
  7772  001F1E  D002               	goto	i2l3291
  7773  001F20  0E05               	movlw	5
  7774  001F22  0012               	return	
  7775  001F24                     i2l3291:
  7776                           
  7777                           ;UART.c: 58: if(dado == 0x36) return 0x06;
  7778  001F24  0E36               	movlw	54
  7779  001F26  1801               	xorwf	converte_char_hex@dado,w,c
  7780  001F28  A4D8               	btfss	status,2,c
  7781  001F2A  D002               	goto	i2l3297
  7782  001F2C  0E06               	movlw	6
  7783  001F2E  0012               	return	
  7784  001F30                     i2l3297:
  7785                           
  7786                           ;UART.c: 59: if(dado == 0x37) return 0x07;
  7787  001F30  0E37               	movlw	55
  7788  001F32  1801               	xorwf	converte_char_hex@dado,w,c
  7789  001F34  A4D8               	btfss	status,2,c
  7790  001F36  D002               	goto	i2l3303
  7791  001F38  0E07               	movlw	7
  7792  001F3A  0012               	return	
  7793  001F3C                     i2l3303:
  7794                           
  7795                           ;UART.c: 60: if(dado == 0x38) return 0x08;
  7796  001F3C  0E38               	movlw	56
  7797  001F3E  1801               	xorwf	converte_char_hex@dado,w,c
  7798  001F40  A4D8               	btfss	status,2,c
  7799  001F42  D002               	goto	i2l3309
  7800  001F44  0E08               	movlw	8
  7801  001F46  0012               	return	
  7802  001F48                     i2l3309:
  7803                           
  7804                           ;UART.c: 61: if(dado == 0x39) return 0x09;
  7805  001F48  0E39               	movlw	57
  7806  001F4A  1801               	xorwf	converte_char_hex@dado,w,c
  7807  001F4C  A4D8               	btfss	status,2,c
  7808  001F4E  0012               	return	
  7809  001F50  0E09               	movlw	9
  7810  001F52  0012               	return	
  7811  001F54                     __end_of_converte_char_hex:
  7812                           	opt stack 0
  7813                           pclatu	equ	0xFFB
  7814                           pclath	equ	0xFFA
  7815                           tblptru	equ	0xFF8
  7816                           tblptrh	equ	0xFF7
  7817                           tblptrl	equ	0xFF6
  7818                           tablat	equ	0xFF5
  7819                           prodh	equ	0xFF4
  7820                           prodl	equ	0xFF3
  7821                           intcon	equ	0xFF2
  7822                           postinc0	equ	0xFEE
  7823                           fsr0h	equ	0xFEA
  7824                           fsr0l	equ	0xFE9
  7825                           wreg	equ	0xFE8
  7826                           postinc1	equ	0xFE6
  7827                           postdec1	equ	0xFE5
  7828                           fsr1h	equ	0xFE2
  7829                           fsr1l	equ	0xFE1
  7830                           indf2	equ	0xFDF
  7831                           postinc2	equ	0xFDE
  7832                           postdec2	equ	0xFDD
  7833                           plusw2	equ	0xFDB
  7834                           fsr2h	equ	0xFDA
  7835                           fsr2l	equ	0xFD9
  7836                           status	equ	0xFD8
  7837                           pclatu	equ	0xFFB
  7838                           pclath	equ	0xFFA
  7839                           tblptru	equ	0xFF8
  7840                           tblptrh	equ	0xFF7
  7841                           tblptrl	equ	0xFF6
  7842                           tablat	equ	0xFF5
  7843                           prodh	equ	0xFF4
  7844                           prodl	equ	0xFF3
  7845                           intcon	equ	0xFF2
  7846                           postinc0	equ	0xFEE
  7847                           fsr0h	equ	0xFEA
  7848                           fsr0l	equ	0xFE9
  7849                           wreg	equ	0xFE8
  7850                           postinc1	equ	0xFE6
  7851                           postdec1	equ	0xFE5
  7852                           fsr1h	equ	0xFE2
  7853                           fsr1l	equ	0xFE1
  7854                           indf2	equ	0xFDF
  7855                           postinc2	equ	0xFDE
  7856                           postdec2	equ	0xFDD
  7857                           plusw2	equ	0xFDB
  7858                           fsr2h	equ	0xFDA
  7859                           fsr2l	equ	0xFD9
  7860                           status	equ	0xFD8
  7861                           
  7862                           	psect	rparam
  7863  0000                     pclatu	equ	0xFFB
  7864                           pclath	equ	0xFFA
  7865                           tblptru	equ	0xFF8
  7866                           tblptrh	equ	0xFF7
  7867                           tblptrl	equ	0xFF6
  7868                           tablat	equ	0xFF5
  7869                           prodh	equ	0xFF4
  7870                           prodl	equ	0xFF3
  7871                           intcon	equ	0xFF2
  7872                           postinc0	equ	0xFEE
  7873                           fsr0h	equ	0xFEA
  7874                           fsr0l	equ	0xFE9
  7875                           wreg	equ	0xFE8
  7876                           postinc1	equ	0xFE6
  7877                           postdec1	equ	0xFE5
  7878                           fsr1h	equ	0xFE2
  7879                           fsr1l	equ	0xFE1
  7880                           indf2	equ	0xFDF
  7881                           postinc2	equ	0xFDE
  7882                           postdec2	equ	0xFDD
  7883                           plusw2	equ	0xFDB
  7884                           fsr2h	equ	0xFDA
  7885                           fsr2l	equ	0xFD9
  7886                           status	equ	0xFD8
  7887                           
  7888                           	psect	temp
  7889  000040                     btemp:
  7890                           	opt stack 0
  7891  000040                     	ds	1
  7892  0000                     int$flags	set	btemp
  7893                           pclatu	equ	0xFFB
  7894                           pclath	equ	0xFFA
  7895                           tblptru	equ	0xFF8
  7896                           tblptrh	equ	0xFF7
  7897                           tblptrl	equ	0xFF6
  7898                           tablat	equ	0xFF5
  7899                           prodh	equ	0xFF4
  7900                           prodl	equ	0xFF3
  7901                           intcon	equ	0xFF2
  7902                           postinc0	equ	0xFEE
  7903                           fsr0h	equ	0xFEA
  7904                           fsr0l	equ	0xFE9
  7905                           wreg	equ	0xFE8
  7906                           postinc1	equ	0xFE6
  7907                           postdec1	equ	0xFE5
  7908                           fsr1h	equ	0xFE2
  7909                           fsr1l	equ	0xFE1
  7910                           indf2	equ	0xFDF
  7911                           postinc2	equ	0xFDE
  7912                           postdec2	equ	0xFDD
  7913                           plusw2	equ	0xFDB
  7914                           fsr2h	equ	0xFDA
  7915                           fsr2l	equ	0xFD9
  7916                           status	equ	0xFD8


Data Sizes:
    Strings     207
    Constant    10
    Data        24
    BSS         58
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      63
    BANK0           160     40      98
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    crc16@dados	PTR unsigned char  size(2) Largest target is 7
		 -> dado(BANK0[7]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 9
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[9]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_20(CODE[12]), STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[10]), 
		 -> STR_16(CODE[11]), STR_15(CODE[10]), STR_14(CODE[10]), STR_13(CODE[9]), 
		 -> STR_12(CODE[18]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[15]), 
		 -> STR_4(CODE[17]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    tratar_alarme@c	PTR struct . size(2) Largest target is 6
		 -> alarme(COMRAM[6]), 

    tratar_relogio@c	PTR struct . size(2) Largest target is 6
		 -> ca(COMRAM[6]), 

    tratar_relogio@r	PTR struct . size(2) Largest target is 6
		 -> re(COMRAM[6]), 

    sp__exibirAlarme	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    exibirAlarme@string	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__exibirHora	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    exibirHora@string	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__exibirData	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    exibirData@string	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_ajustarT1
    _main->_despertar
    _verifica_comando->_crc16
    _envia_respostaTX->_tx_data
    _despertarAlarme->_SetDDRamAddr
    _despertarAlarme->_WriteCmdXLCD
    _inicializaTela2->_SetDDRamAddr
    _inicializaTela2->_WriteCmdXLCD
    _putsXLCD->_WriteDataXLCD
    _exibirAlarme->_sprintf
    _controlaCursor->_SetDDRamAddr
    _inicializaTela1->_SetDDRamAddr
    _inicializaTela1->_WriteCmdXLCD
    _putrsXLCD->_WriteDataXLCD
    _exibirHora->_sprintf
    _exibirData->_sprintf
    _sprintf->___lwmod
    _controlaCursorR->_SetDDRamAddr
    _controlaCursorR->_WriteCmdXLCD
    _ajustarAlarme->_tratar_alarme
    _LCD_Clear->_WriteCmdXLCD
    _OpenXLCD->_Delay10KTCYx
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _SerialRxPinInterrupt in COMRAM

    _SerialRxPinInterrupt->_tratar_relogio
    _tratar_relogio->_verifica_b

Critical Paths under _main in BANK0

    _main->_atualiza_tela
    _despertarAlarme->_SetDDRamAddr
    _inicializaTela2->_putrsXLCD
    _exibirAlarme->_sprintf
    _controlaCursor->_SetDDRamAddr
    _inicializaTela1->_putrsXLCD
    _putrsXLCD->_exibirAlarme
    _putrsXLCD->_exibirData
    _putrsXLCD->_exibirHora
    _exibirHora->_sprintf
    _exibirData->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _controlaCursorR->_SetDDRamAddr
    _ajustarAlarme->_tratar_alarme
    _InitXLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _SerialRxPinInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SerialRxPinInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SerialRxPinInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SerialRxPinInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SerialRxPinInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SerialRxPinInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SerialRxPinInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SerialRxPinInterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   33953
                                             38 BANK0      2     2      0
                           _InitXLCD
                          _LCD_Clear
                      _ajustarAlarme
                          _ajustarT1
                      _atualiza_tela
                          _despertar
                    _despertarAlarme
                    _inicializaTela1
                    _inicializarUART
                     _maquina_estado
 ---------------------------------------------------------------------------------
 (1) _maquina_estado                                       0     0      0      86
                   _envia_respostaTX
                      _trata_comando
                   _verifica_comando
 ---------------------------------------------------------------------------------
 (2) _verifica_comando                                     0     0      0      64
                              _crc16
 ---------------------------------------------------------------------------------
 (3) _crc16                                                2     0      2      64
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _trata_comando                                        0     0      0       0
                    _montar_resposta
                _realizar_alteracoes
 ---------------------------------------------------------------------------------
 (3) _realizar_alteracoes                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _montar_resposta                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _envia_respostaTX                                     0     0      0      22
                            _tx_data
 ---------------------------------------------------------------------------------
 (3) _tx_data                                              1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarUART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _despertarAlarme                                      0     0      0     606
                       _SetDDRamAddr
                       _WriteCmdXLCD
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (1) _despertar                                            2     0      2       0
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _atualiza_tela                                        2     2      0   19871
                                             36 BANK0      2     2      0
                    _inicializaTela1
                    _inicializaTela2
 ---------------------------------------------------------------------------------
 (2) _inicializaTela2                                      0     0      0    7395
                       _SetDDRamAddr
                       _WriteCmdXLCD
                     _controlaCursor
                       _exibirAlarme
                          _putrsXLCD
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     0      2     420
                                              0 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _exibirAlarme                                         6     0      6    6276
                                             28 BANK0      6     0      6
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _controlaCursor                                       2     2      0      93
                                              3 BANK0      2     2      0
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (1) _inicializaTela1                                      0     0      0   12476
                       _SetDDRamAddr
                       _WriteCmdXLCD
                    _controlaCursorR
                         _exibirData
                         _exibirHora
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     420
                                             34 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
                       _exibirAlarme (ARG)
                         _exibirData (ARG)
                         _exibirHora (ARG)
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      93
                                             32 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _exibirHora                                           6     0      6    6276
                                             28 BANK0      6     0      6
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _exibirData                                           6     0      6    5408
                                             28 BANK0      6     0      6
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    17     10    4557
                                             32 COMRAM     1     1      0
                                             11 BANK0     17     7     10
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             31 COMRAM     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _controlaCursorR                                      2     2      0     186
                                              3 BANK0      2     2      0
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _ajustarT1                                            2     2      0       0
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ajustarAlarme                                        2     2      0     449
                                              2 BANK0      2     2      0
                      _tratar_alarme
 ---------------------------------------------------------------------------------
 (2) _tratar_alarme                                        4     2      2     449
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     124
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _InitXLCD                                             0     0      0     341
                           _BusyXLCD
                           _OpenXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     310
                                              3 BANK0      1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteCmdXLCD                                         1     1      0      93
                                             32 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      93
                                             32 COMRAM     1     1      0
                                              0 BANK0      3     3      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      31
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      31
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      31
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0      31
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (5) _Delay10TCYx                                          1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _SerialRxPinInterrupt                                14    14      0    1398
                                             17 COMRAM    14    14      0
                  _converte_char_hex
                     _tratar_relogio
 ---------------------------------------------------------------------------------
 (8) _tratar_relogio                                      13     9      4    1200
                                              4 COMRAM    13     9      4
                         _verifica_b
 ---------------------------------------------------------------------------------
 (9) _verifica_b                                           4     2      2     214
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _converte_char_hex                                    1     1      0     198
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitXLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
   _LCD_Clear
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _ajustarAlarme
     _tratar_alarme
   _ajustarT1
   _atualiza_tela
     _inicializaTela1
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _controlaCursorR
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _WriteCmdXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _exibirData
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _exibirHora
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _exibirAlarme (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
         _exibirData (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
         _exibirHora (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
     _inicializaTela2
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _controlaCursor
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
       _exibirAlarme
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _exibirAlarme (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
         _exibirData (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
         _exibirHora (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
       _putsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
   _despertar
   _despertarAlarme
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _putsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
   _inicializaTela1
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _controlaCursorR
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _exibirData
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _exibirHora
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _exibirAlarme (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _exibirData (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _exibirHora (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
   _inicializarUART
   _maquina_estado
     _envia_respostaTX
       _tx_data
     _trata_comando
       _montar_resposta
       _realizar_alteracoes
     _verifica_comando
       _crc16

 _SerialRxPinInterrupt (ROOT)
   _converte_char_hex
   _tratar_relogio
     _verifica_b

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      62       5       61.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      3F       1       67.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1      20        0.0%
DATA                 0      0      A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Jan 10 13:23:53 2022

      __size_of_controlaCursor 0044                              _i 002A       __size_of_controlaCursorR 008A  
                           l91 14C6                             _T1 0099                             _T2 0097  
                           l97 1522                             l89 14CA                             _ca 003A  
                           _re 0034               ?_inicializaTela1 0001               ?_inicializaTela2 0001  
             ??_maquina_estado 0022               ?_inicializarUART 0001                            l400 19D2  
                          l402 1A32                            l403 1A58                            l323 1B0C  
                          l316 1B10                            l333 1B8A                            l291 1BD6  
                          l532 2076                            l524 2010                            l534 2084  
                          l526 2024                            l287 1BDA                            l535 2092  
                          l527 2038                            l298 1C26                            l485 24C2  
                          l599 22F0          __size_of_WriteCmdXLCD 003E                            wreg 000FE8  
                _trata_comando 214E                           l1126 1EDC                           l1136 2004  
                         l3001 2150                           l3011 217A                           l3003 2156  
                         l3005 215C                           l3111 1B5A                           l3103 1B3A  
                         l3015 2180                           l3009 2162                           l4003 1C72  
                         l3115 1B6A                           l3107 1B4A                           l4021 1CBE  
                         l4013 1C9E                           l4005 1C7C                           l4101 1BBC  
                         l3119 1B7A                           l4025 1CCE                           l4017 1CAE  
                         l4009 1C8E                           l4105 1BC8                           l3081 1AD4  
                         l4041 1E24                           l4115 1C08                           l4123 1C2A  
                         l3093 1AFE                           l3085 1AE2                           l3077 1AC6  
                         l4037 1E0E                           l3181 20C0                           l4213 1578  
                         l4205 154C                           l3511 24B2                           l4071 2494  
                         l4119 1C16                           l3167 220A                           l3183 20C6  
                         l4215 157E                           l4065 1A76                           l4057 19FE  
                         l3089 1AF0                           l4081 23AE                           l4217 1586  
                         l4209 1560                           l3523 1E8C                           l4075 23A2  
                         l3187 20D0                           l3179 20BA                           l3195 20E0  
                         l4163 1462                           l3525 1E98                           l4077 23A8  
                         l3189 20D6                           l3535 1ECE                           l3527 1E9E  
                         l3551 1FF8                           l3543 1FC4                           l4191 150A  
                         l4089 247C                           l3545 1FCE                           l4169 147C  
                         l3555 24A2                           l3547 1FD4                           l3651 15B8  
                         l4195 1526                           l3645 159A                           l3821 0D86  
                         l3733 2194                           l3741 21AC                           l3901 0AA4  
                         l3751 1D74                           l3831 0E0E                           l3815 0D2A  
                         l3735 219C                           l3911 0B2C                           l3903 0ABA  
                         l3761 1D9C                           l3753 1D7C                           l3681 1654  
                         l3657 15E8                           l3841 0EB0                           l3833 0E3E  
                         l3825 0DCC                           l3817 0D5A                           l3809 0CE8  
                         l3737 21A4                           l3921 0BB4                           l2873 20A0  
                         l3763 1DA4                           l3755 1D84                           l3667 1618  
                         l3851 0F38                           l3843 0EC6                           l3835 0E54  
                         l3931 0C3C                           l3915 0B58                           l2867 204C  
                         l3757 1D8C                           l3749 1D6C                           l3669 161E  
                         l3861 0FC0                           l3853 0F4E                           l3829 0DF8  
                         l3933 0C6C                           l3925 0BFA                           l3917 0B88  
                         l3909 0B16                           l3759 1D94                           l3767 1DAC  
                         l3695 16D4                           l3687 1672                           l3791 181E  
                         l3783 1792                           l3863 0FD6                           l3847 0EF2  
                         l3927 0C10                           l3919 0B9E                           l3689 1678  
                         l3697 16E0                           l3793 1834                           l3785 17C2  
                         l3865 1006                           l3857 0F94                           l3849 0F22  
                         l3945 23F2                           l3929 0C26                           l3699 16FC  
                         l3795 184A                           l3787 17D8                           l3779 1766  
                         l3859 0FAA                           l3939 23D4                           l3883 0990  
                         l3955 2326                           l3957 2468                           l3797 187A  
                         l3893 0A32                           l3885 09C0                           l3877 094E  
                         l3949 2306                           l2997 2448                           l3969 1D08  
                         l3897 0A5E                           l3889 09EC                           l3899 0A74  
                         STR_1 08B1                           STR_2 0871                           STR_3 0861  
                         STR_4 081D                           STR_5 08C0                           STR_6 0881  
                         STR_7 0891                           STR_8 082E                           STR_9 08A1  
                         _BRGH 007D62                           u4100 0BCA                           u4030 0AD0  
                         u4040 0AE6                           u4300 1A1E                           u4060 0B42  
                         u3600 177C                           u3700 0D14                           u3630 17EE  
                         u4510 1502                           u4280 19BE                           u3800 0E80  
                         u3720 0D70                           u4520 151A                           u4290 19EE  
                         _PEIE 007F96                           u3580 1720                           u3820 0EDC  
                         u3740 0D9C                           u3660 0C8C                           u3900 08F2  
                         u3590 1736                           u3750 0DE2                           u3670 0CA2  
                         u3910 0908                           u3495 1F70                           u4607 148E  
                         u3680 0CB8                           u3920 091E                           u4480 14BC  
                         u4617 14DC                           u3690 0CFE                           u3930 0964  
                         u4627 1AAC                           _RCIE 007CED                           u3860 0F64  
                         u3940 097A                           _RCIF 007CF5                           u4637 1B1E  
                         u3790 0E6A                           u4647 1BA2                           u3960 09D6  
                         u4657 1BEC                           u4667 24A4                           u3980 0A02  
                         u4677 246E                           u3990 0A48                           _RCIP 007CFD  
                         u4687 24B4                           _TMR0 000FD6                           _TXIF 007CF4  
                         _dado 009D                           _main 1392             __size_of_LCD_Clear 0012  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr2h 000FDA  
                         fsr0l 000FE9                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 0040         __size_of_WriteDataXLCD 003E  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
                _tratar_alarme 199E                   ___param_bank 000000                ??_ajustarAlarme 0062  
                  _Delay10TCYx 24B0      __size_of_envia_respostaTX 003A                  _atualiza_tela 23A0  
                 _WriteCmdXLCD 2252                    _Delay1KTCYx 24A0                  ?_SetDDRamAddr 0001  
                        ?_main 0001                          STR_10 083F                          STR_11 0850  
                        STR_20 0811                          STR_12 080B                          STR_13 08C6  
                        STR_21 08CF                          STR_14 0887                          STR_22 08D8  
                        STR_23 08D6                          STR_15 0897                          STR_16 0834  
                        STR_17 08A7                          STR_18 0845                          STR_19 0856  
              __end_of___lwdiv 1EE6                          i2l121 1962                __end_of___lwmod 200E  
                        i2l117 1934                          i2l393 12F8                          i2l394 132C  
                        i2l386 10A2                          _RCREG 000FAE                          _RCSTA 000FAB  
                        _SPBRG 000FAF                          _PORTB 000F81                          _TRISB 000F93  
                        _TRISD 000F95                          _TXREG 000FAD          __size_of_Delay10KTCYx 0016  
                        _TXSTA 000FAC                 ?_trata_comando 0001                          _crc16 24CC  
              __end_of_dpowers 080B                          pclath 000FFA                          tablat 000FF5  
                        plusw2 000FDB               ?_montar_resposta 0001                __end_of_tx_data 24CC  
                        status 000FD8                __end_of_sprintf 170A                 ?_tratar_alarme 0020  
              __initialization 2108               exibirHora@string 0091              ??_despertarAlarme 0022  
                 __end_of_main 158C                 ?_atualiza_tela 0001               __end_of_BusyXLCD 2304  
               _tratar_relogio 1010               __end_of_InitXLCD 24A0              ?_verifica_comando 0001  
                 _Delay10KTCYx 2466          __size_of_DelayPORXLCD 0008                 ??_SetDDRamAddr 0060  
                ?_exibirAlarme 007C             ??_verifica_comando 0022               __end_of_OpenXLCD 1CE0  
                       ??_main 0086              __end_of_LCD_Clear 248E                  __activetblptr 000002  
                _WriteDataXLCD 2214              ??_controlaCursorR 0063                         ?_crc16 0020  
                verifica_b@ano 0001                         i2l3203 104A                         i2l3221 1122  
                       i2l3303 1F3C                         i2l3207 1058                         i2l3241 1276  
                       i2l3217 10E0                         i2l3209 1060                         i2l3243 1294  
                       i2l3235 1204                         i2l3227 1196                         i2l3411 18D2  
                       i2l3309 1F48                         i2l3237 121E                         i2l3247 12D2  
                       i2l3423 1924                         i2l3273 1F00                         i2l3257 135C  
                       i2l3417 18FC                         i2l3291 1F24                         i2l3267 1EF4  
                       i2l3435 1954                         i2l3285 1F18                         i2l3279 1F0C  
                       i2l3297 1F30                         i2l2991 2422                         _TMR0IF 007F92  
                  exibirHora@h 007C                    exibirHora@m 007E                    exibirHora@s 0080  
                 _DelayPORXLCD 24D6         __end_of_tratar_relogio 1392                 _controlaCursor 2192  
                       _alarme 002E                      ??___lwdiv 0020                      ??___lwmod 0020  
                       _entrar 0095                 ??_exibirAlarme 0022                         clear_0 212E  
                       clear_1 213A                 ?_WriteDataXLCD 0001                ??_trata_comando 0020  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               __end_of_putsXLCD 233A                      ??_tx_data 0020  
                    ??_sprintf 0021                     __accesstop 0060        __end_of__initialization 2140  
              ??_tratar_alarme 0060                __CFG_PBADEN$OFF 000000                  ___rparam_used 000001  
       __end_of_controlaCursor 21D6  __size_of_SerialRxPinInterrupt 1996                ??_atualiza_tela 0084  
              ?_tratar_relogio 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 244E  
                __end_of_crc16 24D6               _envia_respostaTX 2290             __size_of_despertar 003E  
           __size_of_ajustarT1 00F2                        ??_crc16 0022   __size_of_realizar_alteracoes 0056  
                   crc16@dados 0020         __size_of_DelayFor18TCY 0008                     __pbssBANK0 0088  
                    ?_BusyXLCD 0001                      ?_InitXLCD 0001                WriteCmdXLCD@cmd 0021  
         __end_of_SetDDRamAddr 1FB2             _flag_inicializacao 00BE                      ?_OpenXLCD 0001  
              ?_controlaCursor 0001                     _flagAlarme 0024              WriteDataXLCD@data 0021  
            _converte_char_hex 1EE6                   ?_Delay10TCYx 0001             ?_converte_char_hex 0001  
              ??_WriteDataXLCD 0021                   ?_Delay1KTCYx 0001            ??_converte_char_hex 0001  
     __size_of_inicializaTela1 008A       __size_of_inicializaTela2 007A       __size_of_inicializarUART 0032  
           __size_of_putrsXLCD 0030                     ??_BusyXLCD 0021                     ??_InitXLCD 0022  
              _despertarAlarme 233A           __end_of_exibirAlarme 0C76                     ??_OpenXLCD 0022  
    __end_of_converte_char_hex 1F54                        __Hparam 0000                        __Lparam 0000  
            __end_of_despertar 2214              __end_of_ajustarT1 1B90                _controlaCursorR 1D6A  
                   _exibirData 170A                     _exibirHora 0C76                  _DelayFor18TCY 24DE  
                    ?_putsXLCD 0060                        ___lwdiv 1E6E                        ___lwmod 1FB2  
                 __psmallconst 0800          __end_of_ajustarAlarme 1C38                        __pcinit 2108  
              putrsXLCD@buffer 0082                Delay10TCYx@unit 0020                        __ramtop 0800  
                      __ptext0 1392                        __ptext1 20B8                        __ptext2 242E  
                      __ptext3 24CC                        __ptext4 214E                        __ptext5 200E  
                      __ptext6 2064                        __ptext7 2290                        __ptext8 24C0  
                      __ptext9 236E                      _T0CONbits 000FD5                        _dpowers 0801  
                    _LCD_Clear 247C                        _tx_data 24C0        __size_of_maquina_estado 0050  
                      _sprintf 158C      __size_of_verifica_comando 0020                 __pintcode_body 1884  
         end_of_initialization 2140             _ESTADO_COMUNICACAO 002D                  __Lmediumconst 0000  
                      int_func 1884                     _posCursorR 0026                      _RCSTAbits 000FAB  
               ?_DelayFor18TCY 0001       __size_of_montar_resposta 0054                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     ??_putsXLCD 0022              __end_of_putrsXLCD 2402  
                    _PORTDbits 000F83                     _verifica_b 2402        __end_of_despertarAlarme 236E  
                    _TRISBbits 000F93                      _TRISCbits 000F94                     ?_LCD_Clear 0001  
        __size_of_SetDDRamAddr 005E       __end_of_envia_respostaTX 22CA              ??_inicializaTela1 0022  
            ??_inicializaTela2 0022               ??_tratar_relogio 0009        __end_of_controlaCursorR 1DF4  
            ??_inicializarUART 0020                      _TXSTAbits 000FAC     __size_of_converte_char_hex 006E  
                  ?_exibirData 007C            _realizar_alteracoes 200E                    ?_exibirHora 007C  
         __size_of_Delay10TCYx 0010                   _SetDDRamAddr 1F54           __size_of_Delay1KTCYx 0010  
 __end_of_SerialRxPinInterrupt 199E             SetDDRamAddr@DDaddr 0021          __end_of_trata_comando 2192  
          start_initialization 2108          __size_of_exibirAlarme 039A           ?_realizar_alteracoes 0001  
             ??_controlaCursor 0063              __size_of_BusyXLCD 003A              __size_of_InitXLCD 0012  
        __end_of_tratar_alarme 1A9E                ??_DelayFor18TCY 0021              __size_of_OpenXLCD 00A8  
        __end_of_atualiza_tela 23D2                    tx_data@data 0020                  ?_WriteCmdXLCD 0001  
                  __pdataBANK0 00A4                   _exibirAlarme 08DC              ??_montar_resposta 0020  
                  ?_verifica_b 0001                    __pbssCOMRAM 0022                  __pcstackBANK0 0060  
             ?_despertarAlarme 0001          ??_realizar_alteracoes 0020                    ??_LCD_Clear 0022  
               _maquina_estado 20B8               _verifica_comando 242E                tratar_relogio@c 0005  
              tratar_relogio@r 0007            __size_of_exibirData 017A            __size_of_exibirHora 039A  
              Delay1KTCYx@unit 0020                    sprintf@flag 0077                    sprintf@prec 0078  
             ?_controlaCursorR 0001                      __pnvBANK0 00BC                 putsXLCD@buffer 0060  
             ___lwdiv@dividend 0060                      __pintcode 0008                 ??_WriteCmdXLCD 0021  
                  _flagDisplay 00C0                  ?_Delay10KTCYx 0001                       ?___lwdiv 0060  
                     ?___lwmod 0067                      _despertar 21D6                      _ajustarT1 1A9E  
            __size_of_putsXLCD 0036          __end_of_WriteDataXLCD 2252                    __smallconst 0800  
       __end_of_maquina_estado 2108                 __size_of_crc16 000A               ___lwdiv@quotient 0065  
                     ?_tx_data 0001                       ?_sprintf 006B                       _BUFFRESP 0088  
                     _LATBbits 000F8A                  ?_DelayPORXLCD 0001           _SerialRxPinInterrupt 0008  
                     i2u300_40 1080                       i2u301_40 10BE                       i2u302_40 1100  
                    _posCursor 0028                       i2u304_40 11B6                       i2u335_40 18E8  
          __size_of_verifica_b 002C                       _PIR1bits 000F9E                OpenXLCD@lcdtype 0063  
               ??_Delay10KTCYx 0020                  exibirData@dia 007C                  exibirData@ano 0080  
                exibirData@mes 007E                     ?_despertar 0020                     ?_ajustarT1 0001  
                exibirAlarme@h 007C                  exibirAlarme@m 007E                  exibirAlarme@s 0080  
                    _putrsXLCD 23D2                _inicializaTela1 1CE0                _inicializaTela2 1DF4  
              ?_maquina_estado 0001                _inicializarUART 236E               Delay10KTCYx@unit 0021  
                    copy_data0 211C              ?_envia_respostaTX 0001                       _BusyXLCD 22CA  
                     _InitXLCD 248E         __size_of_ajustarAlarme 00A8             ??_envia_respostaTX 0021  
               tratar_alarme@c 0020                 ??_DelayPORXLCD 0021          ?_SerialRxPinInterrupt 0001  
                     _OpenXLCD 1C38                       __Hrparam 0000                       __Lrparam 0000  
                 ??_exibirData 0022                   ??_exibirHora 0022               __size_of___lwdiv 0078  
             __size_of___lwmod 005C                     sprintf@val 0079                     ?_putrsXLCD 0082  
              ___lwdiv@divisor 0062                       _flagTela 00BC                ___lwdiv@counter 0064  
                     __ptext10 233A                       __ptext11 21D6                       __ptext20 0C76  
                     __ptext12 23A0                       __ptext21 170A                       __ptext13 1DF4  
                     __ptext30 248E                       __ptext22 158C                       __ptext14 2304  
                     __ptext31 1C38                       __ptext23 1FB2                       __ptext15 08DC  
                     __ptext32 2252                       __ptext24 1E6E                       __ptext16 2192  
                     __ptext41 1010                       __ptext33 1F54                       __ptext25 1D6A  
                     __ptext17 1CE0                       __ptext42 2402                       __ptext34 24D6  
                     __ptext26 1A9E                       __ptext18 23D2                       __ptext43 1EE6  
                     __ptext35 24A0                       __ptext27 1B90                       __ptext19 2214  
                     __ptext36 2466                       __ptext28 199E                       __ptext37 22CA  
                     __ptext29 247C                       __ptext38 24DE                       __ptext39 24B0  
         __end_of_WriteCmdXLCD 2290               __size_of_tx_data 000C                       _contador 009B  
             __size_of_sprintf 017E             __end_of_exibirData 1884             __end_of_exibirHora 1010  
                __size_of_main 01FA                _montar_resposta 2064                  ??_Delay10TCYx 0020  
                     int$flags 0040       __end_of_verifica_comando 244E                       _putsXLCD 2304  
                  ??_despertar 0022                  ??_Delay1KTCYx 0020                    ??_ajustarT1 0020  
      __end_of_inicializaTela1 1D6A        __end_of_inicializaTela2 1E6E        __end_of_inicializarUART 23A0  
                _ajustarAlarme 1B90                   ??_verifica_b 0003                     _INTCONbits 000FF2  
                  _qtdDias_mes 00A4           __end_of_Delay10KTCYx 247C                       intlevel2 0000  
                    sprintf@ap 0075                      sprintf@sp 006B               ___lwmod@dividend 0067  
       ??_SerialRxPinInterrupt 0012             exibirAlarme@string 008F          converte_char_hex@dado 0001  
                  _serial_data 002C         __size_of_trata_comando 0044             __end_of_verifica_b 242E  
        __end_of_DelayFor18TCY 24E6                    _tempoAlarme 0022        __size_of_tratar_relogio 0382  
               ?_ajustarAlarme 0001    __end_of_realizar_alteracoes 2064            __end_of_Delay10TCYx 24C0  
                     sprintf@c 007B                       sprintf@f 006D               exibirData@string 0093  
         __end_of_DelayPORXLCD 24DE                    ??_putrsXLCD 0022                ___lwmod@divisor 0069  
          __end_of_Delay1KTCYx 24B0                ___lwmod@counter 0020         __size_of_tratar_alarme 0100  
       __size_of_atualiza_tela 0032        __end_of_montar_resposta 20B8       __size_of_despertarAlarme 0034  
