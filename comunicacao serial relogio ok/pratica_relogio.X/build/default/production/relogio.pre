
# 1 "relogio.c"

# 1 "relogio.h"
typedef struct{
int dia;
int mes;
int ano;
}calendario;

typedef struct{
int minuto;
int segundo;
int hora;
}relogio;

void tratar_relogio(calendario *c, relogio *r);
void verifica_b(int ano);
void tratar_alarme(relogio *c);
int despertar();

# 1
typedef struct{
int dia;
int mes;
int ano;
}calendario;

typedef struct{
int minuto;
int segundo;
int hora;
}relogio;

void tratar_relogio(calendario *c, relogio *r);
void verifica_b(int ano);
void tratar_alarme(relogio *c);
int despertar();

# 21 "var.h"
unsigned char ESTADO_COMUNICACAO;
unsigned char serial_data;
unsigned int i ;
unsigned char dado[7];
unsigned char BUFFRESP[7];



calendario ca;
relogio re;
relogio alarme;
int flagDisplay;
int flag_inicializacao;
int contador;

int flagTela;
int T1, T2;
int posCursor;
int posCursorR;
int flagAlarme;
int tempoAlarme;
int entrar;

# 4 "relogio.c"
int qtdDias_mes[] = {31,28,31,30,31,30,31,31,30,31,30,31};

void verifica_b(int ano){
if(ano%4==0){
qtdDias_mes[1] = 29;
}else{
qtdDias_mes[1] = 28;
}
}

void tratar_relogio(calendario *c, relogio *r){
r->segundo++;
verifica_b(c->ano);
if(tempoAlarme < 35 && flagAlarme == 1){
tempoAlarme++;
}else{
tempoAlarme = 0;
}

if(r->segundo > 59){
r->minuto++;
r->segundo = 0;
}
if(r->minuto > 59){
r->hora++;
r->minuto = 0;
}
if(r->hora > 23){
c->dia++;
r->hora = 0;
}
if(c->dia > qtdDias_mes[c->mes-1]){
c->mes++;
c->dia = 1;
}
if(c->mes > 12){
c->ano++;
c->mes = 1;
c->dia = 1;
verifica_b(c->ano);
}
if(c->dia < 1){
c->dia = qtdDias_mes[c->mes -2];
c->mes--;
}
if(c->mes < 1){
c->mes = 12;
c->ano--;
verifica_b(c->ano);
}

if(c->ano < 0) c->ano = 0;

if(r->hora < 0){
c->dia--;
r->hora = 23;
}

if(r->minuto < 0){
r->minuto = 59;
r->hora--;
}

if(r->segundo < 0){
r->segundo = 59;
r->minuto--;
}



}

void tratar_alarme(relogio *c){
if(c->hora > 23) c->hora = 0;

if(c->minuto > 59) c->minuto = 0;

if(c->segundo > 59) c->segundo = 0;

if(c->hora < 0) c->hora = 23;

if(c->minuto < 0) c->minuto = 59;

if(c->segundo < 0) c->segundo = 59;

}

int despertar(){
if(re.hora == alarme.hora && re.minuto == alarme.minuto && re.segundo == alarme.segundo){
return 1;
}else{
return 0;
}

}
